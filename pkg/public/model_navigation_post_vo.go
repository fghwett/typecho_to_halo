/*
Halo

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.20.18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package public_sdk

import (
	"encoding/json"
)

// checks if the NavigationPostVo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NavigationPostVo{}

// NavigationPostVo struct for NavigationPostVo
type NavigationPostVo struct {
	Current *PostVo `json:"current,omitempty"`
	Next *PostVo `json:"next,omitempty"`
	Previous *PostVo `json:"previous,omitempty"`
}

// NewNavigationPostVo instantiates a new NavigationPostVo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNavigationPostVo() *NavigationPostVo {
	this := NavigationPostVo{}
	return &this
}

// NewNavigationPostVoWithDefaults instantiates a new NavigationPostVo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNavigationPostVoWithDefaults() *NavigationPostVo {
	this := NavigationPostVo{}
	return &this
}

// GetCurrent returns the Current field value if set, zero value otherwise.
func (o *NavigationPostVo) GetCurrent() PostVo {
	if o == nil || IsNil(o.Current) {
		var ret PostVo
		return ret
	}
	return *o.Current
}

// GetCurrentOk returns a tuple with the Current field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NavigationPostVo) GetCurrentOk() (*PostVo, bool) {
	if o == nil || IsNil(o.Current) {
		return nil, false
	}
	return o.Current, true
}

// HasCurrent returns a boolean if a field has been set.
func (o *NavigationPostVo) HasCurrent() bool {
	if o != nil && !IsNil(o.Current) {
		return true
	}

	return false
}

// SetCurrent gets a reference to the given PostVo and assigns it to the Current field.
func (o *NavigationPostVo) SetCurrent(v PostVo) {
	o.Current = &v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *NavigationPostVo) GetNext() PostVo {
	if o == nil || IsNil(o.Next) {
		var ret PostVo
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NavigationPostVo) GetNextOk() (*PostVo, bool) {
	if o == nil || IsNil(o.Next) {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *NavigationPostVo) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given PostVo and assigns it to the Next field.
func (o *NavigationPostVo) SetNext(v PostVo) {
	o.Next = &v
}

// GetPrevious returns the Previous field value if set, zero value otherwise.
func (o *NavigationPostVo) GetPrevious() PostVo {
	if o == nil || IsNil(o.Previous) {
		var ret PostVo
		return ret
	}
	return *o.Previous
}

// GetPreviousOk returns a tuple with the Previous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NavigationPostVo) GetPreviousOk() (*PostVo, bool) {
	if o == nil || IsNil(o.Previous) {
		return nil, false
	}
	return o.Previous, true
}

// HasPrevious returns a boolean if a field has been set.
func (o *NavigationPostVo) HasPrevious() bool {
	if o != nil && !IsNil(o.Previous) {
		return true
	}

	return false
}

// SetPrevious gets a reference to the given PostVo and assigns it to the Previous field.
func (o *NavigationPostVo) SetPrevious(v PostVo) {
	o.Previous = &v
}

func (o NavigationPostVo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NavigationPostVo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Current) {
		toSerialize["current"] = o.Current
	}
	if !IsNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	if !IsNil(o.Previous) {
		toSerialize["previous"] = o.Previous
	}
	return toSerialize, nil
}

type NullableNavigationPostVo struct {
	value *NavigationPostVo
	isSet bool
}

func (v NullableNavigationPostVo) Get() *NavigationPostVo {
	return v.value
}

func (v *NullableNavigationPostVo) Set(val *NavigationPostVo) {
	v.value = val
	v.isSet = true
}

func (v NullableNavigationPostVo) IsSet() bool {
	return v.isSet
}

func (v *NullableNavigationPostVo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNavigationPostVo(val *NavigationPostVo) *NullableNavigationPostVo {
	return &NullableNavigationPostVo{value: val, isSet: true}
}

func (v NullableNavigationPostVo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNavigationPostVo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


