/*
Halo

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.20.18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package public_sdk

import (
	"encoding/json"
)

// checks if the SiteStatsVo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SiteStatsVo{}

// SiteStatsVo struct for SiteStatsVo
type SiteStatsVo struct {
	Category *int32 `json:"category,omitempty"`
	Comment *int32 `json:"comment,omitempty"`
	Post *int32 `json:"post,omitempty"`
	Upvote *int32 `json:"upvote,omitempty"`
	Visit *int32 `json:"visit,omitempty"`
}

// NewSiteStatsVo instantiates a new SiteStatsVo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSiteStatsVo() *SiteStatsVo {
	this := SiteStatsVo{}
	return &this
}

// NewSiteStatsVoWithDefaults instantiates a new SiteStatsVo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSiteStatsVoWithDefaults() *SiteStatsVo {
	this := SiteStatsVo{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *SiteStatsVo) GetCategory() int32 {
	if o == nil || IsNil(o.Category) {
		var ret int32
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteStatsVo) GetCategoryOk() (*int32, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *SiteStatsVo) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given int32 and assigns it to the Category field.
func (o *SiteStatsVo) SetCategory(v int32) {
	o.Category = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *SiteStatsVo) GetComment() int32 {
	if o == nil || IsNil(o.Comment) {
		var ret int32
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteStatsVo) GetCommentOk() (*int32, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *SiteStatsVo) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given int32 and assigns it to the Comment field.
func (o *SiteStatsVo) SetComment(v int32) {
	o.Comment = &v
}

// GetPost returns the Post field value if set, zero value otherwise.
func (o *SiteStatsVo) GetPost() int32 {
	if o == nil || IsNil(o.Post) {
		var ret int32
		return ret
	}
	return *o.Post
}

// GetPostOk returns a tuple with the Post field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteStatsVo) GetPostOk() (*int32, bool) {
	if o == nil || IsNil(o.Post) {
		return nil, false
	}
	return o.Post, true
}

// HasPost returns a boolean if a field has been set.
func (o *SiteStatsVo) HasPost() bool {
	if o != nil && !IsNil(o.Post) {
		return true
	}

	return false
}

// SetPost gets a reference to the given int32 and assigns it to the Post field.
func (o *SiteStatsVo) SetPost(v int32) {
	o.Post = &v
}

// GetUpvote returns the Upvote field value if set, zero value otherwise.
func (o *SiteStatsVo) GetUpvote() int32 {
	if o == nil || IsNil(o.Upvote) {
		var ret int32
		return ret
	}
	return *o.Upvote
}

// GetUpvoteOk returns a tuple with the Upvote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteStatsVo) GetUpvoteOk() (*int32, bool) {
	if o == nil || IsNil(o.Upvote) {
		return nil, false
	}
	return o.Upvote, true
}

// HasUpvote returns a boolean if a field has been set.
func (o *SiteStatsVo) HasUpvote() bool {
	if o != nil && !IsNil(o.Upvote) {
		return true
	}

	return false
}

// SetUpvote gets a reference to the given int32 and assigns it to the Upvote field.
func (o *SiteStatsVo) SetUpvote(v int32) {
	o.Upvote = &v
}

// GetVisit returns the Visit field value if set, zero value otherwise.
func (o *SiteStatsVo) GetVisit() int32 {
	if o == nil || IsNil(o.Visit) {
		var ret int32
		return ret
	}
	return *o.Visit
}

// GetVisitOk returns a tuple with the Visit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteStatsVo) GetVisitOk() (*int32, bool) {
	if o == nil || IsNil(o.Visit) {
		return nil, false
	}
	return o.Visit, true
}

// HasVisit returns a boolean if a field has been set.
func (o *SiteStatsVo) HasVisit() bool {
	if o != nil && !IsNil(o.Visit) {
		return true
	}

	return false
}

// SetVisit gets a reference to the given int32 and assigns it to the Visit field.
func (o *SiteStatsVo) SetVisit(v int32) {
	o.Visit = &v
}

func (o SiteStatsVo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SiteStatsVo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.Post) {
		toSerialize["post"] = o.Post
	}
	if !IsNil(o.Upvote) {
		toSerialize["upvote"] = o.Upvote
	}
	if !IsNil(o.Visit) {
		toSerialize["visit"] = o.Visit
	}
	return toSerialize, nil
}

type NullableSiteStatsVo struct {
	value *SiteStatsVo
	isSet bool
}

func (v NullableSiteStatsVo) Get() *SiteStatsVo {
	return v.value
}

func (v *NullableSiteStatsVo) Set(val *SiteStatsVo) {
	v.value = val
	v.isSet = true
}

func (v NullableSiteStatsVo) IsSet() bool {
	return v.isSet
}

func (v *NullableSiteStatsVo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSiteStatsVo(val *SiteStatsVo) *NullableSiteStatsVo {
	return &NullableSiteStatsVo{value: val, isSet: true}
}

func (v NullableSiteStatsVo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSiteStatsVo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


