/*
Halo

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.20.18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package public_sdk

import (
	"encoding/json"
)

// checks if the MenuItemSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MenuItemSpec{}

// MenuItemSpec struct for MenuItemSpec
type MenuItemSpec struct {
	// Children of this menu item
	Children []string `json:"children,omitempty"`
	// The display name of menu item.
	DisplayName *string `json:"displayName,omitempty"`
	// The href of this menu item.
	Href *string `json:"href,omitempty"`
	// The priority is for ordering.
	Priority *int32 `json:"priority,omitempty"`
	// The <a> target attribute of this menu item.
	Target *string `json:"target,omitempty"`
	TargetRef *Ref `json:"targetRef,omitempty"`
}

// NewMenuItemSpec instantiates a new MenuItemSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMenuItemSpec() *MenuItemSpec {
	this := MenuItemSpec{}
	return &this
}

// NewMenuItemSpecWithDefaults instantiates a new MenuItemSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMenuItemSpecWithDefaults() *MenuItemSpec {
	this := MenuItemSpec{}
	return &this
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *MenuItemSpec) GetChildren() []string {
	if o == nil || IsNil(o.Children) {
		var ret []string
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuItemSpec) GetChildrenOk() ([]string, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *MenuItemSpec) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []string and assigns it to the Children field.
func (o *MenuItemSpec) SetChildren(v []string) {
	o.Children = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *MenuItemSpec) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuItemSpec) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MenuItemSpec) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MenuItemSpec) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *MenuItemSpec) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuItemSpec) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *MenuItemSpec) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *MenuItemSpec) SetHref(v string) {
	o.Href = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *MenuItemSpec) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuItemSpec) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *MenuItemSpec) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *MenuItemSpec) SetPriority(v int32) {
	o.Priority = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *MenuItemSpec) GetTarget() string {
	if o == nil || IsNil(o.Target) {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuItemSpec) GetTargetOk() (*string, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *MenuItemSpec) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *MenuItemSpec) SetTarget(v string) {
	o.Target = &v
}

// GetTargetRef returns the TargetRef field value if set, zero value otherwise.
func (o *MenuItemSpec) GetTargetRef() Ref {
	if o == nil || IsNil(o.TargetRef) {
		var ret Ref
		return ret
	}
	return *o.TargetRef
}

// GetTargetRefOk returns a tuple with the TargetRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuItemSpec) GetTargetRefOk() (*Ref, bool) {
	if o == nil || IsNil(o.TargetRef) {
		return nil, false
	}
	return o.TargetRef, true
}

// HasTargetRef returns a boolean if a field has been set.
func (o *MenuItemSpec) HasTargetRef() bool {
	if o != nil && !IsNil(o.TargetRef) {
		return true
	}

	return false
}

// SetTargetRef gets a reference to the given Ref and assigns it to the TargetRef field.
func (o *MenuItemSpec) SetTargetRef(v Ref) {
	o.TargetRef = &v
}

func (o MenuItemSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MenuItemSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	if !IsNil(o.TargetRef) {
		toSerialize["targetRef"] = o.TargetRef
	}
	return toSerialize, nil
}

type NullableMenuItemSpec struct {
	value *MenuItemSpec
	isSet bool
}

func (v NullableMenuItemSpec) Get() *MenuItemSpec {
	return v.value
}

func (v *NullableMenuItemSpec) Set(val *MenuItemSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableMenuItemSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableMenuItemSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMenuItemSpec(val *MenuItemSpec) *NullableMenuItemSpec {
	return &NullableMenuItemSpec{value: val, isSet: true}
}

func (v NullableMenuItemSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMenuItemSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


