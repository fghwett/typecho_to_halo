/*
Halo

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.20.18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package public_sdk

import (
	"encoding/json"
)

// checks if the CommentStatsVo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommentStatsVo{}

// CommentStatsVo struct for CommentStatsVo
type CommentStatsVo struct {
	Upvote *int32 `json:"upvote,omitempty"`
}

// NewCommentStatsVo instantiates a new CommentStatsVo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommentStatsVo() *CommentStatsVo {
	this := CommentStatsVo{}
	return &this
}

// NewCommentStatsVoWithDefaults instantiates a new CommentStatsVo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommentStatsVoWithDefaults() *CommentStatsVo {
	this := CommentStatsVo{}
	return &this
}

// GetUpvote returns the Upvote field value if set, zero value otherwise.
func (o *CommentStatsVo) GetUpvote() int32 {
	if o == nil || IsNil(o.Upvote) {
		var ret int32
		return ret
	}
	return *o.Upvote
}

// GetUpvoteOk returns a tuple with the Upvote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentStatsVo) GetUpvoteOk() (*int32, bool) {
	if o == nil || IsNil(o.Upvote) {
		return nil, false
	}
	return o.Upvote, true
}

// HasUpvote returns a boolean if a field has been set.
func (o *CommentStatsVo) HasUpvote() bool {
	if o != nil && !IsNil(o.Upvote) {
		return true
	}

	return false
}

// SetUpvote gets a reference to the given int32 and assigns it to the Upvote field.
func (o *CommentStatsVo) SetUpvote(v int32) {
	o.Upvote = &v
}

func (o CommentStatsVo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommentStatsVo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Upvote) {
		toSerialize["upvote"] = o.Upvote
	}
	return toSerialize, nil
}

type NullableCommentStatsVo struct {
	value *CommentStatsVo
	isSet bool
}

func (v NullableCommentStatsVo) Get() *CommentStatsVo {
	return v.value
}

func (v *NullableCommentStatsVo) Set(val *CommentStatsVo) {
	v.value = val
	v.isSet = true
}

func (v NullableCommentStatsVo) IsSet() bool {
	return v.isSet
}

func (v *NullableCommentStatsVo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommentStatsVo(val *CommentStatsVo) *NullableCommentStatsVo {
	return &NullableCommentStatsVo{value: val, isSet: true}
}

func (v NullableCommentStatsVo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommentStatsVo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


