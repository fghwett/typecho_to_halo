/*
Halo

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.20.18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package console_sdk

import (
	"encoding/json"
)

// checks if the Stats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Stats{}

// Stats struct for Stats
type Stats struct {
	ApprovedComment *int32 `json:"approvedComment,omitempty"`
	TotalComment *int32 `json:"totalComment,omitempty"`
	Upvote *int32 `json:"upvote,omitempty"`
	Visit *int32 `json:"visit,omitempty"`
}

// NewStats instantiates a new Stats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStats() *Stats {
	this := Stats{}
	return &this
}

// NewStatsWithDefaults instantiates a new Stats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatsWithDefaults() *Stats {
	this := Stats{}
	return &this
}

// GetApprovedComment returns the ApprovedComment field value if set, zero value otherwise.
func (o *Stats) GetApprovedComment() int32 {
	if o == nil || IsNil(o.ApprovedComment) {
		var ret int32
		return ret
	}
	return *o.ApprovedComment
}

// GetApprovedCommentOk returns a tuple with the ApprovedComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stats) GetApprovedCommentOk() (*int32, bool) {
	if o == nil || IsNil(o.ApprovedComment) {
		return nil, false
	}
	return o.ApprovedComment, true
}

// HasApprovedComment returns a boolean if a field has been set.
func (o *Stats) HasApprovedComment() bool {
	if o != nil && !IsNil(o.ApprovedComment) {
		return true
	}

	return false
}

// SetApprovedComment gets a reference to the given int32 and assigns it to the ApprovedComment field.
func (o *Stats) SetApprovedComment(v int32) {
	o.ApprovedComment = &v
}

// GetTotalComment returns the TotalComment field value if set, zero value otherwise.
func (o *Stats) GetTotalComment() int32 {
	if o == nil || IsNil(o.TotalComment) {
		var ret int32
		return ret
	}
	return *o.TotalComment
}

// GetTotalCommentOk returns a tuple with the TotalComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stats) GetTotalCommentOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalComment) {
		return nil, false
	}
	return o.TotalComment, true
}

// HasTotalComment returns a boolean if a field has been set.
func (o *Stats) HasTotalComment() bool {
	if o != nil && !IsNil(o.TotalComment) {
		return true
	}

	return false
}

// SetTotalComment gets a reference to the given int32 and assigns it to the TotalComment field.
func (o *Stats) SetTotalComment(v int32) {
	o.TotalComment = &v
}

// GetUpvote returns the Upvote field value if set, zero value otherwise.
func (o *Stats) GetUpvote() int32 {
	if o == nil || IsNil(o.Upvote) {
		var ret int32
		return ret
	}
	return *o.Upvote
}

// GetUpvoteOk returns a tuple with the Upvote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stats) GetUpvoteOk() (*int32, bool) {
	if o == nil || IsNil(o.Upvote) {
		return nil, false
	}
	return o.Upvote, true
}

// HasUpvote returns a boolean if a field has been set.
func (o *Stats) HasUpvote() bool {
	if o != nil && !IsNil(o.Upvote) {
		return true
	}

	return false
}

// SetUpvote gets a reference to the given int32 and assigns it to the Upvote field.
func (o *Stats) SetUpvote(v int32) {
	o.Upvote = &v
}

// GetVisit returns the Visit field value if set, zero value otherwise.
func (o *Stats) GetVisit() int32 {
	if o == nil || IsNil(o.Visit) {
		var ret int32
		return ret
	}
	return *o.Visit
}

// GetVisitOk returns a tuple with the Visit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stats) GetVisitOk() (*int32, bool) {
	if o == nil || IsNil(o.Visit) {
		return nil, false
	}
	return o.Visit, true
}

// HasVisit returns a boolean if a field has been set.
func (o *Stats) HasVisit() bool {
	if o != nil && !IsNil(o.Visit) {
		return true
	}

	return false
}

// SetVisit gets a reference to the given int32 and assigns it to the Visit field.
func (o *Stats) SetVisit(v int32) {
	o.Visit = &v
}

func (o Stats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Stats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApprovedComment) {
		toSerialize["approvedComment"] = o.ApprovedComment
	}
	if !IsNil(o.TotalComment) {
		toSerialize["totalComment"] = o.TotalComment
	}
	if !IsNil(o.Upvote) {
		toSerialize["upvote"] = o.Upvote
	}
	if !IsNil(o.Visit) {
		toSerialize["visit"] = o.Visit
	}
	return toSerialize, nil
}

type NullableStats struct {
	value *Stats
	isSet bool
}

func (v NullableStats) Get() *Stats {
	return v.value
}

func (v *NullableStats) Set(val *Stats) {
	v.value = val
	v.isSet = true
}

func (v NullableStats) IsSet() bool {
	return v.isSet
}

func (v *NullableStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStats(val *Stats) *NullableStats {
	return &NullableStats{value: val, isSet: true}
}

func (v NullableStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


