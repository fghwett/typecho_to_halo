/*
Halo

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.20.18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package console_sdk

import (
	"encoding/json"
)

// checks if the DashboardStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DashboardStats{}

// DashboardStats struct for DashboardStats
type DashboardStats struct {
	ApprovedComments *int32 `json:"approvedComments,omitempty"`
	Comments *int32 `json:"comments,omitempty"`
	Posts *int32 `json:"posts,omitempty"`
	Upvotes *int32 `json:"upvotes,omitempty"`
	Users *int32 `json:"users,omitempty"`
	Visits *int32 `json:"visits,omitempty"`
}

// NewDashboardStats instantiates a new DashboardStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardStats() *DashboardStats {
	this := DashboardStats{}
	return &this
}

// NewDashboardStatsWithDefaults instantiates a new DashboardStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardStatsWithDefaults() *DashboardStats {
	this := DashboardStats{}
	return &this
}

// GetApprovedComments returns the ApprovedComments field value if set, zero value otherwise.
func (o *DashboardStats) GetApprovedComments() int32 {
	if o == nil || IsNil(o.ApprovedComments) {
		var ret int32
		return ret
	}
	return *o.ApprovedComments
}

// GetApprovedCommentsOk returns a tuple with the ApprovedComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardStats) GetApprovedCommentsOk() (*int32, bool) {
	if o == nil || IsNil(o.ApprovedComments) {
		return nil, false
	}
	return o.ApprovedComments, true
}

// HasApprovedComments returns a boolean if a field has been set.
func (o *DashboardStats) HasApprovedComments() bool {
	if o != nil && !IsNil(o.ApprovedComments) {
		return true
	}

	return false
}

// SetApprovedComments gets a reference to the given int32 and assigns it to the ApprovedComments field.
func (o *DashboardStats) SetApprovedComments(v int32) {
	o.ApprovedComments = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *DashboardStats) GetComments() int32 {
	if o == nil || IsNil(o.Comments) {
		var ret int32
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardStats) GetCommentsOk() (*int32, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *DashboardStats) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given int32 and assigns it to the Comments field.
func (o *DashboardStats) SetComments(v int32) {
	o.Comments = &v
}

// GetPosts returns the Posts field value if set, zero value otherwise.
func (o *DashboardStats) GetPosts() int32 {
	if o == nil || IsNil(o.Posts) {
		var ret int32
		return ret
	}
	return *o.Posts
}

// GetPostsOk returns a tuple with the Posts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardStats) GetPostsOk() (*int32, bool) {
	if o == nil || IsNil(o.Posts) {
		return nil, false
	}
	return o.Posts, true
}

// HasPosts returns a boolean if a field has been set.
func (o *DashboardStats) HasPosts() bool {
	if o != nil && !IsNil(o.Posts) {
		return true
	}

	return false
}

// SetPosts gets a reference to the given int32 and assigns it to the Posts field.
func (o *DashboardStats) SetPosts(v int32) {
	o.Posts = &v
}

// GetUpvotes returns the Upvotes field value if set, zero value otherwise.
func (o *DashboardStats) GetUpvotes() int32 {
	if o == nil || IsNil(o.Upvotes) {
		var ret int32
		return ret
	}
	return *o.Upvotes
}

// GetUpvotesOk returns a tuple with the Upvotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardStats) GetUpvotesOk() (*int32, bool) {
	if o == nil || IsNil(o.Upvotes) {
		return nil, false
	}
	return o.Upvotes, true
}

// HasUpvotes returns a boolean if a field has been set.
func (o *DashboardStats) HasUpvotes() bool {
	if o != nil && !IsNil(o.Upvotes) {
		return true
	}

	return false
}

// SetUpvotes gets a reference to the given int32 and assigns it to the Upvotes field.
func (o *DashboardStats) SetUpvotes(v int32) {
	o.Upvotes = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *DashboardStats) GetUsers() int32 {
	if o == nil || IsNil(o.Users) {
		var ret int32
		return ret
	}
	return *o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardStats) GetUsersOk() (*int32, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *DashboardStats) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given int32 and assigns it to the Users field.
func (o *DashboardStats) SetUsers(v int32) {
	o.Users = &v
}

// GetVisits returns the Visits field value if set, zero value otherwise.
func (o *DashboardStats) GetVisits() int32 {
	if o == nil || IsNil(o.Visits) {
		var ret int32
		return ret
	}
	return *o.Visits
}

// GetVisitsOk returns a tuple with the Visits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardStats) GetVisitsOk() (*int32, bool) {
	if o == nil || IsNil(o.Visits) {
		return nil, false
	}
	return o.Visits, true
}

// HasVisits returns a boolean if a field has been set.
func (o *DashboardStats) HasVisits() bool {
	if o != nil && !IsNil(o.Visits) {
		return true
	}

	return false
}

// SetVisits gets a reference to the given int32 and assigns it to the Visits field.
func (o *DashboardStats) SetVisits(v int32) {
	o.Visits = &v
}

func (o DashboardStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DashboardStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApprovedComments) {
		toSerialize["approvedComments"] = o.ApprovedComments
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.Posts) {
		toSerialize["posts"] = o.Posts
	}
	if !IsNil(o.Upvotes) {
		toSerialize["upvotes"] = o.Upvotes
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	if !IsNil(o.Visits) {
		toSerialize["visits"] = o.Visits
	}
	return toSerialize, nil
}

type NullableDashboardStats struct {
	value *DashboardStats
	isSet bool
}

func (v NullableDashboardStats) Get() *DashboardStats {
	return v.value
}

func (v *NullableDashboardStats) Set(val *DashboardStats) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardStats) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardStats(val *DashboardStats) *NullableDashboardStats {
	return &NullableDashboardStats{value: val, isSet: true}
}

func (v NullableDashboardStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


