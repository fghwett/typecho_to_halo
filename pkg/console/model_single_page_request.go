/*
Halo

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.20.18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package console_sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SinglePageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SinglePageRequest{}

// SinglePageRequest struct for SinglePageRequest
type SinglePageRequest struct {
	Content ContentUpdateParam `json:"content"`
	Page SinglePage `json:"page"`
}

type _SinglePageRequest SinglePageRequest

// NewSinglePageRequest instantiates a new SinglePageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSinglePageRequest(content ContentUpdateParam, page SinglePage) *SinglePageRequest {
	this := SinglePageRequest{}
	this.Content = content
	this.Page = page
	return &this
}

// NewSinglePageRequestWithDefaults instantiates a new SinglePageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSinglePageRequestWithDefaults() *SinglePageRequest {
	this := SinglePageRequest{}
	return &this
}

// GetContent returns the Content field value
func (o *SinglePageRequest) GetContent() ContentUpdateParam {
	if o == nil {
		var ret ContentUpdateParam
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *SinglePageRequest) GetContentOk() (*ContentUpdateParam, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *SinglePageRequest) SetContent(v ContentUpdateParam) {
	o.Content = v
}

// GetPage returns the Page field value
func (o *SinglePageRequest) GetPage() SinglePage {
	if o == nil {
		var ret SinglePage
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *SinglePageRequest) GetPageOk() (*SinglePage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *SinglePageRequest) SetPage(v SinglePage) {
	o.Page = v
}

func (o SinglePageRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SinglePageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["content"] = o.Content
	toSerialize["page"] = o.Page
	return toSerialize, nil
}

func (o *SinglePageRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"content",
		"page",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSinglePageRequest := _SinglePageRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSinglePageRequest)

	if err != nil {
		return err
	}

	*o = SinglePageRequest(varSinglePageRequest)

	return err
}

type NullableSinglePageRequest struct {
	value *SinglePageRequest
	isSet bool
}

func (v NullableSinglePageRequest) Get() *SinglePageRequest {
	return v.value
}

func (v *NullableSinglePageRequest) Set(val *SinglePageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSinglePageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSinglePageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSinglePageRequest(val *SinglePageRequest) *NullableSinglePageRequest {
	return &NullableSinglePageRequest{value: val, isSet: true}
}

func (v NullableSinglePageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSinglePageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


