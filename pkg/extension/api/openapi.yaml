openapi: 3.0.1
info:
  title: Halo
  version: 2.20.18
servers:
- description: Generated server url
  url: http://localhost:8091
security:
- basicAuth: []
  bearerAuth: []
paths:
  /api/v1alpha1/annotationsettings:
    get:
      description: List AnnotationSetting
      operationId: listAnnotationSetting
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AnnotationSettingList'
          description: Response annotationsettings
      tags:
      - AnnotationSettingV1alpha1
    post:
      description: Create AnnotationSetting
      operationId: createAnnotationSetting
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AnnotationSetting'
        description: Fresh annotationsetting
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AnnotationSetting'
          description: Response annotationsettings created just now
      tags:
      - AnnotationSettingV1alpha1
  /api/v1alpha1/annotationsettings/{name}:
    delete:
      description: Delete AnnotationSetting
      operationId: deleteAnnotationSetting
      parameters:
      - description: Name of annotationsetting
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response annotationsetting deleted just now
      tags:
      - AnnotationSettingV1alpha1
    get:
      description: Get AnnotationSetting
      operationId: getAnnotationSetting
      parameters:
      - description: Name of annotationsetting
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AnnotationSetting'
          description: Response single annotationsetting
      tags:
      - AnnotationSettingV1alpha1
    patch:
      description: Patch AnnotationSetting
      operationId: patchAnnotationSetting
      parameters:
      - description: Name of annotationsetting
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AnnotationSetting'
          description: Response annotationsetting patched just now
      tags:
      - AnnotationSettingV1alpha1
    put:
      description: Update AnnotationSetting
      operationId: updateAnnotationSetting
      parameters:
      - description: Name of annotationsetting
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AnnotationSetting'
        description: Updated annotationsetting
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AnnotationSetting'
          description: Response annotationsettings updated just now
      tags:
      - AnnotationSettingV1alpha1
  /api/v1alpha1/configmaps:
    get:
      description: List ConfigMap
      operationId: listConfigMap
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigMapList'
          description: Response configmaps
      tags:
      - ConfigMapV1alpha1
    post:
      description: Create ConfigMap
      operationId: createConfigMap
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ConfigMap'
        description: Fresh configmap
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigMap'
          description: Response configmaps created just now
      tags:
      - ConfigMapV1alpha1
  /api/v1alpha1/configmaps/{name}:
    delete:
      description: Delete ConfigMap
      operationId: deleteConfigMap
      parameters:
      - description: Name of configmap
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response configmap deleted just now
      tags:
      - ConfigMapV1alpha1
    get:
      description: Get ConfigMap
      operationId: getConfigMap
      parameters:
      - description: Name of configmap
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigMap'
          description: Response single configmap
      tags:
      - ConfigMapV1alpha1
    patch:
      description: Patch ConfigMap
      operationId: patchConfigMap
      parameters:
      - description: Name of configmap
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigMap'
          description: Response configmap patched just now
      tags:
      - ConfigMapV1alpha1
    put:
      description: Update ConfigMap
      operationId: updateConfigMap
      parameters:
      - description: Name of configmap
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ConfigMap'
        description: Updated configmap
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigMap'
          description: Response configmaps updated just now
      tags:
      - ConfigMapV1alpha1
  /api/v1alpha1/menuitems:
    get:
      description: List MenuItem
      operationId: listMenuItem
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MenuItemList'
          description: Response menuitems
      tags:
      - MenuItemV1alpha1
    post:
      description: Create MenuItem
      operationId: createMenuItem
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/MenuItem'
        description: Fresh menuitem
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: Response menuitems created just now
      tags:
      - MenuItemV1alpha1
  /api/v1alpha1/menuitems/{name}:
    delete:
      description: Delete MenuItem
      operationId: deleteMenuItem
      parameters:
      - description: Name of menuitem
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response menuitem deleted just now
      tags:
      - MenuItemV1alpha1
    get:
      description: Get MenuItem
      operationId: getMenuItem
      parameters:
      - description: Name of menuitem
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: Response single menuitem
      tags:
      - MenuItemV1alpha1
    patch:
      description: Patch MenuItem
      operationId: patchMenuItem
      parameters:
      - description: Name of menuitem
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: Response menuitem patched just now
      tags:
      - MenuItemV1alpha1
    put:
      description: Update MenuItem
      operationId: updateMenuItem
      parameters:
      - description: Name of menuitem
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/MenuItem'
        description: Updated menuitem
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: Response menuitems updated just now
      tags:
      - MenuItemV1alpha1
  /api/v1alpha1/menus:
    get:
      description: List Menu
      operationId: listMenu
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MenuList'
          description: Response menus
      tags:
      - MenuV1alpha1
    post:
      description: Create Menu
      operationId: createMenu
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Menu'
        description: Fresh menu
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Menu'
          description: Response menus created just now
      tags:
      - MenuV1alpha1
  /api/v1alpha1/menus/{name}:
    delete:
      description: Delete Menu
      operationId: deleteMenu
      parameters:
      - description: Name of menu
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response menu deleted just now
      tags:
      - MenuV1alpha1
    get:
      description: Get Menu
      operationId: getMenu
      parameters:
      - description: Name of menu
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Menu'
          description: Response single menu
      tags:
      - MenuV1alpha1
    patch:
      description: Patch Menu
      operationId: patchMenu
      parameters:
      - description: Name of menu
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Menu'
          description: Response menu patched just now
      tags:
      - MenuV1alpha1
    put:
      description: Update Menu
      operationId: updateMenu
      parameters:
      - description: Name of menu
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Menu'
        description: Updated menu
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Menu'
          description: Response menus updated just now
      tags:
      - MenuV1alpha1
  /api/v1alpha1/rolebindings:
    get:
      description: List RoleBinding
      operationId: listRoleBinding
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleBindingList'
          description: Response rolebindings
      tags:
      - RoleBindingV1alpha1
    post:
      description: Create RoleBinding
      operationId: createRoleBinding
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RoleBinding'
        description: Fresh rolebinding
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleBinding'
          description: Response rolebindings created just now
      tags:
      - RoleBindingV1alpha1
  /api/v1alpha1/rolebindings/{name}:
    delete:
      description: Delete RoleBinding
      operationId: deleteRoleBinding
      parameters:
      - description: Name of rolebinding
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response rolebinding deleted just now
      tags:
      - RoleBindingV1alpha1
    get:
      description: Get RoleBinding
      operationId: getRoleBinding
      parameters:
      - description: Name of rolebinding
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleBinding'
          description: Response single rolebinding
      tags:
      - RoleBindingV1alpha1
    patch:
      description: Patch RoleBinding
      operationId: patchRoleBinding
      parameters:
      - description: Name of rolebinding
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleBinding'
          description: Response rolebinding patched just now
      tags:
      - RoleBindingV1alpha1
    put:
      description: Update RoleBinding
      operationId: updateRoleBinding
      parameters:
      - description: Name of rolebinding
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RoleBinding'
        description: Updated rolebinding
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleBinding'
          description: Response rolebindings updated just now
      tags:
      - RoleBindingV1alpha1
  /api/v1alpha1/roles:
    get:
      description: List Role
      operationId: listRole
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleList'
          description: Response roles
      tags:
      - RoleV1alpha1
    post:
      description: Create Role
      operationId: createRole
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Role'
        description: Fresh role
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Role'
          description: Response roles created just now
      tags:
      - RoleV1alpha1
  /api/v1alpha1/roles/{name}:
    delete:
      description: Delete Role
      operationId: deleteRole
      parameters:
      - description: Name of role
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response role deleted just now
      tags:
      - RoleV1alpha1
    get:
      description: Get Role
      operationId: getRole
      parameters:
      - description: Name of role
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Role'
          description: Response single role
      tags:
      - RoleV1alpha1
    patch:
      description: Patch Role
      operationId: patchRole
      parameters:
      - description: Name of role
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Role'
          description: Response role patched just now
      tags:
      - RoleV1alpha1
    put:
      description: Update Role
      operationId: updateRole
      parameters:
      - description: Name of role
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Role'
        description: Updated role
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Role'
          description: Response roles updated just now
      tags:
      - RoleV1alpha1
  /api/v1alpha1/secrets:
    get:
      description: List Secret
      operationId: listSecret
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SecretList'
          description: Response secrets
      tags:
      - SecretV1alpha1
    post:
      description: Create Secret
      operationId: createSecret
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Secret'
        description: Fresh secret
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Secret'
          description: Response secrets created just now
      tags:
      - SecretV1alpha1
  /api/v1alpha1/secrets/{name}:
    delete:
      description: Delete Secret
      operationId: deleteSecret
      parameters:
      - description: Name of secret
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response secret deleted just now
      tags:
      - SecretV1alpha1
    get:
      description: Get Secret
      operationId: getSecret
      parameters:
      - description: Name of secret
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Secret'
          description: Response single secret
      tags:
      - SecretV1alpha1
    patch:
      description: Patch Secret
      operationId: patchSecret
      parameters:
      - description: Name of secret
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Secret'
          description: Response secret patched just now
      tags:
      - SecretV1alpha1
    put:
      description: Update Secret
      operationId: updateSecret
      parameters:
      - description: Name of secret
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Secret'
        description: Updated secret
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Secret'
          description: Response secrets updated just now
      tags:
      - SecretV1alpha1
  /api/v1alpha1/settings:
    get:
      description: List Setting
      operationId: listSetting
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SettingList'
          description: Response settings
      tags:
      - SettingV1alpha1
    post:
      description: Create Setting
      operationId: createSetting
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Setting'
        description: Fresh setting
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Setting'
          description: Response settings created just now
      tags:
      - SettingV1alpha1
  /api/v1alpha1/settings/{name}:
    delete:
      description: Delete Setting
      operationId: deleteSetting
      parameters:
      - description: Name of setting
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response setting deleted just now
      tags:
      - SettingV1alpha1
    get:
      description: Get Setting
      operationId: getSetting
      parameters:
      - description: Name of setting
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Setting'
          description: Response single setting
      tags:
      - SettingV1alpha1
    patch:
      description: Patch Setting
      operationId: patchSetting
      parameters:
      - description: Name of setting
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Setting'
          description: Response setting patched just now
      tags:
      - SettingV1alpha1
    put:
      description: Update Setting
      operationId: updateSetting
      parameters:
      - description: Name of setting
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Setting'
        description: Updated setting
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Setting'
          description: Response settings updated just now
      tags:
      - SettingV1alpha1
  /api/v1alpha1/users:
    get:
      description: List User
      operationId: listUser
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserList'
          description: Response users
      tags:
      - UserV1alpha1
    post:
      description: Create User
      operationId: createUser
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        description: Fresh user
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
          description: Response users created just now
      tags:
      - UserV1alpha1
  /api/v1alpha1/users/{name}:
    delete:
      description: Delete User
      operationId: deleteUser
      parameters:
      - description: Name of user
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response user deleted just now
      tags:
      - UserV1alpha1
    get:
      description: Get User
      operationId: getUser
      parameters:
      - description: Name of user
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
          description: Response single user
      tags:
      - UserV1alpha1
    patch:
      description: Patch User
      operationId: patchUser
      parameters:
      - description: Name of user
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
          description: Response user patched just now
      tags:
      - UserV1alpha1
    put:
      description: Update User
      operationId: updateUser
      parameters:
      - description: Name of user
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        description: Updated user
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
          description: Response users updated just now
      tags:
      - UserV1alpha1
  /apis/auth.halo.run/v1alpha1/authproviders:
    get:
      description: List AuthProvider
      operationId: listAuthProvider
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthProviderList'
          description: Response authproviders
      tags:
      - AuthProviderV1alpha1
    post:
      description: Create AuthProvider
      operationId: createAuthProvider
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AuthProvider'
        description: Fresh authprovider
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthProvider'
          description: Response authproviders created just now
      tags:
      - AuthProviderV1alpha1
  /apis/auth.halo.run/v1alpha1/authproviders/{name}:
    delete:
      description: Delete AuthProvider
      operationId: deleteAuthProvider
      parameters:
      - description: Name of authprovider
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response authprovider deleted just now
      tags:
      - AuthProviderV1alpha1
    get:
      description: Get AuthProvider
      operationId: getAuthProvider
      parameters:
      - description: Name of authprovider
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthProvider'
          description: Response single authprovider
      tags:
      - AuthProviderV1alpha1
    patch:
      description: Patch AuthProvider
      operationId: patchAuthProvider
      parameters:
      - description: Name of authprovider
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthProvider'
          description: Response authprovider patched just now
      tags:
      - AuthProviderV1alpha1
    put:
      description: Update AuthProvider
      operationId: updateAuthProvider
      parameters:
      - description: Name of authprovider
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AuthProvider'
        description: Updated authprovider
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthProvider'
          description: Response authproviders updated just now
      tags:
      - AuthProviderV1alpha1
  /apis/auth.halo.run/v1alpha1/userconnections:
    get:
      description: List UserConnection
      operationId: listUserConnection
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserConnectionList'
          description: Response userconnections
      tags:
      - UserConnectionV1alpha1
    post:
      description: Create UserConnection
      operationId: createUserConnection
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserConnection'
        description: Fresh userconnection
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserConnection'
          description: Response userconnections created just now
      tags:
      - UserConnectionV1alpha1
  /apis/auth.halo.run/v1alpha1/userconnections/{name}:
    delete:
      description: Delete UserConnection
      operationId: deleteUserConnection
      parameters:
      - description: Name of userconnection
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response userconnection deleted just now
      tags:
      - UserConnectionV1alpha1
    get:
      description: Get UserConnection
      operationId: getUserConnection
      parameters:
      - description: Name of userconnection
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserConnection'
          description: Response single userconnection
      tags:
      - UserConnectionV1alpha1
    patch:
      description: Patch UserConnection
      operationId: patchUserConnection
      parameters:
      - description: Name of userconnection
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserConnection'
          description: Response userconnection patched just now
      tags:
      - UserConnectionV1alpha1
    put:
      description: Update UserConnection
      operationId: updateUserConnection
      parameters:
      - description: Name of userconnection
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserConnection'
        description: Updated userconnection
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserConnection'
          description: Response userconnections updated just now
      tags:
      - UserConnectionV1alpha1
  /apis/content.halo.run/v1alpha1/categories:
    get:
      description: List Category
      operationId: listCategory
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CategoryList'
          description: Response categories
      tags:
      - CategoryV1alpha1
    post:
      description: Create Category
      operationId: createCategory
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Category'
        description: Fresh category
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
          description: Response categories created just now
      tags:
      - CategoryV1alpha1
  /apis/content.halo.run/v1alpha1/categories/{name}:
    delete:
      description: Delete Category
      operationId: deleteCategory
      parameters:
      - description: Name of category
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response category deleted just now
      tags:
      - CategoryV1alpha1
    get:
      description: Get Category
      operationId: getCategory
      parameters:
      - description: Name of category
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
          description: Response single category
      tags:
      - CategoryV1alpha1
    patch:
      description: Patch Category
      operationId: patchCategory
      parameters:
      - description: Name of category
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
          description: Response category patched just now
      tags:
      - CategoryV1alpha1
    put:
      description: Update Category
      operationId: updateCategory
      parameters:
      - description: Name of category
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Category'
        description: Updated category
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
          description: Response categories updated just now
      tags:
      - CategoryV1alpha1
  /apis/content.halo.run/v1alpha1/comments:
    get:
      description: List Comment
      operationId: listComment
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommentList'
          description: Response comments
      tags:
      - CommentV1alpha1
    post:
      description: Create Comment
      operationId: createComment
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Comment'
        description: Fresh comment
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comment'
          description: Response comments created just now
      tags:
      - CommentV1alpha1
  /apis/content.halo.run/v1alpha1/comments/{name}:
    delete:
      description: Delete Comment
      operationId: deleteComment
      parameters:
      - description: Name of comment
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response comment deleted just now
      tags:
      - CommentV1alpha1
    get:
      description: Get Comment
      operationId: getComment
      parameters:
      - description: Name of comment
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comment'
          description: Response single comment
      tags:
      - CommentV1alpha1
    patch:
      description: Patch Comment
      operationId: patchComment
      parameters:
      - description: Name of comment
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comment'
          description: Response comment patched just now
      tags:
      - CommentV1alpha1
    put:
      description: Update Comment
      operationId: updateComment
      parameters:
      - description: Name of comment
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Comment'
        description: Updated comment
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comment'
          description: Response comments updated just now
      tags:
      - CommentV1alpha1
  /apis/content.halo.run/v1alpha1/posts:
    get:
      description: List Post
      operationId: listPost
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PostList'
          description: Response posts
      tags:
      - PostV1alpha1
    post:
      description: Create Post
      operationId: createPost
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Post'
        description: Fresh post
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Post'
          description: Response posts created just now
      tags:
      - PostV1alpha1
  /apis/content.halo.run/v1alpha1/posts/{name}:
    delete:
      description: Delete Post
      operationId: deletePost
      parameters:
      - description: Name of post
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response post deleted just now
      tags:
      - PostV1alpha1
    get:
      description: Get Post
      operationId: getPost
      parameters:
      - description: Name of post
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Post'
          description: Response single post
      tags:
      - PostV1alpha1
    patch:
      description: Patch Post
      operationId: patchPost
      parameters:
      - description: Name of post
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Post'
          description: Response post patched just now
      tags:
      - PostV1alpha1
    put:
      description: Update Post
      operationId: updatePost
      parameters:
      - description: Name of post
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Post'
        description: Updated post
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Post'
          description: Response posts updated just now
      tags:
      - PostV1alpha1
  /apis/content.halo.run/v1alpha1/replies:
    get:
      description: List Reply
      operationId: listReply
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReplyList'
          description: Response replies
      tags:
      - ReplyV1alpha1
    post:
      description: Create Reply
      operationId: createReply
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Reply'
        description: Fresh reply
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Reply'
          description: Response replies created just now
      tags:
      - ReplyV1alpha1
  /apis/content.halo.run/v1alpha1/replies/{name}:
    delete:
      description: Delete Reply
      operationId: deleteReply
      parameters:
      - description: Name of reply
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response reply deleted just now
      tags:
      - ReplyV1alpha1
    get:
      description: Get Reply
      operationId: getReply
      parameters:
      - description: Name of reply
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Reply'
          description: Response single reply
      tags:
      - ReplyV1alpha1
    patch:
      description: Patch Reply
      operationId: patchReply
      parameters:
      - description: Name of reply
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Reply'
          description: Response reply patched just now
      tags:
      - ReplyV1alpha1
    put:
      description: Update Reply
      operationId: updateReply
      parameters:
      - description: Name of reply
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Reply'
        description: Updated reply
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Reply'
          description: Response replies updated just now
      tags:
      - ReplyV1alpha1
  /apis/content.halo.run/v1alpha1/singlepages:
    get:
      description: List SinglePage
      operationId: listSinglePage
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SinglePageList'
          description: Response singlepages
      tags:
      - SinglePageV1alpha1
    post:
      description: Create SinglePage
      operationId: createSinglePage
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SinglePage'
        description: Fresh singlepage
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SinglePage'
          description: Response singlepages created just now
      tags:
      - SinglePageV1alpha1
  /apis/content.halo.run/v1alpha1/singlepages/{name}:
    delete:
      description: Delete SinglePage
      operationId: deleteSinglePage
      parameters:
      - description: Name of singlepage
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response singlepage deleted just now
      tags:
      - SinglePageV1alpha1
    get:
      description: Get SinglePage
      operationId: getSinglePage
      parameters:
      - description: Name of singlepage
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SinglePage'
          description: Response single singlepage
      tags:
      - SinglePageV1alpha1
    patch:
      description: Patch SinglePage
      operationId: patchSinglePage
      parameters:
      - description: Name of singlepage
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SinglePage'
          description: Response singlepage patched just now
      tags:
      - SinglePageV1alpha1
    put:
      description: Update SinglePage
      operationId: updateSinglePage
      parameters:
      - description: Name of singlepage
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SinglePage'
        description: Updated singlepage
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SinglePage'
          description: Response singlepages updated just now
      tags:
      - SinglePageV1alpha1
  /apis/content.halo.run/v1alpha1/snapshots:
    get:
      description: List Snapshot
      operationId: listSnapshot
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SnapshotList'
          description: Response snapshots
      tags:
      - SnapshotV1alpha1
    post:
      description: Create Snapshot
      operationId: createSnapshot
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Snapshot'
        description: Fresh snapshot
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Snapshot'
          description: Response snapshots created just now
      tags:
      - SnapshotV1alpha1
  /apis/content.halo.run/v1alpha1/snapshots/{name}:
    delete:
      description: Delete Snapshot
      operationId: deleteSnapshot
      parameters:
      - description: Name of snapshot
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response snapshot deleted just now
      tags:
      - SnapshotV1alpha1
    get:
      description: Get Snapshot
      operationId: getSnapshot
      parameters:
      - description: Name of snapshot
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Snapshot'
          description: Response single snapshot
      tags:
      - SnapshotV1alpha1
    patch:
      description: Patch Snapshot
      operationId: patchSnapshot
      parameters:
      - description: Name of snapshot
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Snapshot'
          description: Response snapshot patched just now
      tags:
      - SnapshotV1alpha1
    put:
      description: Update Snapshot
      operationId: updateSnapshot
      parameters:
      - description: Name of snapshot
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Snapshot'
        description: Updated snapshot
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Snapshot'
          description: Response snapshots updated just now
      tags:
      - SnapshotV1alpha1
  /apis/content.halo.run/v1alpha1/tags:
    get:
      description: List Tag
      operationId: listTag
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagList'
          description: Response tags
      tags:
      - TagV1alpha1
    post:
      description: Create Tag
      operationId: createTag
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Tag'
        description: Fresh tag
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Tag'
          description: Response tags created just now
      tags:
      - TagV1alpha1
  /apis/content.halo.run/v1alpha1/tags/{name}:
    delete:
      description: Delete Tag
      operationId: deleteTag
      parameters:
      - description: Name of tag
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response tag deleted just now
      tags:
      - TagV1alpha1
    get:
      description: Get Tag
      operationId: getTag
      parameters:
      - description: Name of tag
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Tag'
          description: Response single tag
      tags:
      - TagV1alpha1
    patch:
      description: Patch Tag
      operationId: patchTag
      parameters:
      - description: Name of tag
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Tag'
          description: Response tag patched just now
      tags:
      - TagV1alpha1
    put:
      description: Update Tag
      operationId: updateTag
      parameters:
      - description: Name of tag
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Tag'
        description: Updated tag
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Tag'
          description: Response tags updated just now
      tags:
      - TagV1alpha1
  /apis/metrics.halo.run/v1alpha1/counters:
    get:
      description: List Counter
      operationId: listCounter
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CounterList'
          description: Response counters
      tags:
      - CounterV1alpha1
    post:
      description: Create Counter
      operationId: createCounter
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Counter'
        description: Fresh counter
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Counter'
          description: Response counters created just now
      tags:
      - CounterV1alpha1
  /apis/metrics.halo.run/v1alpha1/counters/{name}:
    delete:
      description: Delete Counter
      operationId: deleteCounter
      parameters:
      - description: Name of counter
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response counter deleted just now
      tags:
      - CounterV1alpha1
    get:
      description: Get Counter
      operationId: getCounter
      parameters:
      - description: Name of counter
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Counter'
          description: Response single counter
      tags:
      - CounterV1alpha1
    patch:
      description: Patch Counter
      operationId: patchCounter
      parameters:
      - description: Name of counter
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Counter'
          description: Response counter patched just now
      tags:
      - CounterV1alpha1
    put:
      description: Update Counter
      operationId: updateCounter
      parameters:
      - description: Name of counter
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Counter'
        description: Updated counter
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Counter'
          description: Response counters updated just now
      tags:
      - CounterV1alpha1
  /apis/migration.halo.run/v1alpha1/backups:
    get:
      description: List Backup
      operationId: listBackup
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BackupList'
          description: Response backups
      tags:
      - BackupV1alpha1
    post:
      description: Create Backup
      operationId: createBackup
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Backup'
        description: Fresh backup
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Backup'
          description: Response backups created just now
      tags:
      - BackupV1alpha1
  /apis/migration.halo.run/v1alpha1/backups/{name}:
    delete:
      description: Delete Backup
      operationId: deleteBackup
      parameters:
      - description: Name of backup
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response backup deleted just now
      tags:
      - BackupV1alpha1
    get:
      description: Get Backup
      operationId: getBackup
      parameters:
      - description: Name of backup
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Backup'
          description: Response single backup
      tags:
      - BackupV1alpha1
    patch:
      description: Patch Backup
      operationId: patchBackup
      parameters:
      - description: Name of backup
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Backup'
          description: Response backup patched just now
      tags:
      - BackupV1alpha1
    put:
      description: Update Backup
      operationId: updateBackup
      parameters:
      - description: Name of backup
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Backup'
        description: Updated backup
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Backup'
          description: Response backups updated just now
      tags:
      - BackupV1alpha1
  /apis/notification.halo.run/v1alpha1/notifications:
    get:
      description: List Notification
      operationId: listNotification
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationList'
          description: Response notifications
      tags:
      - NotificationV1alpha1
    post:
      description: Create Notification
      operationId: createNotification
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Notification'
        description: Fresh notification
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Notification'
          description: Response notifications created just now
      tags:
      - NotificationV1alpha1
  /apis/notification.halo.run/v1alpha1/notifications/{name}:
    delete:
      description: Delete Notification
      operationId: deleteNotification
      parameters:
      - description: Name of notification
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response notification deleted just now
      tags:
      - NotificationV1alpha1
    get:
      description: Get Notification
      operationId: getNotification
      parameters:
      - description: Name of notification
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Notification'
          description: Response single notification
      tags:
      - NotificationV1alpha1
    patch:
      description: Patch Notification
      operationId: patchNotification
      parameters:
      - description: Name of notification
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Notification'
          description: Response notification patched just now
      tags:
      - NotificationV1alpha1
    put:
      description: Update Notification
      operationId: updateNotification
      parameters:
      - description: Name of notification
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Notification'
        description: Updated notification
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Notification'
          description: Response notifications updated just now
      tags:
      - NotificationV1alpha1
  /apis/notification.halo.run/v1alpha1/notificationtemplates:
    get:
      description: List NotificationTemplate
      operationId: listNotificationTemplate
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationTemplateList'
          description: Response notificationtemplates
      tags:
      - NotificationTemplateV1alpha1
    post:
      description: Create NotificationTemplate
      operationId: createNotificationTemplate
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NotificationTemplate'
        description: Fresh notificationtemplate
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationTemplate'
          description: Response notificationtemplates created just now
      tags:
      - NotificationTemplateV1alpha1
  /apis/notification.halo.run/v1alpha1/notificationtemplates/{name}:
    delete:
      description: Delete NotificationTemplate
      operationId: deleteNotificationTemplate
      parameters:
      - description: Name of notificationtemplate
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response notificationtemplate deleted just now
      tags:
      - NotificationTemplateV1alpha1
    get:
      description: Get NotificationTemplate
      operationId: getNotificationTemplate
      parameters:
      - description: Name of notificationtemplate
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationTemplate'
          description: Response single notificationtemplate
      tags:
      - NotificationTemplateV1alpha1
    patch:
      description: Patch NotificationTemplate
      operationId: patchNotificationTemplate
      parameters:
      - description: Name of notificationtemplate
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationTemplate'
          description: Response notificationtemplate patched just now
      tags:
      - NotificationTemplateV1alpha1
    put:
      description: Update NotificationTemplate
      operationId: updateNotificationTemplate
      parameters:
      - description: Name of notificationtemplate
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NotificationTemplate'
        description: Updated notificationtemplate
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationTemplate'
          description: Response notificationtemplates updated just now
      tags:
      - NotificationTemplateV1alpha1
  /apis/notification.halo.run/v1alpha1/notifierDescriptors:
    get:
      description: List NotifierDescriptor
      operationId: listNotifierDescriptor
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotifierDescriptorList'
          description: Response notifierDescriptors
      tags:
      - NotifierDescriptorV1alpha1
    post:
      description: Create NotifierDescriptor
      operationId: createNotifierDescriptor
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NotifierDescriptor'
        description: Fresh notifierDescriptor
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotifierDescriptor'
          description: Response notifierDescriptors created just now
      tags:
      - NotifierDescriptorV1alpha1
  /apis/notification.halo.run/v1alpha1/notifierDescriptors/{name}:
    delete:
      description: Delete NotifierDescriptor
      operationId: deleteNotifierDescriptor
      parameters:
      - description: Name of notifierDescriptor
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response notifierDescriptor deleted just now
      tags:
      - NotifierDescriptorV1alpha1
    get:
      description: Get NotifierDescriptor
      operationId: getNotifierDescriptor
      parameters:
      - description: Name of notifierDescriptor
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotifierDescriptor'
          description: Response single notifierDescriptor
      tags:
      - NotifierDescriptorV1alpha1
    patch:
      description: Patch NotifierDescriptor
      operationId: patchNotifierDescriptor
      parameters:
      - description: Name of notifierDescriptor
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotifierDescriptor'
          description: Response notifierDescriptor patched just now
      tags:
      - NotifierDescriptorV1alpha1
    put:
      description: Update NotifierDescriptor
      operationId: updateNotifierDescriptor
      parameters:
      - description: Name of notifierDescriptor
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NotifierDescriptor'
        description: Updated notifierDescriptor
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotifierDescriptor'
          description: Response notifierDescriptors updated just now
      tags:
      - NotifierDescriptorV1alpha1
  /apis/notification.halo.run/v1alpha1/reasons:
    get:
      description: List Reason
      operationId: listReason
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReasonList'
          description: Response reasons
      tags:
      - ReasonV1alpha1
    post:
      description: Create Reason
      operationId: createReason
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Reason'
        description: Fresh reason
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Reason'
          description: Response reasons created just now
      tags:
      - ReasonV1alpha1
  /apis/notification.halo.run/v1alpha1/reasons/{name}:
    delete:
      description: Delete Reason
      operationId: deleteReason
      parameters:
      - description: Name of reason
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response reason deleted just now
      tags:
      - ReasonV1alpha1
    get:
      description: Get Reason
      operationId: getReason
      parameters:
      - description: Name of reason
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Reason'
          description: Response single reason
      tags:
      - ReasonV1alpha1
    patch:
      description: Patch Reason
      operationId: patchReason
      parameters:
      - description: Name of reason
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Reason'
          description: Response reason patched just now
      tags:
      - ReasonV1alpha1
    put:
      description: Update Reason
      operationId: updateReason
      parameters:
      - description: Name of reason
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Reason'
        description: Updated reason
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Reason'
          description: Response reasons updated just now
      tags:
      - ReasonV1alpha1
  /apis/notification.halo.run/v1alpha1/reasontypes:
    get:
      description: List ReasonType
      operationId: listReasonType
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReasonTypeList'
          description: Response reasontypes
      tags:
      - ReasonTypeV1alpha1
    post:
      description: Create ReasonType
      operationId: createReasonType
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ReasonType'
        description: Fresh reasontype
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReasonType'
          description: Response reasontypes created just now
      tags:
      - ReasonTypeV1alpha1
  /apis/notification.halo.run/v1alpha1/reasontypes/{name}:
    delete:
      description: Delete ReasonType
      operationId: deleteReasonType
      parameters:
      - description: Name of reasontype
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response reasontype deleted just now
      tags:
      - ReasonTypeV1alpha1
    get:
      description: Get ReasonType
      operationId: getReasonType
      parameters:
      - description: Name of reasontype
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReasonType'
          description: Response single reasontype
      tags:
      - ReasonTypeV1alpha1
    patch:
      description: Patch ReasonType
      operationId: patchReasonType
      parameters:
      - description: Name of reasontype
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReasonType'
          description: Response reasontype patched just now
      tags:
      - ReasonTypeV1alpha1
    put:
      description: Update ReasonType
      operationId: updateReasonType
      parameters:
      - description: Name of reasontype
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ReasonType'
        description: Updated reasontype
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReasonType'
          description: Response reasontypes updated just now
      tags:
      - ReasonTypeV1alpha1
  /apis/notification.halo.run/v1alpha1/subscriptions:
    get:
      description: List Subscription
      operationId: listSubscription
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionList'
          description: Response subscriptions
      tags:
      - SubscriptionV1alpha1
    post:
      description: Create Subscription
      operationId: createSubscription
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Subscription'
        description: Fresh subscription
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Response subscriptions created just now
      tags:
      - SubscriptionV1alpha1
  /apis/notification.halo.run/v1alpha1/subscriptions/{name}:
    delete:
      description: Delete Subscription
      operationId: deleteSubscription
      parameters:
      - description: Name of subscription
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response subscription deleted just now
      tags:
      - SubscriptionV1alpha1
    get:
      description: Get Subscription
      operationId: getSubscription
      parameters:
      - description: Name of subscription
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Response single subscription
      tags:
      - SubscriptionV1alpha1
    patch:
      description: Patch Subscription
      operationId: patchSubscription
      parameters:
      - description: Name of subscription
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Response subscription patched just now
      tags:
      - SubscriptionV1alpha1
    put:
      description: Update Subscription
      operationId: updateSubscription
      parameters:
      - description: Name of subscription
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Subscription'
        description: Updated subscription
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Response subscriptions updated just now
      tags:
      - SubscriptionV1alpha1
  /apis/plugin.halo.run/v1alpha1/extensiondefinitions:
    get:
      description: List ExtensionDefinition
      operationId: listExtensionDefinition
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExtensionDefinitionList'
          description: Response extensiondefinitions
      tags:
      - ExtensionDefinitionV1alpha1
    post:
      description: Create ExtensionDefinition
      operationId: createExtensionDefinition
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ExtensionDefinition'
        description: Fresh extensiondefinition
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExtensionDefinition'
          description: Response extensiondefinitions created just now
      tags:
      - ExtensionDefinitionV1alpha1
  /apis/plugin.halo.run/v1alpha1/extensiondefinitions/{name}:
    delete:
      description: Delete ExtensionDefinition
      operationId: deleteExtensionDefinition
      parameters:
      - description: Name of extensiondefinition
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response extensiondefinition deleted just now
      tags:
      - ExtensionDefinitionV1alpha1
    get:
      description: Get ExtensionDefinition
      operationId: getExtensionDefinition
      parameters:
      - description: Name of extensiondefinition
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExtensionDefinition'
          description: Response single extensiondefinition
      tags:
      - ExtensionDefinitionV1alpha1
    patch:
      description: Patch ExtensionDefinition
      operationId: patchExtensionDefinition
      parameters:
      - description: Name of extensiondefinition
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExtensionDefinition'
          description: Response extensiondefinition patched just now
      tags:
      - ExtensionDefinitionV1alpha1
    put:
      description: Update ExtensionDefinition
      operationId: updateExtensionDefinition
      parameters:
      - description: Name of extensiondefinition
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ExtensionDefinition'
        description: Updated extensiondefinition
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExtensionDefinition'
          description: Response extensiondefinitions updated just now
      tags:
      - ExtensionDefinitionV1alpha1
  /apis/plugin.halo.run/v1alpha1/extensionpointdefinitions:
    get:
      description: List ExtensionPointDefinition
      operationId: listExtensionPointDefinition
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExtensionPointDefinitionList'
          description: Response extensionpointdefinitions
      tags:
      - ExtensionPointDefinitionV1alpha1
    post:
      description: Create ExtensionPointDefinition
      operationId: createExtensionPointDefinition
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ExtensionPointDefinition'
        description: Fresh extensionpointdefinition
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExtensionPointDefinition'
          description: Response extensionpointdefinitions created just now
      tags:
      - ExtensionPointDefinitionV1alpha1
  /apis/plugin.halo.run/v1alpha1/extensionpointdefinitions/{name}:
    delete:
      description: Delete ExtensionPointDefinition
      operationId: deleteExtensionPointDefinition
      parameters:
      - description: Name of extensionpointdefinition
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response extensionpointdefinition deleted just now
      tags:
      - ExtensionPointDefinitionV1alpha1
    get:
      description: Get ExtensionPointDefinition
      operationId: getExtensionPointDefinition
      parameters:
      - description: Name of extensionpointdefinition
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExtensionPointDefinition'
          description: Response single extensionpointdefinition
      tags:
      - ExtensionPointDefinitionV1alpha1
    patch:
      description: Patch ExtensionPointDefinition
      operationId: patchExtensionPointDefinition
      parameters:
      - description: Name of extensionpointdefinition
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExtensionPointDefinition'
          description: Response extensionpointdefinition patched just now
      tags:
      - ExtensionPointDefinitionV1alpha1
    put:
      description: Update ExtensionPointDefinition
      operationId: updateExtensionPointDefinition
      parameters:
      - description: Name of extensionpointdefinition
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ExtensionPointDefinition'
        description: Updated extensionpointdefinition
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExtensionPointDefinition'
          description: Response extensionpointdefinitions updated just now
      tags:
      - ExtensionPointDefinitionV1alpha1
  /apis/plugin.halo.run/v1alpha1/plugins:
    get:
      description: List Plugin
      operationId: listPlugin
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PluginList'
          description: Response plugins
      tags:
      - PluginV1alpha1
    post:
      description: Create Plugin
      operationId: createPlugin
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Plugin'
        description: Fresh plugin
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Plugin'
          description: Response plugins created just now
      tags:
      - PluginV1alpha1
  /apis/plugin.halo.run/v1alpha1/plugins/{name}:
    delete:
      description: Delete Plugin
      operationId: deletePlugin
      parameters:
      - description: Name of plugin
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response plugin deleted just now
      tags:
      - PluginV1alpha1
    get:
      description: Get Plugin
      operationId: getPlugin
      parameters:
      - description: Name of plugin
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Plugin'
          description: Response single plugin
      tags:
      - PluginV1alpha1
    patch:
      description: Patch Plugin
      operationId: patchPlugin
      parameters:
      - description: Name of plugin
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Plugin'
          description: Response plugin patched just now
      tags:
      - PluginV1alpha1
    put:
      description: Update Plugin
      operationId: updatePlugin
      parameters:
      - description: Name of plugin
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Plugin'
        description: Updated plugin
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Plugin'
          description: Response plugins updated just now
      tags:
      - PluginV1alpha1
  /apis/plugin.halo.run/v1alpha1/reverseproxies:
    get:
      description: List ReverseProxy
      operationId: listReverseProxy
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReverseProxyList'
          description: Response reverseproxies
      tags:
      - ReverseProxyV1alpha1
    post:
      description: Create ReverseProxy
      operationId: createReverseProxy
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ReverseProxy'
        description: Fresh reverseproxy
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReverseProxy'
          description: Response reverseproxies created just now
      tags:
      - ReverseProxyV1alpha1
  /apis/plugin.halo.run/v1alpha1/reverseproxies/{name}:
    delete:
      description: Delete ReverseProxy
      operationId: deleteReverseProxy
      parameters:
      - description: Name of reverseproxy
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response reverseproxy deleted just now
      tags:
      - ReverseProxyV1alpha1
    get:
      description: Get ReverseProxy
      operationId: getReverseProxy
      parameters:
      - description: Name of reverseproxy
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReverseProxy'
          description: Response single reverseproxy
      tags:
      - ReverseProxyV1alpha1
    patch:
      description: Patch ReverseProxy
      operationId: patchReverseProxy
      parameters:
      - description: Name of reverseproxy
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReverseProxy'
          description: Response reverseproxy patched just now
      tags:
      - ReverseProxyV1alpha1
    put:
      description: Update ReverseProxy
      operationId: updateReverseProxy
      parameters:
      - description: Name of reverseproxy
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ReverseProxy'
        description: Updated reverseproxy
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReverseProxy'
          description: Response reverseproxies updated just now
      tags:
      - ReverseProxyV1alpha1
  /apis/plugin.halo.run/v1alpha1/searchengines:
    get:
      description: List SearchEngine
      operationId: listSearchEngine
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchEngineList'
          description: Response searchengines
      tags:
      - SearchEngineV1alpha1
    post:
      description: Create SearchEngine
      operationId: createSearchEngine
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SearchEngine'
        description: Fresh searchengine
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchEngine'
          description: Response searchengines created just now
      tags:
      - SearchEngineV1alpha1
  /apis/plugin.halo.run/v1alpha1/searchengines/{name}:
    delete:
      description: Delete SearchEngine
      operationId: deleteSearchEngine
      parameters:
      - description: Name of searchengine
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response searchengine deleted just now
      tags:
      - SearchEngineV1alpha1
    get:
      description: Get SearchEngine
      operationId: getSearchEngine
      parameters:
      - description: Name of searchengine
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchEngine'
          description: Response single searchengine
      tags:
      - SearchEngineV1alpha1
    patch:
      description: Patch SearchEngine
      operationId: patchSearchEngine
      parameters:
      - description: Name of searchengine
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchEngine'
          description: Response searchengine patched just now
      tags:
      - SearchEngineV1alpha1
    put:
      description: Update SearchEngine
      operationId: updateSearchEngine
      parameters:
      - description: Name of searchengine
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SearchEngine'
        description: Updated searchengine
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchEngine'
          description: Response searchengines updated just now
      tags:
      - SearchEngineV1alpha1
  /apis/security.halo.run/v1alpha1/devices:
    get:
      description: List Device
      operationId: listDevice
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeviceList'
          description: Response devices
      tags:
      - DeviceV1alpha1
    post:
      description: Create Device
      operationId: createDevice
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Device'
        description: Fresh device
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Device'
          description: Response devices created just now
      tags:
      - DeviceV1alpha1
  /apis/security.halo.run/v1alpha1/devices/{name}:
    delete:
      description: Delete Device
      operationId: deleteDevice
      parameters:
      - description: Name of device
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response device deleted just now
      tags:
      - DeviceV1alpha1
    get:
      description: Get Device
      operationId: getDevice
      parameters:
      - description: Name of device
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Device'
          description: Response single device
      tags:
      - DeviceV1alpha1
    patch:
      description: Patch Device
      operationId: patchDevice
      parameters:
      - description: Name of device
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Device'
          description: Response device patched just now
      tags:
      - DeviceV1alpha1
    put:
      description: Update Device
      operationId: updateDevice
      parameters:
      - description: Name of device
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Device'
        description: Updated device
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Device'
          description: Response devices updated just now
      tags:
      - DeviceV1alpha1
  /apis/security.halo.run/v1alpha1/personalaccesstokens:
    get:
      description: List PersonalAccessToken
      operationId: listPersonalAccessToken
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PersonalAccessTokenList'
          description: Response personalaccesstokens
      tags:
      - PersonalAccessTokenV1alpha1
    post:
      description: Create PersonalAccessToken
      operationId: createPersonalAccessToken
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PersonalAccessToken'
        description: Fresh personalaccesstoken
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PersonalAccessToken'
          description: Response personalaccesstokens created just now
      tags:
      - PersonalAccessTokenV1alpha1
  /apis/security.halo.run/v1alpha1/personalaccesstokens/{name}:
    delete:
      description: Delete PersonalAccessToken
      operationId: deletePersonalAccessToken
      parameters:
      - description: Name of personalaccesstoken
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response personalaccesstoken deleted just now
      tags:
      - PersonalAccessTokenV1alpha1
    get:
      description: Get PersonalAccessToken
      operationId: getPersonalAccessToken
      parameters:
      - description: Name of personalaccesstoken
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PersonalAccessToken'
          description: Response single personalaccesstoken
      tags:
      - PersonalAccessTokenV1alpha1
    patch:
      description: Patch PersonalAccessToken
      operationId: patchPersonalAccessToken
      parameters:
      - description: Name of personalaccesstoken
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PersonalAccessToken'
          description: Response personalaccesstoken patched just now
      tags:
      - PersonalAccessTokenV1alpha1
    put:
      description: Update PersonalAccessToken
      operationId: updatePersonalAccessToken
      parameters:
      - description: Name of personalaccesstoken
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PersonalAccessToken'
        description: Updated personalaccesstoken
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PersonalAccessToken'
          description: Response personalaccesstokens updated just now
      tags:
      - PersonalAccessTokenV1alpha1
  /apis/security.halo.run/v1alpha1/remembermetokens:
    get:
      description: List RememberMeToken
      operationId: listRememberMeToken
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RememberMeTokenList'
          description: Response remembermetokens
      tags:
      - RememberMeTokenV1alpha1
    post:
      description: Create RememberMeToken
      operationId: createRememberMeToken
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RememberMeToken'
        description: Fresh remembermetoken
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RememberMeToken'
          description: Response remembermetokens created just now
      tags:
      - RememberMeTokenV1alpha1
  /apis/security.halo.run/v1alpha1/remembermetokens/{name}:
    delete:
      description: Delete RememberMeToken
      operationId: deleteRememberMeToken
      parameters:
      - description: Name of remembermetoken
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response remembermetoken deleted just now
      tags:
      - RememberMeTokenV1alpha1
    get:
      description: Get RememberMeToken
      operationId: getRememberMeToken
      parameters:
      - description: Name of remembermetoken
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RememberMeToken'
          description: Response single remembermetoken
      tags:
      - RememberMeTokenV1alpha1
    patch:
      description: Patch RememberMeToken
      operationId: patchRememberMeToken
      parameters:
      - description: Name of remembermetoken
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RememberMeToken'
          description: Response remembermetoken patched just now
      tags:
      - RememberMeTokenV1alpha1
    put:
      description: Update RememberMeToken
      operationId: updateRememberMeToken
      parameters:
      - description: Name of remembermetoken
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RememberMeToken'
        description: Updated remembermetoken
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RememberMeToken'
          description: Response remembermetokens updated just now
      tags:
      - RememberMeTokenV1alpha1
  /apis/storage.halo.run/v1alpha1/attachments:
    get:
      description: List Attachment
      operationId: listAttachment
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AttachmentList'
          description: Response attachments
      tags:
      - AttachmentV1alpha1
    post:
      description: Create Attachment
      operationId: createAttachment
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Attachment'
        description: Fresh attachment
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Response attachments created just now
      tags:
      - AttachmentV1alpha1
  /apis/storage.halo.run/v1alpha1/attachments/{name}:
    delete:
      description: Delete Attachment
      operationId: deleteAttachment
      parameters:
      - description: Name of attachment
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response attachment deleted just now
      tags:
      - AttachmentV1alpha1
    get:
      description: Get Attachment
      operationId: getAttachment
      parameters:
      - description: Name of attachment
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Response single attachment
      tags:
      - AttachmentV1alpha1
    patch:
      description: Patch Attachment
      operationId: patchAttachment
      parameters:
      - description: Name of attachment
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Response attachment patched just now
      tags:
      - AttachmentV1alpha1
    put:
      description: Update Attachment
      operationId: updateAttachment
      parameters:
      - description: Name of attachment
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Attachment'
        description: Updated attachment
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Response attachments updated just now
      tags:
      - AttachmentV1alpha1
  /apis/storage.halo.run/v1alpha1/groups:
    get:
      description: List Group
      operationId: listGroup
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GroupList'
          description: Response groups
      tags:
      - GroupV1alpha1
    post:
      description: Create Group
      operationId: createGroup
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Group'
        description: Fresh group
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Group'
          description: Response groups created just now
      tags:
      - GroupV1alpha1
  /apis/storage.halo.run/v1alpha1/groups/{name}:
    delete:
      description: Delete Group
      operationId: deleteGroup
      parameters:
      - description: Name of group
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response group deleted just now
      tags:
      - GroupV1alpha1
    get:
      description: Get Group
      operationId: getGroup
      parameters:
      - description: Name of group
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Group'
          description: Response single group
      tags:
      - GroupV1alpha1
    patch:
      description: Patch Group
      operationId: patchGroup
      parameters:
      - description: Name of group
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Group'
          description: Response group patched just now
      tags:
      - GroupV1alpha1
    put:
      description: Update Group
      operationId: updateGroup
      parameters:
      - description: Name of group
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Group'
        description: Updated group
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Group'
          description: Response groups updated just now
      tags:
      - GroupV1alpha1
  /apis/storage.halo.run/v1alpha1/localthumbnails:
    get:
      description: List LocalThumbnail
      operationId: listLocalThumbnail
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocalThumbnailList'
          description: Response localthumbnails
      tags:
      - LocalThumbnailV1alpha1
    post:
      description: Create LocalThumbnail
      operationId: createLocalThumbnail
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/LocalThumbnail'
        description: Fresh localthumbnail
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocalThumbnail'
          description: Response localthumbnails created just now
      tags:
      - LocalThumbnailV1alpha1
  /apis/storage.halo.run/v1alpha1/localthumbnails/{name}:
    delete:
      description: Delete LocalThumbnail
      operationId: deleteLocalThumbnail
      parameters:
      - description: Name of localthumbnail
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response localthumbnail deleted just now
      tags:
      - LocalThumbnailV1alpha1
    get:
      description: Get LocalThumbnail
      operationId: getLocalThumbnail
      parameters:
      - description: Name of localthumbnail
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocalThumbnail'
          description: Response single localthumbnail
      tags:
      - LocalThumbnailV1alpha1
    patch:
      description: Patch LocalThumbnail
      operationId: patchLocalThumbnail
      parameters:
      - description: Name of localthumbnail
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocalThumbnail'
          description: Response localthumbnail patched just now
      tags:
      - LocalThumbnailV1alpha1
    put:
      description: Update LocalThumbnail
      operationId: updateLocalThumbnail
      parameters:
      - description: Name of localthumbnail
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/LocalThumbnail'
        description: Updated localthumbnail
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocalThumbnail'
          description: Response localthumbnails updated just now
      tags:
      - LocalThumbnailV1alpha1
  /apis/storage.halo.run/v1alpha1/policies:
    get:
      description: List Policy
      operationId: listPolicy
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PolicyList'
          description: Response policies
      tags:
      - PolicyV1alpha1
    post:
      description: Create Policy
      operationId: createPolicy
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Policy'
        description: Fresh policy
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Policy'
          description: Response policies created just now
      tags:
      - PolicyV1alpha1
  /apis/storage.halo.run/v1alpha1/policies/{name}:
    delete:
      description: Delete Policy
      operationId: deletePolicy
      parameters:
      - description: Name of policy
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response policy deleted just now
      tags:
      - PolicyV1alpha1
    get:
      description: Get Policy
      operationId: getPolicy
      parameters:
      - description: Name of policy
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Policy'
          description: Response single policy
      tags:
      - PolicyV1alpha1
    patch:
      description: Patch Policy
      operationId: patchPolicy
      parameters:
      - description: Name of policy
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Policy'
          description: Response policy patched just now
      tags:
      - PolicyV1alpha1
    put:
      description: Update Policy
      operationId: updatePolicy
      parameters:
      - description: Name of policy
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Policy'
        description: Updated policy
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Policy'
          description: Response policies updated just now
      tags:
      - PolicyV1alpha1
  /apis/storage.halo.run/v1alpha1/policytemplates:
    get:
      description: List PolicyTemplate
      operationId: listPolicyTemplate
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PolicyTemplateList'
          description: Response policytemplates
      tags:
      - PolicyTemplateV1alpha1
    post:
      description: Create PolicyTemplate
      operationId: createPolicyTemplate
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PolicyTemplate'
        description: Fresh policytemplate
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PolicyTemplate'
          description: Response policytemplates created just now
      tags:
      - PolicyTemplateV1alpha1
  /apis/storage.halo.run/v1alpha1/policytemplates/{name}:
    delete:
      description: Delete PolicyTemplate
      operationId: deletePolicyTemplate
      parameters:
      - description: Name of policytemplate
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response policytemplate deleted just now
      tags:
      - PolicyTemplateV1alpha1
    get:
      description: Get PolicyTemplate
      operationId: getPolicyTemplate
      parameters:
      - description: Name of policytemplate
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PolicyTemplate'
          description: Response single policytemplate
      tags:
      - PolicyTemplateV1alpha1
    patch:
      description: Patch PolicyTemplate
      operationId: patchPolicyTemplate
      parameters:
      - description: Name of policytemplate
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PolicyTemplate'
          description: Response policytemplate patched just now
      tags:
      - PolicyTemplateV1alpha1
    put:
      description: Update PolicyTemplate
      operationId: updatePolicyTemplate
      parameters:
      - description: Name of policytemplate
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PolicyTemplate'
        description: Updated policytemplate
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PolicyTemplate'
          description: Response policytemplates updated just now
      tags:
      - PolicyTemplateV1alpha1
  /apis/storage.halo.run/v1alpha1/thumbnails:
    get:
      description: List Thumbnail
      operationId: listThumbnail
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ThumbnailList'
          description: Response thumbnails
      tags:
      - ThumbnailV1alpha1
    post:
      description: Create Thumbnail
      operationId: createThumbnail
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Thumbnail'
        description: Fresh thumbnail
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Thumbnail'
          description: Response thumbnails created just now
      tags:
      - ThumbnailV1alpha1
  /apis/storage.halo.run/v1alpha1/thumbnails/{name}:
    delete:
      description: Delete Thumbnail
      operationId: deleteThumbnail
      parameters:
      - description: Name of thumbnail
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response thumbnail deleted just now
      tags:
      - ThumbnailV1alpha1
    get:
      description: Get Thumbnail
      operationId: getThumbnail
      parameters:
      - description: Name of thumbnail
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Thumbnail'
          description: Response single thumbnail
      tags:
      - ThumbnailV1alpha1
    patch:
      description: Patch Thumbnail
      operationId: patchThumbnail
      parameters:
      - description: Name of thumbnail
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Thumbnail'
          description: Response thumbnail patched just now
      tags:
      - ThumbnailV1alpha1
    put:
      description: Update Thumbnail
      operationId: updateThumbnail
      parameters:
      - description: Name of thumbnail
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Thumbnail'
        description: Updated thumbnail
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Thumbnail'
          description: Response thumbnails updated just now
      tags:
      - ThumbnailV1alpha1
  /apis/theme.halo.run/v1alpha1/themes:
    get:
      description: List Theme
      operationId: listTheme
      parameters:
      - description: Page number. Default is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Size number. Default is 0.
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Label selector. e.g.: hidden!=true"
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Field selector. e.g.: metadata.name==halo"
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ThemeList'
          description: Response themes
      tags:
      - ThemeV1alpha1
    post:
      description: Create Theme
      operationId: createTheme
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Theme'
        description: Fresh theme
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Theme'
          description: Response themes created just now
      tags:
      - ThemeV1alpha1
  /apis/theme.halo.run/v1alpha1/themes/{name}:
    delete:
      description: Delete Theme
      operationId: deleteTheme
      parameters:
      - description: Name of theme
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Response theme deleted just now
      tags:
      - ThemeV1alpha1
    get:
      description: Get Theme
      operationId: getTheme
      parameters:
      - description: Name of theme
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Theme'
          description: Response single theme
      tags:
      - ThemeV1alpha1
    patch:
      description: Patch Theme
      operationId: patchTheme
      parameters:
      - description: Name of theme
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Theme'
          description: Response theme patched just now
      tags:
      - ThemeV1alpha1
    put:
      description: Update Theme
      operationId: updateTheme
      parameters:
      - description: Name of theme
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Theme'
        description: Updated theme
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Theme'
          description: Response themes updated just now
      tags:
      - ThemeV1alpha1
components:
  schemas:
    AddOperation:
      properties:
        op:
          enum:
          - add
          type: string
        path:
          description: A JSON Pointer path pointing to the location to move/copy from.
          example: /a/b/c
          pattern: "^(/[^/~]*(~[01][^/~]*)*)*$"
          type: string
        value:
          description: Value can be any JSON value
      required:
      - op
      - path
      - value
      type: object
    AnnotationSetting:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          targetRef:
            kind: kind
            group: group
          formSchema:
          - "{}"
          - "{}"
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/AnnotationSettingSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    AnnotationSettingList:
      example:
        total: 5
        last: true
        size: 1
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 6
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            targetRef:
              kind: kind
              group: group
            formSchema:
            - "{}"
            - "{}"
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            targetRef:
              kind: kind
              group: group
            formSchema:
            - "{}"
            - "{}"
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/AnnotationSetting'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    AnnotationSettingSpec:
      example:
        targetRef:
          kind: kind
          group: group
        formSchema:
        - "{}"
        - "{}"
      properties:
        formSchema:
          items:
            minLength: 1
            type: object
          minLength: 1
          type: array
        targetRef:
          $ref: '#/components/schemas/GroupKind'
      required:
      - formSchema
      - targetRef
      type: object
    Attachment:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          groupName: groupName
          ownerName: ownerName
          size: 0
          policyName: policyName
          displayName: displayName
          mediaType: mediaType
          tags:
          - tags
          - tags
        status:
          permalink: permalink
          thumbnails:
            key: thumbnails
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/AttachmentSpec'
        status:
          $ref: '#/components/schemas/AttachmentStatus'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    AttachmentList:
      example:
        total: 5
        last: true
        size: 1
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 6
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            groupName: groupName
            ownerName: ownerName
            size: 0
            policyName: policyName
            displayName: displayName
            mediaType: mediaType
            tags:
            - tags
            - tags
          status:
            permalink: permalink
            thumbnails:
              key: thumbnails
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            groupName: groupName
            ownerName: ownerName
            size: 0
            policyName: policyName
            displayName: displayName
            mediaType: mediaType
            tags:
            - tags
            - tags
          status:
            permalink: permalink
            thumbnails:
              key: thumbnails
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    AttachmentSpec:
      example:
        groupName: groupName
        ownerName: ownerName
        size: 0
        policyName: policyName
        displayName: displayName
        mediaType: mediaType
        tags:
        - tags
        - tags
      properties:
        displayName:
          description: Display name of attachment
          type: string
        groupName:
          description: Group name
          type: string
        mediaType:
          description: Media type of attachment
          type: string
        ownerName:
          description: Name of User who uploads the attachment
          type: string
        policyName:
          description: Policy name
          type: string
        size:
          description: Size of attachment. Unit is Byte
          format: int64
          minimum: 0
          type: integer
        tags:
          description: Tags of attachment
          items:
            description: Tag name
            type: string
          type: array
          uniqueItems: true
      type: object
    AttachmentStatus:
      example:
        permalink: permalink
        thumbnails:
          key: thumbnails
      properties:
        permalink:
          description: |
            Permalink of attachment.
            If it is in local storage, the public URL will be set.
            If it is in s3 storage, the Object URL will be set.
          type: string
        thumbnails:
          additionalProperties:
            type: string
          type: object
      type: object
    AuthProvider:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          bindingUrl: bindingUrl
          settingRef:
            name: name
            group: group
          website: website
          method: method
          configMapRef:
            name: name
          rememberMeSupport: true
          displayName: displayName
          description: description
          unbindUrl: unbindUrl
          logo: logo
          authenticationUrl: authenticationUrl
          helpPage: helpPage
          authType: FORM
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/AuthProviderSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    AuthProviderList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            bindingUrl: bindingUrl
            settingRef:
              name: name
              group: group
            website: website
            method: method
            configMapRef:
              name: name
            rememberMeSupport: true
            displayName: displayName
            description: description
            unbindUrl: unbindUrl
            logo: logo
            authenticationUrl: authenticationUrl
            helpPage: helpPage
            authType: FORM
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            bindingUrl: bindingUrl
            settingRef:
              name: name
              group: group
            website: website
            method: method
            configMapRef:
              name: name
            rememberMeSupport: true
            displayName: displayName
            description: description
            unbindUrl: unbindUrl
            logo: logo
            authenticationUrl: authenticationUrl
            helpPage: helpPage
            authType: FORM
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/AuthProvider'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    AuthProviderSpec:
      example:
        bindingUrl: bindingUrl
        settingRef:
          name: name
          group: group
        website: website
        method: method
        configMapRef:
          name: name
        rememberMeSupport: true
        displayName: displayName
        description: description
        unbindUrl: unbindUrl
        logo: logo
        authenticationUrl: authenticationUrl
        helpPage: helpPage
        authType: FORM
      properties:
        authType:
          enum:
          - FORM
          - OAUTH2
          type: string
        authenticationUrl:
          description: Authentication url of the auth provider
          type: string
        bindingUrl:
          type: string
        configMapRef:
          $ref: '#/components/schemas/ConfigMapRef'
        description:
          type: string
        displayName:
          description: Display name of the auth provider
          type: string
        helpPage:
          type: string
        logo:
          type: string
        method:
          type: string
        rememberMeSupport:
          type: boolean
        settingRef:
          $ref: '#/components/schemas/SettingRef'
        unbindUrl:
          type: string
        website:
          type: string
      required:
      - authType
      - authenticationUrl
      - displayName
      type: object
    Author:
      example:
        website: website
        name: name
      properties:
        name:
          minLength: 1
          type: string
        website:
          type: string
      required:
      - name
      type: object
    Backup:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          format: format
          expiresAt: 2000-01-23T04:56:07.000+00:00
        status:
          phase: PENDING
          completionTimestamp: 2000-01-23T04:56:07.000+00:00
          filename: filename
          size: 0
          failureReason: failureReason
          failureMessage: failureMessage
          startTimestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/BackupSpec'
        status:
          $ref: '#/components/schemas/BackupStatus'
      required:
      - apiVersion
      - kind
      - metadata
      type: object
    BackupList:
      example:
        total: 5
        last: true
        size: 1
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 6
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            format: format
            expiresAt: 2000-01-23T04:56:07.000+00:00
          status:
            phase: PENDING
            completionTimestamp: 2000-01-23T04:56:07.000+00:00
            filename: filename
            size: 0
            failureReason: failureReason
            failureMessage: failureMessage
            startTimestamp: 2000-01-23T04:56:07.000+00:00
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            format: format
            expiresAt: 2000-01-23T04:56:07.000+00:00
          status:
            phase: PENDING
            completionTimestamp: 2000-01-23T04:56:07.000+00:00
            filename: filename
            size: 0
            failureReason: failureReason
            failureMessage: failureMessage
            startTimestamp: 2000-01-23T04:56:07.000+00:00
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Backup'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    BackupSpec:
      example:
        format: format
        expiresAt: 2000-01-23T04:56:07.000+00:00
      properties:
        expiresAt:
          format: date-time
          type: string
        format:
          description: "Backup file format. Currently, only zip format is supported."
          type: string
      type: object
    BackupStatus:
      example:
        phase: PENDING
        completionTimestamp: 2000-01-23T04:56:07.000+00:00
        filename: filename
        size: 0
        failureReason: failureReason
        failureMessage: failureMessage
        startTimestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        completionTimestamp:
          format: date-time
          type: string
        failureMessage:
          type: string
        failureReason:
          type: string
        filename:
          type: string
        phase:
          enum:
          - PENDING
          - RUNNING
          - SUCCEEDED
          - FAILED
          type: string
        size:
          format: int64
          type: integer
        startTimestamp:
          format: date-time
          type: string
      type: object
    Category:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          cover: cover
          template: template
          children:
          - children
          - children
          hideFromList: true
          displayName: displayName
          description: description
          preventParentPostCascadeQuery: true
          priority: 0
          postTemplate: postTemplate
          slug: slug
        status:
          visiblePostCount: 1
          postCount: 6
          permalink: permalink
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/CategorySpec'
        status:
          $ref: '#/components/schemas/CategoryStatus'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    CategoryList:
      example:
        total: 2
        last: true
        size: 5
        totalPages: 7
        hasPrevious: true
        hasNext: true
        page: 5
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            cover: cover
            template: template
            children:
            - children
            - children
            hideFromList: true
            displayName: displayName
            description: description
            preventParentPostCascadeQuery: true
            priority: 0
            postTemplate: postTemplate
            slug: slug
          status:
            visiblePostCount: 1
            postCount: 6
            permalink: permalink
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            cover: cover
            template: template
            children:
            - children
            - children
            hideFromList: true
            displayName: displayName
            description: description
            preventParentPostCascadeQuery: true
            priority: 0
            postTemplate: postTemplate
            slug: slug
          status:
            visiblePostCount: 1
            postCount: 6
            permalink: permalink
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Category'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    CategorySpec:
      example:
        cover: cover
        template: template
        children:
        - children
        - children
        hideFromList: true
        displayName: displayName
        description: description
        preventParentPostCascadeQuery: true
        priority: 0
        postTemplate: postTemplate
        slug: slug
      properties:
        children:
          items:
            type: string
          type: array
        cover:
          type: string
        description:
          type: string
        displayName:
          minLength: 1
          type: string
        hideFromList:
          type: boolean
        postTemplate:
          maxLength: 255
          type: string
        preventParentPostCascadeQuery:
          type: boolean
        priority:
          default: 0
          format: int32
          type: integer
        slug:
          minLength: 1
          type: string
        template:
          maxLength: 255
          type: string
      required:
      - displayName
      - priority
      - slug
      type: object
    CategoryStatus:
      example:
        visiblePostCount: 1
        postCount: 6
        permalink: permalink
      properties:
        permalink:
          type: string
        postCount:
          format: int32
          type: integer
        visiblePostCount:
          format: int32
          type: integer
      type: object
    Comment:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          owner:
            displayName: displayName
            kind: kind
            name: name
            annotations:
              key: annotations
          creationTime: 2000-01-23T04:56:07.000+00:00
          hidden: false
          lastReadTime: 2000-01-23T04:56:07.000+00:00
          ipAddress: ipAddress
          raw: raw
          subjectRef:
            kind: kind
            name: name
            version: version
            group: group
          userAgent: userAgent
          priority: 0
          content: content
          approved: false
          top: false
          approvedTime: 2000-01-23T04:56:07.000+00:00
          allowNotification: true
        status:
          observedVersion: 6
          visibleReplyCount: 5
          replyCount: 1
          unreadReplyCount: 5
          lastReplyTime: 2000-01-23T04:56:07.000+00:00
          hasNewReply: true
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/CommentSpec'
        status:
          $ref: '#/components/schemas/CommentStatus'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    CommentList:
      example:
        total: 9
        last: true
        size: 7
        totalPages: 3
        hasPrevious: true
        hasNext: true
        page: 2
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            owner:
              displayName: displayName
              kind: kind
              name: name
              annotations:
                key: annotations
            creationTime: 2000-01-23T04:56:07.000+00:00
            hidden: false
            lastReadTime: 2000-01-23T04:56:07.000+00:00
            ipAddress: ipAddress
            raw: raw
            subjectRef:
              kind: kind
              name: name
              version: version
              group: group
            userAgent: userAgent
            priority: 0
            content: content
            approved: false
            top: false
            approvedTime: 2000-01-23T04:56:07.000+00:00
            allowNotification: true
          status:
            observedVersion: 6
            visibleReplyCount: 5
            replyCount: 1
            unreadReplyCount: 5
            lastReplyTime: 2000-01-23T04:56:07.000+00:00
            hasNewReply: true
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            owner:
              displayName: displayName
              kind: kind
              name: name
              annotations:
                key: annotations
            creationTime: 2000-01-23T04:56:07.000+00:00
            hidden: false
            lastReadTime: 2000-01-23T04:56:07.000+00:00
            ipAddress: ipAddress
            raw: raw
            subjectRef:
              kind: kind
              name: name
              version: version
              group: group
            userAgent: userAgent
            priority: 0
            content: content
            approved: false
            top: false
            approvedTime: 2000-01-23T04:56:07.000+00:00
            allowNotification: true
          status:
            observedVersion: 6
            visibleReplyCount: 5
            replyCount: 1
            unreadReplyCount: 5
            lastReplyTime: 2000-01-23T04:56:07.000+00:00
            hasNewReply: true
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Comment'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    CommentOwner:
      example:
        displayName: displayName
        kind: kind
        name: name
        annotations:
          key: annotations
      properties:
        annotations:
          additionalProperties:
            type: string
          type: object
        displayName:
          type: string
        kind:
          minLength: 1
          type: string
        name:
          maxLength: 64
          type: string
      required:
      - kind
      - name
      type: object
    CommentSpec:
      example:
        owner:
          displayName: displayName
          kind: kind
          name: name
          annotations:
            key: annotations
        creationTime: 2000-01-23T04:56:07.000+00:00
        hidden: false
        lastReadTime: 2000-01-23T04:56:07.000+00:00
        ipAddress: ipAddress
        raw: raw
        subjectRef:
          kind: kind
          name: name
          version: version
          group: group
        userAgent: userAgent
        priority: 0
        content: content
        approved: false
        top: false
        approvedTime: 2000-01-23T04:56:07.000+00:00
        allowNotification: true
      properties:
        allowNotification:
          default: true
          type: boolean
        approved:
          default: false
          type: boolean
        approvedTime:
          format: date-time
          type: string
        content:
          minLength: 1
          type: string
        creationTime:
          format: date-time
          type: string
        hidden:
          default: false
          type: boolean
        ipAddress:
          type: string
        lastReadTime:
          format: date-time
          type: string
        owner:
          $ref: '#/components/schemas/CommentOwner'
        priority:
          default: 0
          format: int32
          type: integer
        raw:
          minLength: 1
          type: string
        subjectRef:
          $ref: '#/components/schemas/Ref'
        top:
          default: false
          type: boolean
        userAgent:
          type: string
      required:
      - allowNotification
      - approved
      - content
      - hidden
      - owner
      - priority
      - raw
      - subjectRef
      - top
      type: object
    CommentStatus:
      example:
        observedVersion: 6
        visibleReplyCount: 5
        replyCount: 1
        unreadReplyCount: 5
        lastReplyTime: 2000-01-23T04:56:07.000+00:00
        hasNewReply: true
      properties:
        hasNewReply:
          type: boolean
        lastReplyTime:
          format: date-time
          type: string
        observedVersion:
          format: int64
          type: integer
        replyCount:
          format: int32
          type: integer
        unreadReplyCount:
          format: int32
          type: integer
        visibleReplyCount:
          format: int32
          type: integer
      type: object
    Condition:
      example:
        reason: reason
        lastTransitionTime: 2000-01-23T04:56:07.000+00:00
        message: message
        type: type
        status: "TRUE"
      properties:
        lastTransitionTime:
          format: date-time
          type: string
        message:
          maxLength: 32768
          type: string
        reason:
          maxLength: 1024
          pattern: "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
          type: string
        status:
          enum:
          - "TRUE"
          - "FALSE"
          - UNKNOWN
          type: string
        type:
          maxLength: 316
          pattern: "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
          type: string
      required:
      - lastTransitionTime
      - status
      - type
      type: object
    ConfigMap:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        data:
          key: data
        kind: kind
      properties:
        apiVersion:
          type: string
        data:
          additionalProperties:
            type: string
          type: object
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
      - apiVersion
      - kind
      - metadata
      type: object
    ConfigMapList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          data:
            key: data
          kind: kind
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          data:
            key: data
          kind: kind
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/ConfigMap'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    ConfigMapRef:
      example:
        name: name
      properties:
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    CopyOperation:
      properties:
        from:
          description: A JSON Pointer path pointing to the location to move/copy from.
          example: /a/b/c
          pattern: "^(/[^/~]*(~[01][^/~]*)*)*$"
          type: string
        op:
          enum:
          - copy
          type: string
        path:
          description: A JSON Pointer path pointing to the location to move/copy from.
          example: /a/b/c
          pattern: "^(/[^/~]*(~[01][^/~]*)*)*$"
          type: string
      required:
      - from
      - op
      - path
      type: object
    Counter:
      example:
        totalComment: 1
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        downvote: 6
        kind: kind
        approvedComment: 0
        visit: 5
        upvote: 5
      properties:
        apiVersion:
          type: string
        approvedComment:
          format: int32
          type: integer
        downvote:
          format: int32
          type: integer
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        totalComment:
          format: int32
          type: integer
        upvote:
          format: int32
          type: integer
        visit:
          format: int32
          type: integer
      required:
      - apiVersion
      - kind
      - metadata
      type: object
    CounterList:
      example:
        total: 9
        last: true
        size: 7
        totalPages: 3
        hasPrevious: true
        hasNext: true
        page: 2
        items:
        - totalComment: 1
          metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          downvote: 6
          kind: kind
          approvedComment: 0
          visit: 5
          upvote: 5
        - totalComment: 1
          metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          downvote: 6
          kind: kind
          approvedComment: 0
          visit: 5
          upvote: 5
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Counter'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    CustomTemplates:
      example:
        post:
        - file: file
          name: name
          description: description
          screenshot: screenshot
        - file: file
          name: name
          description: description
          screenshot: screenshot
        page:
        - file: file
          name: name
          description: description
          screenshot: screenshot
        - file: file
          name: name
          description: description
          screenshot: screenshot
        category:
        - file: file
          name: name
          description: description
          screenshot: screenshot
        - file: file
          name: name
          description: description
          screenshot: screenshot
      properties:
        category:
          items:
            $ref: '#/components/schemas/TemplateDescriptor'
          type: array
        page:
          items:
            $ref: '#/components/schemas/TemplateDescriptor'
          type: array
        post:
          items:
            $ref: '#/components/schemas/TemplateDescriptor'
          type: array
      type: object
    Device:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          lastAccessedTime: 2000-01-23T04:56:07.000+00:00
          lastAuthenticatedTime: 2000-01-23T04:56:07.000+00:00
          ipAddress: ipAddress
          principalName: principalName
          userAgent: userAgent
          sessionId: sessionId
          rememberMeSeriesId: rememberMeSeriesId
        status:
          os: os
          browser: browser
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/DeviceSpec'
        status:
          $ref: '#/components/schemas/DeviceStatus'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      - status
      type: object
    DeviceList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            lastAccessedTime: 2000-01-23T04:56:07.000+00:00
            lastAuthenticatedTime: 2000-01-23T04:56:07.000+00:00
            ipAddress: ipAddress
            principalName: principalName
            userAgent: userAgent
            sessionId: sessionId
            rememberMeSeriesId: rememberMeSeriesId
          status:
            os: os
            browser: browser
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            lastAccessedTime: 2000-01-23T04:56:07.000+00:00
            lastAuthenticatedTime: 2000-01-23T04:56:07.000+00:00
            ipAddress: ipAddress
            principalName: principalName
            userAgent: userAgent
            sessionId: sessionId
            rememberMeSeriesId: rememberMeSeriesId
          status:
            os: os
            browser: browser
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Device'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    DeviceSpec:
      example:
        lastAccessedTime: 2000-01-23T04:56:07.000+00:00
        lastAuthenticatedTime: 2000-01-23T04:56:07.000+00:00
        ipAddress: ipAddress
        principalName: principalName
        userAgent: userAgent
        sessionId: sessionId
        rememberMeSeriesId: rememberMeSeriesId
      properties:
        ipAddress:
          maxLength: 129
          type: string
        lastAccessedTime:
          format: date-time
          type: string
        lastAuthenticatedTime:
          format: date-time
          type: string
        principalName:
          minLength: 1
          type: string
        rememberMeSeriesId:
          type: string
        sessionId:
          minLength: 1
          type: string
        userAgent:
          maxLength: 500
          type: string
      required:
      - ipAddress
      - principalName
      - sessionId
      type: object
    DeviceStatus:
      example:
        os: os
        browser: browser
      properties:
        browser:
          type: string
        os:
          type: string
      type: object
    Excerpt:
      example:
        raw: raw
        autoGenerate: true
      properties:
        autoGenerate:
          default: true
          type: boolean
        raw:
          type: string
      required:
      - autoGenerate
      type: object
    ExtensionDefinition:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          displayName: displayName
          icon: icon
          description: description
          extensionPointName: extensionPointName
          className: className
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ExtensionSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    ExtensionDefinitionList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            displayName: displayName
            icon: icon
            description: description
            extensionPointName: extensionPointName
            className: className
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            displayName: displayName
            icon: icon
            description: description
            extensionPointName: extensionPointName
            className: className
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/ExtensionDefinition'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    ExtensionPointDefinition:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          displayName: displayName
          icon: icon
          description: description
          className: className
          type: SINGLETON
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ExtensionPointSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    ExtensionPointDefinitionList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            displayName: displayName
            icon: icon
            description: description
            className: className
            type: SINGLETON
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            displayName: displayName
            icon: icon
            description: description
            className: className
            type: SINGLETON
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/ExtensionPointDefinition'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    ExtensionPointSpec:
      example:
        displayName: displayName
        icon: icon
        description: description
        className: className
        type: SINGLETON
      properties:
        className:
          type: string
        description:
          type: string
        displayName:
          type: string
        icon:
          type: string
        type:
          enum:
          - SINGLETON
          - MULTI_INSTANCE
          type: string
      required:
      - className
      - displayName
      - type
      type: object
    ExtensionSpec:
      example:
        displayName: displayName
        icon: icon
        description: description
        extensionPointName: extensionPointName
        className: className
      properties:
        className:
          type: string
        description:
          type: string
        displayName:
          type: string
        extensionPointName:
          type: string
        icon:
          type: string
      required:
      - className
      - displayName
      - extensionPointName
      type: object
    FileReverseProxyProvider:
      example:
        filename: filename
        directory: directory
      properties:
        directory:
          type: string
        filename:
          type: string
      type: object
    Group:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          displayName: displayName
        status:
          totalAttachments: 0
          updateTimestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/GroupSpec'
        status:
          $ref: '#/components/schemas/GroupStatus'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    GroupKind:
      example:
        kind: kind
        group: group
      properties:
        group:
          type: string
        kind:
          type: string
      type: object
    GroupList:
      example:
        total: 5
        last: true
        size: 1
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 6
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            displayName: displayName
          status:
            totalAttachments: 0
            updateTimestamp: 2000-01-23T04:56:07.000+00:00
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            displayName: displayName
          status:
            totalAttachments: 0
            updateTimestamp: 2000-01-23T04:56:07.000+00:00
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Group'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    GroupSpec:
      example:
        displayName: displayName
      properties:
        displayName:
          description: Display name of group
          type: string
      required:
      - displayName
      type: object
    GroupStatus:
      example:
        totalAttachments: 0
        updateTimestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        totalAttachments:
          description: Total of attachments under the current group
          format: int64
          minimum: 0
          type: integer
        updateTimestamp:
          description: Update timestamp of the group
          format: date-time
          type: string
      type: object
    InterestReason:
      description: The reason to be interested in
      example:
        expression: expression
        subject:
          apiVersion: apiVersion
          kind: kind
          name: name
        reasonType: reasonType
      properties:
        expression:
          description: The expression to be interested in
          type: string
        reasonType:
          description: The name of the reason definition to be interested in
          type: string
        subject:
          $ref: '#/components/schemas/InterestReasonSubject'
      required:
      - reasonType
      - subject
      type: object
    InterestReasonSubject:
      description: The subject name of reason type to be interested in
      example:
        apiVersion: apiVersion
        kind: kind
        name: name
      properties:
        apiVersion:
          minLength: 1
          type: string
        kind:
          minLength: 1
          type: string
        name:
          description: "if name is not specified, it presents all subjects of the\
            \ specified reason type and custom resources"
          type: string
      required:
      - apiVersion
      - kind
      type: object
    JsonPatch:
      description: JSON schema for JSONPatch operations
      items:
        $ref: '#/components/schemas/JsonPatch_inner'
      minItems: 1
      type: array
      uniqueItems: true
    License:
      example:
        name: name
        url: url
      properties:
        name:
          type: string
        url:
          type: string
      type: object
    LocalThumbnail:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          imageUri: imageUri
          imageSignature: imageSignature
          size: S
          thumbSignature: thumbSignature
          filePath: filePath
          thumbnailUri: thumbnailUri
        status:
          phase: PENDING
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/LocalThumbnailSpec'
        status:
          $ref: '#/components/schemas/LocalThumbnailStatus'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    LocalThumbnailList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            imageUri: imageUri
            imageSignature: imageSignature
            size: S
            thumbSignature: thumbSignature
            filePath: filePath
            thumbnailUri: thumbnailUri
          status:
            phase: PENDING
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            imageUri: imageUri
            imageSignature: imageSignature
            size: S
            thumbSignature: thumbSignature
            filePath: filePath
            thumbnailUri: thumbnailUri
          status:
            phase: PENDING
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/LocalThumbnail'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    LocalThumbnailSpec:
      example:
        imageUri: imageUri
        imageSignature: imageSignature
        size: S
        thumbSignature: thumbSignature
        filePath: filePath
        thumbnailUri: thumbnailUri
      properties:
        filePath:
          type: string
        imageSignature:
          minLength: 1
          type: string
        imageUri:
          minLength: 1
          type: string
        size:
          enum:
          - S
          - M
          - L
          - XL
          type: string
        thumbSignature:
          minLength: 1
          type: string
        thumbnailUri:
          minLength: 1
          type: string
      required:
      - filePath
      - imageSignature
      - imageUri
      - size
      - thumbSignature
      - thumbnailUri
      type: object
    LocalThumbnailStatus:
      example:
        phase: PENDING
      properties:
        phase:
          enum:
          - PENDING
          - SUCCEEDED
          - FAILED
          type: string
      type: object
    LoginHistory:
      example:
        reason: reason
        sourceIp: sourceIp
        userAgent: userAgent
        loginAt: 2000-01-23T04:56:07.000+00:00
        successful: true
      properties:
        loginAt:
          format: date-time
          type: string
        reason:
          type: string
        sourceIp:
          type: string
        successful:
          type: boolean
        userAgent:
          type: string
      required:
      - loginAt
      - sourceIp
      - successful
      - userAgent
      type: object
    Menu:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          displayName: displayName
          menuItems:
          - menuItems
          - menuItems
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/MenuSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    MenuItem:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          targetRef:
            kind: kind
            name: name
            version: version
            group: group
          children:
          - children
          - children
          displayName: displayName
          href: href
          priority: 0
          target: _blank
        status:
          displayName: displayName
          href: href
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/MenuItemSpec'
        status:
          $ref: '#/components/schemas/MenuItemStatus'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    MenuItemList:
      example:
        total: 5
        last: true
        size: 1
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 6
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            targetRef:
              kind: kind
              name: name
              version: version
              group: group
            children:
            - children
            - children
            displayName: displayName
            href: href
            priority: 0
            target: _blank
          status:
            displayName: displayName
            href: href
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            targetRef:
              kind: kind
              name: name
              version: version
              group: group
            children:
            - children
            - children
            displayName: displayName
            href: href
            priority: 0
            target: _blank
          status:
            displayName: displayName
            href: href
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/MenuItem'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    MenuItemSpec:
      description: The spec of menu item.
      example:
        targetRef:
          kind: kind
          name: name
          version: version
          group: group
        children:
        - children
        - children
        displayName: displayName
        href: href
        priority: 0
        target: _blank
      properties:
        children:
          description: Children of this menu item
          items:
            description: The name of menu item child
            type: string
          type: array
          uniqueItems: true
        displayName:
          description: The display name of menu item.
          type: string
        href:
          description: The href of this menu item.
          type: string
        priority:
          description: The priority is for ordering.
          format: int32
          type: integer
        target:
          description: The <a> target attribute of this menu item.
          enum:
          - _blank
          - _self
          - _parent
          - _top
          type: string
        targetRef:
          $ref: '#/components/schemas/Ref'
      type: object
    MenuItemStatus:
      description: The status of menu item.
      example:
        displayName: displayName
        href: href
      properties:
        displayName:
          description: Calculated Display name of menu item.
          type: string
        href:
          description: Calculated href of manu item.
          type: string
      type: object
    MenuList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            displayName: displayName
            menuItems:
            - menuItems
            - menuItems
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            displayName: displayName
            menuItems:
            - menuItems
            - menuItems
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Menu'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    MenuSpec:
      description: The spec of menu.
      example:
        displayName: displayName
        menuItems:
        - menuItems
        - menuItems
      properties:
        displayName:
          description: The display name of the menu.
          type: string
        menuItems:
          description: Menu items of this menu.
          items:
            description: Name of menu item.
            type: string
          type: array
          uniqueItems: true
      required:
      - displayName
      type: object
    Metadata:
      example:
        finalizers:
        - finalizers
        - finalizers
        creationTimestamp: 2000-01-23T04:56:07.000+00:00
        name: name
        annotations:
          key: annotations
        generateName: generateName
        version: 0
        deletionTimestamp: 2000-01-23T04:56:07.000+00:00
        labels:
          key: labels
      properties:
        annotations:
          additionalProperties:
            type: string
          type: object
        creationTimestamp:
          format: date-time
          nullable: true
          type: string
        deletionTimestamp:
          format: date-time
          nullable: true
          type: string
        finalizers:
          items:
            nullable: true
            type: string
          nullable: true
          type: array
          uniqueItems: true
        generateName:
          description: The name field will be generated automatically according to
            the given generateName field
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
        name:
          description: Metadata name
          type: string
        version:
          format: int64
          nullable: true
          type: integer
      required:
      - name
      type: object
    MoveOperation:
      properties:
        from:
          description: A JSON Pointer path pointing to the location to move/copy from.
          example: /a/b/c
          pattern: "^(/[^/~]*(~[01][^/~]*)*)*$"
          type: string
        op:
          enum:
          - move
          type: string
        path:
          description: A JSON Pointer path pointing to the location to move/copy from.
          example: /a/b/c
          pattern: "^(/[^/~]*(~[01][^/~]*)*)*$"
          type: string
      required:
      - from
      - op
      - path
      type: object
    Notification:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          lastReadAt: 2000-01-23T04:56:07.000+00:00
          reason: reason
          unread: true
          recipient: recipient
          title: title
          htmlContent: htmlContent
          rawContent: rawContent
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/NotificationSpec'
      required:
      - apiVersion
      - kind
      - metadata
      type: object
    NotificationList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            lastReadAt: 2000-01-23T04:56:07.000+00:00
            reason: reason
            unread: true
            recipient: recipient
            title: title
            htmlContent: htmlContent
            rawContent: rawContent
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            lastReadAt: 2000-01-23T04:56:07.000+00:00
            reason: reason
            unread: true
            recipient: recipient
            title: title
            htmlContent: htmlContent
            rawContent: rawContent
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Notification'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    NotificationSpec:
      example:
        lastReadAt: 2000-01-23T04:56:07.000+00:00
        reason: reason
        unread: true
        recipient: recipient
        title: title
        htmlContent: htmlContent
        rawContent: rawContent
      properties:
        htmlContent:
          type: string
        lastReadAt:
          format: date-time
          type: string
        rawContent:
          type: string
        reason:
          description: The name of reason
          minLength: 1
          type: string
        recipient:
          description: The name of user
          minLength: 1
          type: string
        title:
          minLength: 1
          type: string
        unread:
          type: boolean
      required:
      - htmlContent
      - rawContent
      - reason
      - recipient
      - title
      type: object
    NotificationTemplate:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          template:
            htmlBody: htmlBody
            rawBody: rawBody
            title: title
          reasonSelector:
            language: default
            reasonType: reasonType
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/NotificationTemplateSpec'
      required:
      - apiVersion
      - kind
      - metadata
      type: object
    NotificationTemplateList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            template:
              htmlBody: htmlBody
              rawBody: rawBody
              title: title
            reasonSelector:
              language: default
              reasonType: reasonType
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            template:
              htmlBody: htmlBody
              rawBody: rawBody
              title: title
            reasonSelector:
              language: default
              reasonType: reasonType
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/NotificationTemplate'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    NotificationTemplateSpec:
      example:
        template:
          htmlBody: htmlBody
          rawBody: rawBody
          title: title
        reasonSelector:
          language: default
          reasonType: reasonType
      properties:
        reasonSelector:
          $ref: '#/components/schemas/ReasonSelector'
        template:
          $ref: '#/components/schemas/TemplateContent'
      type: object
    NotifierDescriptor:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          displayName: displayName
          receiverSettingRef:
            name: name
            group: group
          description: description
          notifierExtName: notifierExtName
          senderSettingRef:
            name: name
            group: group
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/NotifierDescriptorSpec'
      required:
      - apiVersion
      - kind
      - metadata
      type: object
    NotifierDescriptorList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            displayName: displayName
            receiverSettingRef:
              name: name
              group: group
            description: description
            notifierExtName: notifierExtName
            senderSettingRef:
              name: name
              group: group
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            displayName: displayName
            receiverSettingRef:
              name: name
              group: group
            description: description
            notifierExtName: notifierExtName
            senderSettingRef:
              name: name
              group: group
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/NotifierDescriptor'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    NotifierDescriptorSpec:
      example:
        displayName: displayName
        receiverSettingRef:
          name: name
          group: group
        description: description
        notifierExtName: notifierExtName
        senderSettingRef:
          name: name
          group: group
      properties:
        description:
          type: string
        displayName:
          minLength: 1
          type: string
        notifierExtName:
          minLength: 1
          type: string
        receiverSettingRef:
          $ref: '#/components/schemas/NotifierSettingRef'
        senderSettingRef:
          $ref: '#/components/schemas/NotifierSettingRef'
      required:
      - displayName
      - notifierExtName
      type: object
    NotifierSettingRef:
      example:
        name: name
        group: group
      properties:
        group:
          type: string
        name:
          type: string
      required:
      - group
      - name
      type: object
    PatSpec:
      example:
        lastUsed: 2000-01-23T04:56:07.000+00:00
        tokenId: tokenId
        roles:
        - roles
        - roles
        name: name
        description: description
        scopes:
        - scopes
        - scopes
        revoked: true
        revokesAt: 2000-01-23T04:56:07.000+00:00
        expiresAt: 2000-01-23T04:56:07.000+00:00
        username: username
      properties:
        description:
          type: string
        expiresAt:
          format: date-time
          type: string
        lastUsed:
          format: date-time
          type: string
        name:
          type: string
        revoked:
          type: boolean
        revokesAt:
          format: date-time
          type: string
        roles:
          items:
            type: string
          type: array
        scopes:
          items:
            type: string
          type: array
        tokenId:
          type: string
        username:
          type: string
      required:
      - name
      - tokenId
      - username
      type: object
    PersonalAccessToken:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          lastUsed: 2000-01-23T04:56:07.000+00:00
          tokenId: tokenId
          roles:
          - roles
          - roles
          name: name
          description: description
          scopes:
          - scopes
          - scopes
          revoked: true
          revokesAt: 2000-01-23T04:56:07.000+00:00
          expiresAt: 2000-01-23T04:56:07.000+00:00
          username: username
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/PatSpec'
      required:
      - apiVersion
      - kind
      - metadata
      type: object
    PersonalAccessTokenList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            lastUsed: 2000-01-23T04:56:07.000+00:00
            tokenId: tokenId
            roles:
            - roles
            - roles
            name: name
            description: description
            scopes:
            - scopes
            - scopes
            revoked: true
            revokesAt: 2000-01-23T04:56:07.000+00:00
            expiresAt: 2000-01-23T04:56:07.000+00:00
            username: username
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            lastUsed: 2000-01-23T04:56:07.000+00:00
            tokenId: tokenId
            roles:
            - roles
            - roles
            name: name
            description: description
            scopes:
            - scopes
            - scopes
            revoked: true
            revokesAt: 2000-01-23T04:56:07.000+00:00
            expiresAt: 2000-01-23T04:56:07.000+00:00
            username: username
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/PersonalAccessToken'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    Plugin:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          author:
            website: website
            name: name
          displayName: displayName
          repo: repo
          description: description
          pluginClass: pluginClass
          issues: issues
          version: version
          enabled: true
          settingName: settingName
          license:
          - name: name
            url: url
          - name: name
            url: url
          logo: logo
          pluginDependencies:
            key: pluginDependencies
          configMapName: configMapName
          homepage: homepage
          requires: requires
        status:
          phase: PENDING
          stylesheet: stylesheet
          entry: entry
          lastStartTime: 2000-01-23T04:56:07.000+00:00
          logo: logo
          conditions:
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            status: "TRUE"
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            status: "TRUE"
          lastProbeState: CREATED
          loadLocation: https://openapi-generator.tech
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/PluginSpec'
        status:
          $ref: '#/components/schemas/PluginStatus'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    PluginAuthor:
      example:
        website: website
        name: name
      properties:
        name:
          minLength: 1
          type: string
        website:
          type: string
      required:
      - name
      type: object
    PluginList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            author:
              website: website
              name: name
            displayName: displayName
            repo: repo
            description: description
            pluginClass: pluginClass
            issues: issues
            version: version
            enabled: true
            settingName: settingName
            license:
            - name: name
              url: url
            - name: name
              url: url
            logo: logo
            pluginDependencies:
              key: pluginDependencies
            configMapName: configMapName
            homepage: homepage
            requires: requires
          status:
            phase: PENDING
            stylesheet: stylesheet
            entry: entry
            lastStartTime: 2000-01-23T04:56:07.000+00:00
            logo: logo
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: "TRUE"
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: "TRUE"
            lastProbeState: CREATED
            loadLocation: https://openapi-generator.tech
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            author:
              website: website
              name: name
            displayName: displayName
            repo: repo
            description: description
            pluginClass: pluginClass
            issues: issues
            version: version
            enabled: true
            settingName: settingName
            license:
            - name: name
              url: url
            - name: name
              url: url
            logo: logo
            pluginDependencies:
              key: pluginDependencies
            configMapName: configMapName
            homepage: homepage
            requires: requires
          status:
            phase: PENDING
            stylesheet: stylesheet
            entry: entry
            lastStartTime: 2000-01-23T04:56:07.000+00:00
            logo: logo
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: "TRUE"
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: "TRUE"
            lastProbeState: CREATED
            loadLocation: https://openapi-generator.tech
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Plugin'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    PluginSpec:
      example:
        author:
          website: website
          name: name
        displayName: displayName
        repo: repo
        description: description
        pluginClass: pluginClass
        issues: issues
        version: version
        enabled: true
        settingName: settingName
        license:
        - name: name
          url: url
        - name: name
          url: url
        logo: logo
        pluginDependencies:
          key: pluginDependencies
        configMapName: configMapName
        homepage: homepage
        requires: requires
      properties:
        author:
          $ref: '#/components/schemas/PluginAuthor'
        configMapName:
          type: string
        description:
          type: string
        displayName:
          type: string
        enabled:
          type: boolean
        homepage:
          type: string
        issues:
          type: string
        license:
          items:
            $ref: '#/components/schemas/License'
          type: array
        logo:
          type: string
        pluginClass:
          deprecated: true
          type: string
        pluginDependencies:
          additionalProperties:
            type: string
          type: object
        repo:
          type: string
        requires:
          type: string
        settingName:
          type: string
        version:
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\\
            d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
            +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          type: string
      required:
      - version
      type: object
    PluginStatus:
      example:
        phase: PENDING
        stylesheet: stylesheet
        entry: entry
        lastStartTime: 2000-01-23T04:56:07.000+00:00
        logo: logo
        conditions:
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          status: "TRUE"
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          status: "TRUE"
        lastProbeState: CREATED
        loadLocation: https://openapi-generator.tech
      properties:
        conditions:
          items:
            $ref: '#/components/schemas/Condition'
          properties:
            empty:
              type: boolean
          type: array
        entry:
          type: string
        lastProbeState:
          enum:
          - CREATED
          - DISABLED
          - RESOLVED
          - STARTED
          - STOPPED
          - FAILED
          - UNLOADED
          type: string
        lastStartTime:
          format: date-time
          type: string
        loadLocation:
          description: "Load location of the plugin, often a path."
          format: uri
          type: string
        logo:
          type: string
        phase:
          enum:
          - PENDING
          - STARTING
          - CREATED
          - DISABLING
          - DISABLED
          - RESOLVED
          - STARTED
          - STOPPED
          - FAILED
          - UNKNOWN
          type: string
        stylesheet:
          type: string
      type: object
    Policy:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          templateName: templateName
          displayName: displayName
          configMapName: configMapName
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/PolicySpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    PolicyList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            templateName: templateName
            displayName: displayName
            configMapName: configMapName
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            templateName: templateName
            displayName: displayName
            configMapName: configMapName
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Policy'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    PolicyRule:
      example:
        resourceNames:
        - resourceNames
        - resourceNames
        resources:
        - resources
        - resources
        verbs:
        - verbs
        - verbs
        apiGroups:
        - apiGroups
        - apiGroups
        nonResourceURLs:
        - nonResourceURLs
        - nonResourceURLs
      properties:
        apiGroups:
          items:
            type: string
          type: array
        nonResourceURLs:
          items:
            type: string
          type: array
        resourceNames:
          items:
            type: string
          type: array
        resources:
          items:
            type: string
          type: array
        verbs:
          items:
            type: string
          type: array
      type: object
    PolicySpec:
      example:
        templateName: templateName
        displayName: displayName
        configMapName: configMapName
      properties:
        configMapName:
          description: Reference name of ConfigMap extension
          type: string
        displayName:
          description: Display name of policy
          type: string
        templateName:
          description: Reference name of PolicyTemplate
          type: string
      required:
      - displayName
      - templateName
      type: object
    PolicyTemplate:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          displayName: displayName
          settingName: settingName
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/PolicyTemplateSpec'
      required:
      - apiVersion
      - kind
      - metadata
      type: object
    PolicyTemplateList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            displayName: displayName
            settingName: settingName
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            displayName: displayName
            settingName: settingName
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/PolicyTemplate'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    PolicyTemplateSpec:
      example:
        displayName: displayName
        settingName: settingName
      properties:
        displayName:
          type: string
        settingName:
          type: string
      required:
      - settingName
      type: object
    Post:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          owner: owner
          template: template
          publishTime: 2000-01-23T04:56:07.000+00:00
          pinned: false
          visible: PUBLIC
          releaseSnapshot: releaseSnapshot
          allowComment: true
          priority: 0
          title: title
          baseSnapshot: baseSnapshot
          headSnapshot: headSnapshot
          tags:
          - tags
          - tags
          cover: cover
          deleted: false
          htmlMetas:
          - key: htmlMetas
          - key: htmlMetas
          publish: false
          categories:
          - categories
          - categories
          excerpt:
            raw: raw
            autoGenerate: true
          slug: slug
        status:
          phase: phase
          observedVersion: 1
          inProgress: true
          hideFromList: true
          commentsCount: 6
          lastModifyTime: 2000-01-23T04:56:07.000+00:00
          contributors:
          - contributors
          - contributors
          conditions:
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            status: "TRUE"
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            status: "TRUE"
          excerpt: excerpt
          permalink: permalink
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/PostSpec'
        status:
          $ref: '#/components/schemas/PostStatus'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    PostList:
      example:
        total: 2
        last: true
        size: 5
        totalPages: 7
        hasPrevious: true
        hasNext: true
        page: 5
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            owner: owner
            template: template
            publishTime: 2000-01-23T04:56:07.000+00:00
            pinned: false
            visible: PUBLIC
            releaseSnapshot: releaseSnapshot
            allowComment: true
            priority: 0
            title: title
            baseSnapshot: baseSnapshot
            headSnapshot: headSnapshot
            tags:
            - tags
            - tags
            cover: cover
            deleted: false
            htmlMetas:
            - key: htmlMetas
            - key: htmlMetas
            publish: false
            categories:
            - categories
            - categories
            excerpt:
              raw: raw
              autoGenerate: true
            slug: slug
          status:
            phase: phase
            observedVersion: 1
            inProgress: true
            hideFromList: true
            commentsCount: 6
            lastModifyTime: 2000-01-23T04:56:07.000+00:00
            contributors:
            - contributors
            - contributors
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: "TRUE"
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: "TRUE"
            excerpt: excerpt
            permalink: permalink
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            owner: owner
            template: template
            publishTime: 2000-01-23T04:56:07.000+00:00
            pinned: false
            visible: PUBLIC
            releaseSnapshot: releaseSnapshot
            allowComment: true
            priority: 0
            title: title
            baseSnapshot: baseSnapshot
            headSnapshot: headSnapshot
            tags:
            - tags
            - tags
            cover: cover
            deleted: false
            htmlMetas:
            - key: htmlMetas
            - key: htmlMetas
            publish: false
            categories:
            - categories
            - categories
            excerpt:
              raw: raw
              autoGenerate: true
            slug: slug
          status:
            phase: phase
            observedVersion: 1
            inProgress: true
            hideFromList: true
            commentsCount: 6
            lastModifyTime: 2000-01-23T04:56:07.000+00:00
            contributors:
            - contributors
            - contributors
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: "TRUE"
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: "TRUE"
            excerpt: excerpt
            permalink: permalink
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Post'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    PostSpec:
      example:
        owner: owner
        template: template
        publishTime: 2000-01-23T04:56:07.000+00:00
        pinned: false
        visible: PUBLIC
        releaseSnapshot: releaseSnapshot
        allowComment: true
        priority: 0
        title: title
        baseSnapshot: baseSnapshot
        headSnapshot: headSnapshot
        tags:
        - tags
        - tags
        cover: cover
        deleted: false
        htmlMetas:
        - key: htmlMetas
        - key: htmlMetas
        publish: false
        categories:
        - categories
        - categories
        excerpt:
          raw: raw
          autoGenerate: true
        slug: slug
      properties:
        allowComment:
          default: true
          type: boolean
        baseSnapshot:
          type: string
        categories:
          items:
            type: string
          type: array
        cover:
          type: string
        deleted:
          default: false
          type: boolean
        excerpt:
          $ref: '#/components/schemas/Excerpt'
        headSnapshot:
          type: string
        htmlMetas:
          items:
            additionalProperties:
              type: string
            type: object
          type: array
        owner:
          type: string
        pinned:
          default: false
          type: boolean
        priority:
          default: 0
          format: int32
          type: integer
        publish:
          default: false
          type: boolean
        publishTime:
          format: date-time
          type: string
        releaseSnapshot:
          type: string
        slug:
          minLength: 1
          type: string
        tags:
          items:
            type: string
          type: array
        template:
          type: string
        title:
          minLength: 1
          type: string
        visible:
          default: PUBLIC
          enum:
          - PUBLIC
          - INTERNAL
          - PRIVATE
          type: string
      required:
      - allowComment
      - deleted
      - excerpt
      - pinned
      - priority
      - publish
      - slug
      - title
      - visible
      type: object
    PostStatus:
      example:
        phase: phase
        observedVersion: 1
        inProgress: true
        hideFromList: true
        commentsCount: 6
        lastModifyTime: 2000-01-23T04:56:07.000+00:00
        contributors:
        - contributors
        - contributors
        conditions:
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          status: "TRUE"
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          status: "TRUE"
        excerpt: excerpt
        permalink: permalink
      properties:
        commentsCount:
          format: int32
          type: integer
        conditions:
          items:
            $ref: '#/components/schemas/Condition'
          properties:
            empty:
              type: boolean
          type: array
        contributors:
          items:
            type: string
          type: array
        excerpt:
          type: string
        hideFromList:
          type: boolean
        inProgress:
          type: boolean
        lastModifyTime:
          format: date-time
          type: string
        observedVersion:
          format: int64
          type: integer
        permalink:
          type: string
        phase:
          type: string
      type: object
    Reason:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          author: author
          subject:
            apiVersion: apiVersion
            kind: kind
            name: name
            title: title
            url: url
          attributes:
            empty: true
          reasonType: reasonType
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ReasonSpec'
      required:
      - apiVersion
      - kind
      - metadata
      type: object
    ReasonAttributes:
      description: Attributes used to transfer data
      example:
        empty: true
      properties:
        empty:
          type: boolean
      type: object
    ReasonList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            author: author
            subject:
              apiVersion: apiVersion
              kind: kind
              name: name
              title: title
              url: url
            attributes:
              empty: true
            reasonType: reasonType
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            author: author
            subject:
              apiVersion: apiVersion
              kind: kind
              name: name
              title: title
              url: url
            attributes:
              empty: true
            reasonType: reasonType
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Reason'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    ReasonProperty:
      example:
        name: name
        description: description
        optional: false
        type: type
      properties:
        description:
          type: string
        name:
          minLength: 1
          type: string
        optional:
          default: false
          type: boolean
        type:
          minLength: 1
          type: string
      required:
      - name
      - type
      type: object
    ReasonSelector:
      example:
        language: default
        reasonType: reasonType
      properties:
        language:
          default: default
          minLength: 1
          type: string
        reasonType:
          minLength: 1
          type: string
      required:
      - language
      - reasonType
      type: object
    ReasonSpec:
      example:
        author: author
        subject:
          apiVersion: apiVersion
          kind: kind
          name: name
          title: title
          url: url
        attributes:
          empty: true
        reasonType: reasonType
      properties:
        attributes:
          $ref: '#/components/schemas/ReasonAttributes'
        author:
          type: string
        reasonType:
          type: string
        subject:
          $ref: '#/components/schemas/ReasonSubject'
      required:
      - author
      - reasonType
      - subject
      type: object
    ReasonSubject:
      example:
        apiVersion: apiVersion
        kind: kind
        name: name
        title: title
        url: url
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        name:
          type: string
        title:
          type: string
        url:
          type: string
      required:
      - apiVersion
      - kind
      - name
      - title
      type: object
    ReasonType:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          displayName: displayName
          description: description
          properties:
          - name: name
            description: description
            optional: false
            type: type
          - name: name
            description: description
            optional: false
            type: type
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ReasonTypeSpec'
      required:
      - apiVersion
      - kind
      - metadata
      type: object
    ReasonTypeList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            displayName: displayName
            description: description
            properties:
            - name: name
              description: description
              optional: false
              type: type
            - name: name
              description: description
              optional: false
              type: type
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            displayName: displayName
            description: description
            properties:
            - name: name
              description: description
              optional: false
              type: type
            - name: name
              description: description
              optional: false
              type: type
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/ReasonType'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    ReasonTypeSpec:
      example:
        displayName: displayName
        description: description
        properties:
        - name: name
          description: description
          optional: false
          type: type
        - name: name
          description: description
          optional: false
          type: type
      properties:
        description:
          minLength: 1
          type: string
        displayName:
          minLength: 1
          type: string
        properties:
          items:
            $ref: '#/components/schemas/ReasonProperty'
          type: array
      required:
      - description
      - displayName
      type: object
    Ref:
      description: Extension reference object. The name is mandatory
      example:
        kind: kind
        name: name
        version: version
        group: group
      properties:
        group:
          description: Extension group
          type: string
        kind:
          description: Extension kind
          type: string
        name:
          description: Extension name. This field is mandatory
          type: string
        version:
          description: Extension version
          type: string
      required:
      - name
      type: object
    RememberMeToken:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          lastUsed: 2000-01-23T04:56:07.000+00:00
          series: series
          tokenValue: tokenValue
          username: username
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/RememberMeTokenSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    RememberMeTokenList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            lastUsed: 2000-01-23T04:56:07.000+00:00
            series: series
            tokenValue: tokenValue
            username: username
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            lastUsed: 2000-01-23T04:56:07.000+00:00
            series: series
            tokenValue: tokenValue
            username: username
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/RememberMeToken'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    RememberMeTokenSpec:
      example:
        lastUsed: 2000-01-23T04:56:07.000+00:00
        series: series
        tokenValue: tokenValue
        username: username
      properties:
        lastUsed:
          format: date-time
          type: string
        series:
          minLength: 1
          type: string
        tokenValue:
          minLength: 1
          type: string
        username:
          minLength: 1
          type: string
      required:
      - series
      - tokenValue
      - username
      type: object
    RemoveOperation:
      properties:
        op:
          enum:
          - remove
          type: string
        path:
          description: A JSON Pointer path pointing to the location to move/copy from.
          example: /a/b/c
          pattern: "^(/[^/~]*(~[01][^/~]*)*)*$"
          type: string
      required:
      - op
      - path
      type: object
    ReplaceOperation:
      properties:
        op:
          enum:
          - replace
          type: string
        path:
          description: A JSON Pointer path pointing to the location to move/copy from.
          example: /a/b/c
          pattern: "^(/[^/~]*(~[01][^/~]*)*)*$"
          type: string
        value:
          description: Value can be any JSON value
      required:
      - op
      - path
      - value
      type: object
    Reply:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          owner:
            displayName: displayName
            kind: kind
            name: name
            annotations:
              key: annotations
          creationTime: 2000-01-23T04:56:07.000+00:00
          hidden: false
          ipAddress: ipAddress
          raw: raw
          userAgent: userAgent
          priority: 0
          content: content
          approved: false
          commentName: commentName
          top: false
          approvedTime: 2000-01-23T04:56:07.000+00:00
          allowNotification: true
          quoteReply: quoteReply
        status:
          observedVersion: 6
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ReplySpec'
        status:
          $ref: '#/components/schemas/ReplyStatus'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      - status
      type: object
    ReplyList:
      example:
        total: 5
        last: true
        size: 5
        totalPages: 2
        hasPrevious: true
        hasNext: true
        page: 1
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            owner:
              displayName: displayName
              kind: kind
              name: name
              annotations:
                key: annotations
            creationTime: 2000-01-23T04:56:07.000+00:00
            hidden: false
            ipAddress: ipAddress
            raw: raw
            userAgent: userAgent
            priority: 0
            content: content
            approved: false
            commentName: commentName
            top: false
            approvedTime: 2000-01-23T04:56:07.000+00:00
            allowNotification: true
            quoteReply: quoteReply
          status:
            observedVersion: 6
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            owner:
              displayName: displayName
              kind: kind
              name: name
              annotations:
                key: annotations
            creationTime: 2000-01-23T04:56:07.000+00:00
            hidden: false
            ipAddress: ipAddress
            raw: raw
            userAgent: userAgent
            priority: 0
            content: content
            approved: false
            commentName: commentName
            top: false
            approvedTime: 2000-01-23T04:56:07.000+00:00
            allowNotification: true
            quoteReply: quoteReply
          status:
            observedVersion: 6
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Reply'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    ReplySpec:
      example:
        owner:
          displayName: displayName
          kind: kind
          name: name
          annotations:
            key: annotations
        creationTime: 2000-01-23T04:56:07.000+00:00
        hidden: false
        ipAddress: ipAddress
        raw: raw
        userAgent: userAgent
        priority: 0
        content: content
        approved: false
        commentName: commentName
        top: false
        approvedTime: 2000-01-23T04:56:07.000+00:00
        allowNotification: true
        quoteReply: quoteReply
      properties:
        allowNotification:
          default: true
          type: boolean
        approved:
          default: false
          type: boolean
        approvedTime:
          format: date-time
          type: string
        commentName:
          minLength: 1
          type: string
        content:
          minLength: 1
          type: string
        creationTime:
          format: date-time
          type: string
        hidden:
          default: false
          type: boolean
        ipAddress:
          type: string
        owner:
          $ref: '#/components/schemas/CommentOwner'
        priority:
          default: 0
          format: int32
          type: integer
        quoteReply:
          type: string
        raw:
          minLength: 1
          type: string
        top:
          default: false
          type: boolean
        userAgent:
          type: string
      required:
      - allowNotification
      - approved
      - commentName
      - content
      - hidden
      - owner
      - priority
      - raw
      - top
      type: object
    ReplyStatus:
      example:
        observedVersion: 6
      properties:
        observedVersion:
          format: int64
          type: integer
      type: object
    ReverseProxy:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        rules:
        - path: path
          file:
            filename: filename
            directory: directory
        - path: path
          file:
            filename: filename
            directory: directory
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        rules:
          items:
            $ref: '#/components/schemas/ReverseProxyRule'
          type: array
      required:
      - apiVersion
      - kind
      - metadata
      type: object
    ReverseProxyList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          rules:
          - path: path
            file:
              filename: filename
              directory: directory
          - path: path
            file:
              filename: filename
              directory: directory
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          rules:
          - path: path
            file:
              filename: filename
              directory: directory
          - path: path
            file:
              filename: filename
              directory: directory
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/ReverseProxy'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    ReverseProxyRule:
      example:
        path: path
        file:
          filename: filename
          directory: directory
      properties:
        file:
          $ref: '#/components/schemas/FileReverseProxyProvider'
        path:
          type: string
      type: object
    Role:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        rules:
        - resourceNames:
          - resourceNames
          - resourceNames
          resources:
          - resources
          - resources
          verbs:
          - verbs
          - verbs
          apiGroups:
          - apiGroups
          - apiGroups
          nonResourceURLs:
          - nonResourceURLs
          - nonResourceURLs
        - resourceNames:
          - resourceNames
          - resourceNames
          resources:
          - resources
          - resources
          verbs:
          - verbs
          - verbs
          apiGroups:
          - apiGroups
          - apiGroups
          nonResourceURLs:
          - nonResourceURLs
          - nonResourceURLs
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        rules:
          items:
            $ref: '#/components/schemas/PolicyRule'
          type: array
      required:
      - apiVersion
      - kind
      - metadata
      - rules
      type: object
    RoleBinding:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        subjects:
        - apiGroup: apiGroup
          kind: kind
          name: name
        - apiGroup: apiGroup
          kind: kind
          name: name
        roleRef:
          apiGroup: apiGroup
          kind: kind
          name: name
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        roleRef:
          $ref: '#/components/schemas/RoleRef'
        subjects:
          items:
            $ref: '#/components/schemas/Subject'
          type: array
      required:
      - apiVersion
      - kind
      - metadata
      type: object
    RoleBindingList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          subjects:
          - apiGroup: apiGroup
            kind: kind
            name: name
          - apiGroup: apiGroup
            kind: kind
            name: name
          roleRef:
            apiGroup: apiGroup
            kind: kind
            name: name
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          subjects:
          - apiGroup: apiGroup
            kind: kind
            name: name
          - apiGroup: apiGroup
            kind: kind
            name: name
          roleRef:
            apiGroup: apiGroup
            kind: kind
            name: name
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/RoleBinding'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    RoleList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          rules:
          - resourceNames:
            - resourceNames
            - resourceNames
            resources:
            - resources
            - resources
            verbs:
            - verbs
            - verbs
            apiGroups:
            - apiGroups
            - apiGroups
            nonResourceURLs:
            - nonResourceURLs
            - nonResourceURLs
          - resourceNames:
            - resourceNames
            - resourceNames
            resources:
            - resources
            - resources
            verbs:
            - verbs
            - verbs
            apiGroups:
            - apiGroups
            - apiGroups
            nonResourceURLs:
            - nonResourceURLs
            - nonResourceURLs
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          rules:
          - resourceNames:
            - resourceNames
            - resourceNames
            resources:
            - resources
            - resources
            verbs:
            - verbs
            - verbs
            apiGroups:
            - apiGroups
            - apiGroups
            nonResourceURLs:
            - nonResourceURLs
            - nonResourceURLs
          - resourceNames:
            - resourceNames
            - resourceNames
            resources:
            - resources
            - resources
            verbs:
            - verbs
            - verbs
            apiGroups:
            - apiGroups
            - apiGroups
            nonResourceURLs:
            - nonResourceURLs
            - nonResourceURLs
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Role'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    RoleRef:
      example:
        apiGroup: apiGroup
        kind: kind
        name: name
      properties:
        apiGroup:
          type: string
        kind:
          type: string
        name:
          type: string
      type: object
    SearchEngine:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          settingRef:
            kind: kind
            name: name
            version: version
            group: group
          postSearchImpl: postSearchImpl
          website: website
          displayName: displayName
          description: description
          logo: logo
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/SearchEngineSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    SearchEngineList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            settingRef:
              kind: kind
              name: name
              version: version
              group: group
            postSearchImpl: postSearchImpl
            website: website
            displayName: displayName
            description: description
            logo: logo
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            settingRef:
              kind: kind
              name: name
              version: version
              group: group
            postSearchImpl: postSearchImpl
            website: website
            displayName: displayName
            description: description
            logo: logo
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/SearchEngine'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    SearchEngineSpec:
      example:
        settingRef:
          kind: kind
          name: name
          version: version
          group: group
        postSearchImpl: postSearchImpl
        website: website
        displayName: displayName
        description: description
        logo: logo
      properties:
        description:
          type: string
        displayName:
          type: string
        logo:
          type: string
        postSearchImpl:
          type: string
        settingRef:
          $ref: '#/components/schemas/Ref'
        website:
          type: string
      required:
      - displayName
      type: object
    Secret:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        data:
          key: data
        kind: kind
        type: type
        stringData:
          key: stringData
      properties:
        apiVersion:
          type: string
        data:
          additionalProperties:
            format: byte
            type: string
          type: object
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        stringData:
          additionalProperties:
            type: string
          type: object
        type:
          type: string
      required:
      - apiVersion
      - kind
      - metadata
      type: object
    SecretList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          data:
            key: data
          kind: kind
          type: type
          stringData:
            key: stringData
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          data:
            key: data
          kind: kind
          type: type
          stringData:
            key: stringData
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Secret'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    Setting:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          forms:
          - formSchema:
            - "{}"
            - "{}"
            label: label
            group: group
          - formSchema:
            - "{}"
            - "{}"
            label: label
            group: group
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/SettingSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    SettingForm:
      example:
        formSchema:
        - "{}"
        - "{}"
        label: label
        group: group
      minLength: 1
      properties:
        formSchema:
          items:
            type: object
          type: array
        group:
          type: string
        label:
          type: string
      required:
      - formSchema
      - group
      type: object
    SettingList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            forms:
            - formSchema:
              - "{}"
              - "{}"
              label: label
              group: group
            - formSchema:
              - "{}"
              - "{}"
              label: label
              group: group
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            forms:
            - formSchema:
              - "{}"
              - "{}"
              label: label
              group: group
            - formSchema:
              - "{}"
              - "{}"
              label: label
              group: group
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Setting'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    SettingRef:
      example:
        name: name
        group: group
      properties:
        group:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
      required:
      - group
      - name
      type: object
    SettingSpec:
      example:
        forms:
        - formSchema:
          - "{}"
          - "{}"
          label: label
          group: group
        - formSchema:
          - "{}"
          - "{}"
          label: label
          group: group
      properties:
        forms:
          items:
            $ref: '#/components/schemas/SettingForm'
          minLength: 1
          type: array
      required:
      - forms
      type: object
    SinglePage:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          owner: owner
          template: template
          publishTime: 2000-01-23T04:56:07.000+00:00
          pinned: false
          visible: PUBLIC
          releaseSnapshot: releaseSnapshot
          allowComment: true
          priority: 0
          title: title
          baseSnapshot: baseSnapshot
          headSnapshot: headSnapshot
          cover: cover
          deleted: false
          htmlMetas:
          - key: htmlMetas
          - key: htmlMetas
          publish: false
          excerpt:
            raw: raw
            autoGenerate: true
          slug: slug
        status:
          phase: phase
          observedVersion: 1
          inProgress: true
          hideFromList: true
          commentsCount: 6
          lastModifyTime: 2000-01-23T04:56:07.000+00:00
          contributors:
          - contributors
          - contributors
          conditions:
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            status: "TRUE"
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            status: "TRUE"
          excerpt: excerpt
          permalink: permalink
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/SinglePageSpec'
        status:
          $ref: '#/components/schemas/SinglePageStatus'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    SinglePageList:
      example:
        total: 2
        last: true
        size: 5
        totalPages: 7
        hasPrevious: true
        hasNext: true
        page: 5
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            owner: owner
            template: template
            publishTime: 2000-01-23T04:56:07.000+00:00
            pinned: false
            visible: PUBLIC
            releaseSnapshot: releaseSnapshot
            allowComment: true
            priority: 0
            title: title
            baseSnapshot: baseSnapshot
            headSnapshot: headSnapshot
            cover: cover
            deleted: false
            htmlMetas:
            - key: htmlMetas
            - key: htmlMetas
            publish: false
            excerpt:
              raw: raw
              autoGenerate: true
            slug: slug
          status:
            phase: phase
            observedVersion: 1
            inProgress: true
            hideFromList: true
            commentsCount: 6
            lastModifyTime: 2000-01-23T04:56:07.000+00:00
            contributors:
            - contributors
            - contributors
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: "TRUE"
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: "TRUE"
            excerpt: excerpt
            permalink: permalink
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            owner: owner
            template: template
            publishTime: 2000-01-23T04:56:07.000+00:00
            pinned: false
            visible: PUBLIC
            releaseSnapshot: releaseSnapshot
            allowComment: true
            priority: 0
            title: title
            baseSnapshot: baseSnapshot
            headSnapshot: headSnapshot
            cover: cover
            deleted: false
            htmlMetas:
            - key: htmlMetas
            - key: htmlMetas
            publish: false
            excerpt:
              raw: raw
              autoGenerate: true
            slug: slug
          status:
            phase: phase
            observedVersion: 1
            inProgress: true
            hideFromList: true
            commentsCount: 6
            lastModifyTime: 2000-01-23T04:56:07.000+00:00
            contributors:
            - contributors
            - contributors
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: "TRUE"
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: "TRUE"
            excerpt: excerpt
            permalink: permalink
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/SinglePage'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    SinglePageSpec:
      example:
        owner: owner
        template: template
        publishTime: 2000-01-23T04:56:07.000+00:00
        pinned: false
        visible: PUBLIC
        releaseSnapshot: releaseSnapshot
        allowComment: true
        priority: 0
        title: title
        baseSnapshot: baseSnapshot
        headSnapshot: headSnapshot
        cover: cover
        deleted: false
        htmlMetas:
        - key: htmlMetas
        - key: htmlMetas
        publish: false
        excerpt:
          raw: raw
          autoGenerate: true
        slug: slug
      properties:
        allowComment:
          default: true
          type: boolean
        baseSnapshot:
          type: string
        cover:
          type: string
        deleted:
          default: false
          type: boolean
        excerpt:
          $ref: '#/components/schemas/Excerpt'
        headSnapshot:
          type: string
        htmlMetas:
          items:
            additionalProperties:
              type: string
            type: object
          type: array
        owner:
          type: string
        pinned:
          default: false
          type: boolean
        priority:
          default: 0
          format: int32
          type: integer
        publish:
          default: false
          type: boolean
        publishTime:
          format: date-time
          type: string
        releaseSnapshot:
          type: string
        slug:
          minLength: 1
          type: string
        template:
          type: string
        title:
          minLength: 1
          type: string
        visible:
          default: PUBLIC
          enum:
          - PUBLIC
          - INTERNAL
          - PRIVATE
          type: string
      required:
      - allowComment
      - deleted
      - excerpt
      - pinned
      - priority
      - publish
      - slug
      - title
      - visible
      type: object
    SinglePageStatus:
      example:
        phase: phase
        observedVersion: 1
        inProgress: true
        hideFromList: true
        commentsCount: 6
        lastModifyTime: 2000-01-23T04:56:07.000+00:00
        contributors:
        - contributors
        - contributors
        conditions:
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          status: "TRUE"
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          status: "TRUE"
        excerpt: excerpt
        permalink: permalink
      properties:
        commentsCount:
          format: int32
          type: integer
        conditions:
          items:
            $ref: '#/components/schemas/Condition'
          properties:
            empty:
              type: boolean
          type: array
        contributors:
          items:
            type: string
          type: array
        excerpt:
          type: string
        hideFromList:
          type: boolean
        inProgress:
          type: boolean
        lastModifyTime:
          format: date-time
          type: string
        observedVersion:
          format: int64
          type: integer
        permalink:
          type: string
        phase:
          type: string
      type: object
    SnapShotSpec:
      example:
        owner: owner
        rawType: rawType
        contentPatch: contentPatch
        lastModifyTime: 2000-01-23T04:56:07.000+00:00
        rawPatch: rawPatch
        subjectRef:
          kind: kind
          name: name
          version: version
          group: group
        parentSnapshotName: parentSnapshotName
        contributors:
        - contributors
        - contributors
      properties:
        contentPatch:
          type: string
        contributors:
          items:
            type: string
          type: array
          uniqueItems: true
        lastModifyTime:
          format: date-time
          type: string
        owner:
          minLength: 1
          type: string
        parentSnapshotName:
          type: string
        rawPatch:
          type: string
        rawType:
          maxLength: 50
          minLength: 1
          type: string
        subjectRef:
          $ref: '#/components/schemas/Ref'
      required:
      - owner
      - rawType
      - subjectRef
      type: object
    Snapshot:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          owner: owner
          rawType: rawType
          contentPatch: contentPatch
          lastModifyTime: 2000-01-23T04:56:07.000+00:00
          rawPatch: rawPatch
          subjectRef:
            kind: kind
            name: name
            version: version
            group: group
          parentSnapshotName: parentSnapshotName
          contributors:
          - contributors
          - contributors
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/SnapShotSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    SnapshotList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            owner: owner
            rawType: rawType
            contentPatch: contentPatch
            lastModifyTime: 2000-01-23T04:56:07.000+00:00
            rawPatch: rawPatch
            subjectRef:
              kind: kind
              name: name
              version: version
              group: group
            parentSnapshotName: parentSnapshotName
            contributors:
            - contributors
            - contributors
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            owner: owner
            rawType: rawType
            contentPatch: contentPatch
            lastModifyTime: 2000-01-23T04:56:07.000+00:00
            rawPatch: rawPatch
            subjectRef:
              kind: kind
              name: name
              version: version
              group: group
            parentSnapshotName: parentSnapshotName
            contributors:
            - contributors
            - contributors
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Snapshot'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    Subject:
      example:
        apiGroup: apiGroup
        kind: kind
        name: name
      properties:
        apiGroup:
          type: string
        kind:
          type: string
        name:
          type: string
      type: object
    Subscription:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          reason:
            expression: expression
            subject:
              apiVersion: apiVersion
              kind: kind
              name: name
            reasonType: reasonType
          subscriber:
            name: name
          unsubscribeToken: unsubscribeToken
          disabled: true
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/SubscriptionSpec'
      required:
      - apiVersion
      - kind
      - metadata
      type: object
    SubscriptionList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            reason:
              expression: expression
              subject:
                apiVersion: apiVersion
                kind: kind
                name: name
              reasonType: reasonType
            subscriber:
              name: name
            unsubscribeToken: unsubscribeToken
            disabled: true
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            reason:
              expression: expression
              subject:
                apiVersion: apiVersion
                kind: kind
                name: name
              reasonType: reasonType
            subscriber:
              name: name
            unsubscribeToken: unsubscribeToken
            disabled: true
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Subscription'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    SubscriptionSpec:
      example:
        reason:
          expression: expression
          subject:
            apiVersion: apiVersion
            kind: kind
            name: name
          reasonType: reasonType
        subscriber:
          name: name
        unsubscribeToken: unsubscribeToken
        disabled: true
      properties:
        disabled:
          description: Perhaps users need to unsubscribe and interact without receiving
            notifications again
          type: boolean
        reason:
          $ref: '#/components/schemas/InterestReason'
        subscriber:
          $ref: '#/components/schemas/SubscriptionSubscriber'
        unsubscribeToken:
          description: The token to unsubscribe
          type: string
      required:
      - reason
      - subscriber
      - unsubscribeToken
      type: object
    SubscriptionSubscriber:
      description: The subscriber to be notified
      example:
        name: name
      properties:
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    Tag:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          cover: cover
          color: color
          displayName: displayName
          slug: slug
        status:
          observedVersion: 0
          visiblePostCount: 1
          postCount: 6
          permalink: permalink
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/TagSpec'
        status:
          $ref: '#/components/schemas/TagStatus'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    TagList:
      example:
        total: 2
        last: true
        size: 5
        totalPages: 7
        hasPrevious: true
        hasNext: true
        page: 5
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            cover: cover
            color: color
            displayName: displayName
            slug: slug
          status:
            observedVersion: 0
            visiblePostCount: 1
            postCount: 6
            permalink: permalink
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            cover: cover
            color: color
            displayName: displayName
            slug: slug
          status:
            observedVersion: 0
            visiblePostCount: 1
            postCount: 6
            permalink: permalink
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    TagSpec:
      example:
        cover: cover
        color: color
        displayName: displayName
        slug: slug
      properties:
        color:
          pattern: "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$"
          type: string
        cover:
          type: string
        displayName:
          minLength: 1
          type: string
        slug:
          minLength: 1
          type: string
      required:
      - displayName
      - slug
      type: object
    TagStatus:
      example:
        observedVersion: 0
        visiblePostCount: 1
        postCount: 6
        permalink: permalink
      properties:
        observedVersion:
          format: int64
          type: integer
        permalink:
          type: string
        postCount:
          format: int32
          type: integer
        visiblePostCount:
          format: int32
          type: integer
      type: object
    TemplateContent:
      example:
        htmlBody: htmlBody
        rawBody: rawBody
        title: title
      properties:
        htmlBody:
          type: string
        rawBody:
          type: string
        title:
          minLength: 1
          type: string
      required:
      - title
      type: object
    TemplateDescriptor:
      example:
        file: file
        name: name
        description: description
        screenshot: screenshot
      properties:
        description:
          type: string
        file:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        screenshot:
          type: string
      required:
      - file
      - name
      type: object
    TestOperation:
      properties:
        op:
          enum:
          - test
          type: string
        path:
          description: A JSON Pointer path pointing to the location to move/copy from.
          example: /a/b/c
          pattern: "^(/[^/~]*(~[01][^/~]*)*)*$"
          type: string
        value:
          description: Value can be any JSON value
      required:
      - op
      - path
      - value
      type: object
    Theme:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          website: website
          author:
            website: website
            name: name
          displayName: displayName
          repo: repo
          description: description
          require: require
          issues: issues
          version: version
          settingName: settingName
          license:
          - name: name
            url: url
          - name: name
            url: url
          customTemplates:
            post:
            - file: file
              name: name
              description: description
              screenshot: screenshot
            - file: file
              name: name
              description: description
              screenshot: screenshot
            page:
            - file: file
              name: name
              description: description
              screenshot: screenshot
            - file: file
              name: name
              description: description
              screenshot: screenshot
            category:
            - file: file
              name: name
              description: description
              screenshot: screenshot
            - file: file
              name: name
              description: description
              screenshot: screenshot
          logo: logo
          configMapName: configMapName
          homepage: homepage
          requires: requires
        status:
          phase: READY
          location: location
          conditions:
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            status: "TRUE"
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            status: "TRUE"
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ThemeSpec'
        status:
          $ref: '#/components/schemas/ThemeStatus'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    ThemeList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            website: website
            author:
              website: website
              name: name
            displayName: displayName
            repo: repo
            description: description
            require: require
            issues: issues
            version: version
            settingName: settingName
            license:
            - name: name
              url: url
            - name: name
              url: url
            customTemplates:
              post:
              - file: file
                name: name
                description: description
                screenshot: screenshot
              - file: file
                name: name
                description: description
                screenshot: screenshot
              page:
              - file: file
                name: name
                description: description
                screenshot: screenshot
              - file: file
                name: name
                description: description
                screenshot: screenshot
              category:
              - file: file
                name: name
                description: description
                screenshot: screenshot
              - file: file
                name: name
                description: description
                screenshot: screenshot
            logo: logo
            configMapName: configMapName
            homepage: homepage
            requires: requires
          status:
            phase: READY
            location: location
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: "TRUE"
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: "TRUE"
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            website: website
            author:
              website: website
              name: name
            displayName: displayName
            repo: repo
            description: description
            require: require
            issues: issues
            version: version
            settingName: settingName
            license:
            - name: name
              url: url
            - name: name
              url: url
            customTemplates:
              post:
              - file: file
                name: name
                description: description
                screenshot: screenshot
              - file: file
                name: name
                description: description
                screenshot: screenshot
              page:
              - file: file
                name: name
                description: description
                screenshot: screenshot
              - file: file
                name: name
                description: description
                screenshot: screenshot
              category:
              - file: file
                name: name
                description: description
                screenshot: screenshot
              - file: file
                name: name
                description: description
                screenshot: screenshot
            logo: logo
            configMapName: configMapName
            homepage: homepage
            requires: requires
          status:
            phase: READY
            location: location
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: "TRUE"
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: "TRUE"
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Theme'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    ThemeSpec:
      example:
        website: website
        author:
          website: website
          name: name
        displayName: displayName
        repo: repo
        description: description
        require: require
        issues: issues
        version: version
        settingName: settingName
        license:
        - name: name
          url: url
        - name: name
          url: url
        customTemplates:
          post:
          - file: file
            name: name
            description: description
            screenshot: screenshot
          - file: file
            name: name
            description: description
            screenshot: screenshot
          page:
          - file: file
            name: name
            description: description
            screenshot: screenshot
          - file: file
            name: name
            description: description
            screenshot: screenshot
          category:
          - file: file
            name: name
            description: description
            screenshot: screenshot
          - file: file
            name: name
            description: description
            screenshot: screenshot
        logo: logo
        configMapName: configMapName
        homepage: homepage
        requires: requires
      properties:
        author:
          $ref: '#/components/schemas/Author'
        configMapName:
          type: string
        customTemplates:
          $ref: '#/components/schemas/CustomTemplates'
        description:
          type: string
        displayName:
          minLength: 1
          type: string
        homepage:
          type: string
        issues:
          type: string
        license:
          items:
            $ref: '#/components/schemas/License'
          type: array
        logo:
          type: string
        repo:
          type: string
        require:
          deprecated: true
          description: "Deprecated, use `requires` instead."
          type: string
        requires:
          type: string
        settingName:
          type: string
        version:
          type: string
        website:
          deprecated: true
          type: string
      required:
      - author
      - displayName
      - version
      type: object
    ThemeStatus:
      example:
        phase: READY
        location: location
        conditions:
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          status: "TRUE"
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          status: "TRUE"
      properties:
        conditions:
          items:
            $ref: '#/components/schemas/Condition'
          properties:
            empty:
              type: boolean
          type: array
        location:
          type: string
        phase:
          enum:
          - READY
          - FAILED
          - UNKNOWN
          type: string
      type: object
    Thumbnail:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          imageUri: imageUri
          imageSignature: imageSignature
          size: S
          thumbnailUri: thumbnailUri
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ThumbnailSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    ThumbnailList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            imageUri: imageUri
            imageSignature: imageSignature
            size: S
            thumbnailUri: thumbnailUri
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            imageUri: imageUri
            imageSignature: imageSignature
            size: S
            thumbnailUri: thumbnailUri
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/Thumbnail'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    ThumbnailSpec:
      example:
        imageUri: imageUri
        imageSignature: imageSignature
        size: S
        thumbnailUri: thumbnailUri
      properties:
        imageSignature:
          minLength: 1
          type: string
        imageUri:
          minLength: 1
          type: string
        size:
          enum:
          - S
          - M
          - L
          - XL
          type: string
        thumbnailUri:
          minLength: 1
          type: string
      required:
      - imageSignature
      - imageUri
      - size
      - thumbnailUri
      type: object
    User:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          emailVerified: true
          password: password
          twoFactorAuthEnabled: true
          phone: phone
          totpEncryptedSecret: totpEncryptedSecret
          displayName: displayName
          registeredAt: 2000-01-23T04:56:07.000+00:00
          bio: bio
          disabled: true
          avatar: avatar
          loginHistoryLimit: 0
          email: email
        status:
          lastLoginAt: 2000-01-23T04:56:07.000+00:00
          loginHistories:
          - reason: reason
            sourceIp: sourceIp
            userAgent: userAgent
            loginAt: 2000-01-23T04:56:07.000+00:00
            successful: true
          - reason: reason
            sourceIp: sourceIp
            userAgent: userAgent
            loginAt: 2000-01-23T04:56:07.000+00:00
            successful: true
          permalink: permalink
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/UserSpec'
        status:
          $ref: '#/components/schemas/UserStatus'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    UserConnection:
      example:
        metadata:
          finalizers:
          - finalizers
          - finalizers
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          generateName: generateName
          version: 0
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          registrationId: registrationId
          providerUserId: providerUserId
          updatedAt: 2000-01-23T04:56:07.000+00:00
          username: username
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/UserConnectionSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      type: object
    UserConnectionList:
      example:
        total: 1
        last: true
        size: 6
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 0
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            registrationId: registrationId
            providerUserId: providerUserId
            updatedAt: 2000-01-23T04:56:07.000+00:00
            username: username
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            registrationId: registrationId
            providerUserId: providerUserId
            updatedAt: 2000-01-23T04:56:07.000+00:00
            username: username
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/UserConnection'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    UserConnectionSpec:
      example:
        registrationId: registrationId
        providerUserId: providerUserId
        updatedAt: 2000-01-23T04:56:07.000+00:00
        username: username
      properties:
        providerUserId:
          type: string
        registrationId:
          type: string
        updatedAt:
          format: date-time
          type: string
        username:
          type: string
      required:
      - providerUserId
      - registrationId
      - username
      type: object
    UserList:
      example:
        total: 5
        last: true
        size: 1
        totalPages: 5
        hasPrevious: true
        hasNext: true
        page: 6
        items:
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            emailVerified: true
            password: password
            twoFactorAuthEnabled: true
            phone: phone
            totpEncryptedSecret: totpEncryptedSecret
            displayName: displayName
            registeredAt: 2000-01-23T04:56:07.000+00:00
            bio: bio
            disabled: true
            avatar: avatar
            loginHistoryLimit: 0
            email: email
          status:
            lastLoginAt: 2000-01-23T04:56:07.000+00:00
            loginHistories:
            - reason: reason
              sourceIp: sourceIp
              userAgent: userAgent
              loginAt: 2000-01-23T04:56:07.000+00:00
              successful: true
            - reason: reason
              sourceIp: sourceIp
              userAgent: userAgent
              loginAt: 2000-01-23T04:56:07.000+00:00
              successful: true
            permalink: permalink
        - metadata:
            finalizers:
            - finalizers
            - finalizers
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            generateName: generateName
            version: 0
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            emailVerified: true
            password: password
            twoFactorAuthEnabled: true
            phone: phone
            totpEncryptedSecret: totpEncryptedSecret
            displayName: displayName
            registeredAt: 2000-01-23T04:56:07.000+00:00
            bio: bio
            disabled: true
            avatar: avatar
            loginHistoryLimit: 0
            email: email
          status:
            lastLoginAt: 2000-01-23T04:56:07.000+00:00
            loginHistories:
            - reason: reason
              sourceIp: sourceIp
              userAgent: userAgent
              loginAt: 2000-01-23T04:56:07.000+00:00
              successful: true
            - reason: reason
              sourceIp: sourceIp
              userAgent: userAgent
              loginAt: 2000-01-23T04:56:07.000+00:00
              successful: true
            permalink: permalink
        first: true
      properties:
        first:
          description: Indicates whether current page is the first page.
          type: boolean
        hasNext:
          description: Indicates whether current page has previous page.
          type: boolean
        hasPrevious:
          description: Indicates whether current page has previous page.
          type: boolean
        items:
          description: A chunk of items.
          items:
            $ref: '#/components/schemas/User'
          type: array
        last:
          description: Indicates whether current page is the last page.
          type: boolean
        page:
          description: "Page number, starts from 1. If not set or equal to 0, it means\
            \ no pagination."
          format: int32
          type: integer
        size:
          description: "Size of each page. If not set or equal to 0, it means no pagination."
          format: int32
          type: integer
        total:
          description: Total elements.
          format: int64
          type: integer
        totalPages:
          description: Indicates total pages.
          format: int64
          type: integer
      required:
      - first
      - hasNext
      - hasPrevious
      - items
      - last
      - page
      - size
      - total
      - totalPages
      type: object
    UserSpec:
      example:
        emailVerified: true
        password: password
        twoFactorAuthEnabled: true
        phone: phone
        totpEncryptedSecret: totpEncryptedSecret
        displayName: displayName
        registeredAt: 2000-01-23T04:56:07.000+00:00
        bio: bio
        disabled: true
        avatar: avatar
        loginHistoryLimit: 0
        email: email
      properties:
        avatar:
          type: string
        bio:
          type: string
        disabled:
          type: boolean
        displayName:
          type: string
        email:
          type: string
        emailVerified:
          type: boolean
        loginHistoryLimit:
          format: int32
          type: integer
        password:
          type: string
        phone:
          type: string
        registeredAt:
          format: date-time
          type: string
        totpEncryptedSecret:
          type: string
        twoFactorAuthEnabled:
          type: boolean
      required:
      - displayName
      - email
      type: object
    UserStatus:
      example:
        lastLoginAt: 2000-01-23T04:56:07.000+00:00
        loginHistories:
        - reason: reason
          sourceIp: sourceIp
          userAgent: userAgent
          loginAt: 2000-01-23T04:56:07.000+00:00
          successful: true
        - reason: reason
          sourceIp: sourceIp
          userAgent: userAgent
          loginAt: 2000-01-23T04:56:07.000+00:00
          successful: true
        permalink: permalink
      properties:
        lastLoginAt:
          format: date-time
          type: string
        loginHistories:
          items:
            $ref: '#/components/schemas/LoginHistory'
          type: array
        permalink:
          type: string
      type: object
    JsonPatch_inner:
      oneOf:
      - $ref: '#/components/schemas/AddOperation'
      - $ref: '#/components/schemas/ReplaceOperation'
      - $ref: '#/components/schemas/TestOperation'
      - $ref: '#/components/schemas/RemoveOperation'
      - $ref: '#/components/schemas/MoveOperation'
      - $ref: '#/components/schemas/CopyOperation'
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
