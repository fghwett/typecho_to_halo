/*
Halo

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.20.18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package extension_sdk

import (
	"encoding/json"
	"time"
)

// checks if the UserStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserStatus{}

// UserStatus struct for UserStatus
type UserStatus struct {
	LastLoginAt *time.Time `json:"lastLoginAt,omitempty"`
	LoginHistories []LoginHistory `json:"loginHistories,omitempty"`
	Permalink *string `json:"permalink,omitempty"`
}

// NewUserStatus instantiates a new UserStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserStatus() *UserStatus {
	this := UserStatus{}
	return &this
}

// NewUserStatusWithDefaults instantiates a new UserStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserStatusWithDefaults() *UserStatus {
	this := UserStatus{}
	return &this
}

// GetLastLoginAt returns the LastLoginAt field value if set, zero value otherwise.
func (o *UserStatus) GetLastLoginAt() time.Time {
	if o == nil || IsNil(o.LastLoginAt) {
		var ret time.Time
		return ret
	}
	return *o.LastLoginAt
}

// GetLastLoginAtOk returns a tuple with the LastLoginAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserStatus) GetLastLoginAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastLoginAt) {
		return nil, false
	}
	return o.LastLoginAt, true
}

// HasLastLoginAt returns a boolean if a field has been set.
func (o *UserStatus) HasLastLoginAt() bool {
	if o != nil && !IsNil(o.LastLoginAt) {
		return true
	}

	return false
}

// SetLastLoginAt gets a reference to the given time.Time and assigns it to the LastLoginAt field.
func (o *UserStatus) SetLastLoginAt(v time.Time) {
	o.LastLoginAt = &v
}

// GetLoginHistories returns the LoginHistories field value if set, zero value otherwise.
func (o *UserStatus) GetLoginHistories() []LoginHistory {
	if o == nil || IsNil(o.LoginHistories) {
		var ret []LoginHistory
		return ret
	}
	return o.LoginHistories
}

// GetLoginHistoriesOk returns a tuple with the LoginHistories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserStatus) GetLoginHistoriesOk() ([]LoginHistory, bool) {
	if o == nil || IsNil(o.LoginHistories) {
		return nil, false
	}
	return o.LoginHistories, true
}

// HasLoginHistories returns a boolean if a field has been set.
func (o *UserStatus) HasLoginHistories() bool {
	if o != nil && !IsNil(o.LoginHistories) {
		return true
	}

	return false
}

// SetLoginHistories gets a reference to the given []LoginHistory and assigns it to the LoginHistories field.
func (o *UserStatus) SetLoginHistories(v []LoginHistory) {
	o.LoginHistories = v
}

// GetPermalink returns the Permalink field value if set, zero value otherwise.
func (o *UserStatus) GetPermalink() string {
	if o == nil || IsNil(o.Permalink) {
		var ret string
		return ret
	}
	return *o.Permalink
}

// GetPermalinkOk returns a tuple with the Permalink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserStatus) GetPermalinkOk() (*string, bool) {
	if o == nil || IsNil(o.Permalink) {
		return nil, false
	}
	return o.Permalink, true
}

// HasPermalink returns a boolean if a field has been set.
func (o *UserStatus) HasPermalink() bool {
	if o != nil && !IsNil(o.Permalink) {
		return true
	}

	return false
}

// SetPermalink gets a reference to the given string and assigns it to the Permalink field.
func (o *UserStatus) SetPermalink(v string) {
	o.Permalink = &v
}

func (o UserStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LastLoginAt) {
		toSerialize["lastLoginAt"] = o.LastLoginAt
	}
	if !IsNil(o.LoginHistories) {
		toSerialize["loginHistories"] = o.LoginHistories
	}
	if !IsNil(o.Permalink) {
		toSerialize["permalink"] = o.Permalink
	}
	return toSerialize, nil
}

type NullableUserStatus struct {
	value *UserStatus
	isSet bool
}

func (v NullableUserStatus) Get() *UserStatus {
	return v.value
}

func (v *NullableUserStatus) Set(val *UserStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableUserStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableUserStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserStatus(val *UserStatus) *NullableUserStatus {
	return &NullableUserStatus{value: val, isSet: true}
}

func (v NullableUserStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


