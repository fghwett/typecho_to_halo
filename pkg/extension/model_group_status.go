/*
Halo

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.20.18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package extension_sdk

import (
	"encoding/json"
	"time"
)

// checks if the GroupStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupStatus{}

// GroupStatus struct for GroupStatus
type GroupStatus struct {
	// Total of attachments under the current group
	TotalAttachments *int64 `json:"totalAttachments,omitempty"`
	// Update timestamp of the group
	UpdateTimestamp *time.Time `json:"updateTimestamp,omitempty"`
}

// NewGroupStatus instantiates a new GroupStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupStatus() *GroupStatus {
	this := GroupStatus{}
	return &this
}

// NewGroupStatusWithDefaults instantiates a new GroupStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupStatusWithDefaults() *GroupStatus {
	this := GroupStatus{}
	return &this
}

// GetTotalAttachments returns the TotalAttachments field value if set, zero value otherwise.
func (o *GroupStatus) GetTotalAttachments() int64 {
	if o == nil || IsNil(o.TotalAttachments) {
		var ret int64
		return ret
	}
	return *o.TotalAttachments
}

// GetTotalAttachmentsOk returns a tuple with the TotalAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupStatus) GetTotalAttachmentsOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalAttachments) {
		return nil, false
	}
	return o.TotalAttachments, true
}

// HasTotalAttachments returns a boolean if a field has been set.
func (o *GroupStatus) HasTotalAttachments() bool {
	if o != nil && !IsNil(o.TotalAttachments) {
		return true
	}

	return false
}

// SetTotalAttachments gets a reference to the given int64 and assigns it to the TotalAttachments field.
func (o *GroupStatus) SetTotalAttachments(v int64) {
	o.TotalAttachments = &v
}

// GetUpdateTimestamp returns the UpdateTimestamp field value if set, zero value otherwise.
func (o *GroupStatus) GetUpdateTimestamp() time.Time {
	if o == nil || IsNil(o.UpdateTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.UpdateTimestamp
}

// GetUpdateTimestampOk returns a tuple with the UpdateTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupStatus) GetUpdateTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdateTimestamp) {
		return nil, false
	}
	return o.UpdateTimestamp, true
}

// HasUpdateTimestamp returns a boolean if a field has been set.
func (o *GroupStatus) HasUpdateTimestamp() bool {
	if o != nil && !IsNil(o.UpdateTimestamp) {
		return true
	}

	return false
}

// SetUpdateTimestamp gets a reference to the given time.Time and assigns it to the UpdateTimestamp field.
func (o *GroupStatus) SetUpdateTimestamp(v time.Time) {
	o.UpdateTimestamp = &v
}

func (o GroupStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalAttachments) {
		toSerialize["totalAttachments"] = o.TotalAttachments
	}
	if !IsNil(o.UpdateTimestamp) {
		toSerialize["updateTimestamp"] = o.UpdateTimestamp
	}
	return toSerialize, nil
}

type NullableGroupStatus struct {
	value *GroupStatus
	isSet bool
}

func (v NullableGroupStatus) Get() *GroupStatus {
	return v.value
}

func (v *NullableGroupStatus) Set(val *GroupStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupStatus(val *GroupStatus) *NullableGroupStatus {
	return &NullableGroupStatus{value: val, isSet: true}
}

func (v NullableGroupStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


