/*
Halo

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.20.18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package extension_sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SearchEngineSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchEngineSpec{}

// SearchEngineSpec struct for SearchEngineSpec
type SearchEngineSpec struct {
	Description *string `json:"description,omitempty"`
	DisplayName string `json:"displayName"`
	Logo *string `json:"logo,omitempty"`
	PostSearchImpl *string `json:"postSearchImpl,omitempty"`
	SettingRef *Ref `json:"settingRef,omitempty"`
	Website *string `json:"website,omitempty"`
}

type _SearchEngineSpec SearchEngineSpec

// NewSearchEngineSpec instantiates a new SearchEngineSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchEngineSpec(displayName string) *SearchEngineSpec {
	this := SearchEngineSpec{}
	this.DisplayName = displayName
	return &this
}

// NewSearchEngineSpecWithDefaults instantiates a new SearchEngineSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchEngineSpecWithDefaults() *SearchEngineSpec {
	this := SearchEngineSpec{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SearchEngineSpec) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchEngineSpec) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SearchEngineSpec) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SearchEngineSpec) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value
func (o *SearchEngineSpec) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *SearchEngineSpec) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *SearchEngineSpec) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *SearchEngineSpec) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchEngineSpec) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *SearchEngineSpec) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *SearchEngineSpec) SetLogo(v string) {
	o.Logo = &v
}

// GetPostSearchImpl returns the PostSearchImpl field value if set, zero value otherwise.
func (o *SearchEngineSpec) GetPostSearchImpl() string {
	if o == nil || IsNil(o.PostSearchImpl) {
		var ret string
		return ret
	}
	return *o.PostSearchImpl
}

// GetPostSearchImplOk returns a tuple with the PostSearchImpl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchEngineSpec) GetPostSearchImplOk() (*string, bool) {
	if o == nil || IsNil(o.PostSearchImpl) {
		return nil, false
	}
	return o.PostSearchImpl, true
}

// HasPostSearchImpl returns a boolean if a field has been set.
func (o *SearchEngineSpec) HasPostSearchImpl() bool {
	if o != nil && !IsNil(o.PostSearchImpl) {
		return true
	}

	return false
}

// SetPostSearchImpl gets a reference to the given string and assigns it to the PostSearchImpl field.
func (o *SearchEngineSpec) SetPostSearchImpl(v string) {
	o.PostSearchImpl = &v
}

// GetSettingRef returns the SettingRef field value if set, zero value otherwise.
func (o *SearchEngineSpec) GetSettingRef() Ref {
	if o == nil || IsNil(o.SettingRef) {
		var ret Ref
		return ret
	}
	return *o.SettingRef
}

// GetSettingRefOk returns a tuple with the SettingRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchEngineSpec) GetSettingRefOk() (*Ref, bool) {
	if o == nil || IsNil(o.SettingRef) {
		return nil, false
	}
	return o.SettingRef, true
}

// HasSettingRef returns a boolean if a field has been set.
func (o *SearchEngineSpec) HasSettingRef() bool {
	if o != nil && !IsNil(o.SettingRef) {
		return true
	}

	return false
}

// SetSettingRef gets a reference to the given Ref and assigns it to the SettingRef field.
func (o *SearchEngineSpec) SetSettingRef(v Ref) {
	o.SettingRef = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *SearchEngineSpec) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchEngineSpec) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *SearchEngineSpec) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *SearchEngineSpec) SetWebsite(v string) {
	o.Website = &v
}

func (o SearchEngineSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchEngineSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["displayName"] = o.DisplayName
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.PostSearchImpl) {
		toSerialize["postSearchImpl"] = o.PostSearchImpl
	}
	if !IsNil(o.SettingRef) {
		toSerialize["settingRef"] = o.SettingRef
	}
	if !IsNil(o.Website) {
		toSerialize["website"] = o.Website
	}
	return toSerialize, nil
}

func (o *SearchEngineSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"displayName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSearchEngineSpec := _SearchEngineSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSearchEngineSpec)

	if err != nil {
		return err
	}

	*o = SearchEngineSpec(varSearchEngineSpec)

	return err
}

type NullableSearchEngineSpec struct {
	value *SearchEngineSpec
	isSet bool
}

func (v NullableSearchEngineSpec) Get() *SearchEngineSpec {
	return v.value
}

func (v *NullableSearchEngineSpec) Set(val *SearchEngineSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchEngineSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchEngineSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchEngineSpec(val *SearchEngineSpec) *NullableSearchEngineSpec {
	return &NullableSearchEngineSpec{value: val, isSet: true}
}

func (v NullableSearchEngineSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchEngineSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


