/*
Halo

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.20.18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package extension_sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PolicyList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyList{}

// PolicyList struct for PolicyList
type PolicyList struct {
	// Indicates whether current page is the first page.
	First bool `json:"first"`
	// Indicates whether current page has previous page.
	HasNext bool `json:"hasNext"`
	// Indicates whether current page has previous page.
	HasPrevious bool `json:"hasPrevious"`
	// A chunk of items.
	Items []Policy `json:"items"`
	// Indicates whether current page is the last page.
	Last bool `json:"last"`
	// Page number, starts from 1. If not set or equal to 0, it means no pagination.
	Page int32 `json:"page"`
	// Size of each page. If not set or equal to 0, it means no pagination.
	Size int32 `json:"size"`
	// Total elements.
	Total int64 `json:"total"`
	// Indicates total pages.
	TotalPages int64 `json:"totalPages"`
}

type _PolicyList PolicyList

// NewPolicyList instantiates a new PolicyList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyList(first bool, hasNext bool, hasPrevious bool, items []Policy, last bool, page int32, size int32, total int64, totalPages int64) *PolicyList {
	this := PolicyList{}
	this.First = first
	this.HasNext = hasNext
	this.HasPrevious = hasPrevious
	this.Items = items
	this.Last = last
	this.Page = page
	this.Size = size
	this.Total = total
	this.TotalPages = totalPages
	return &this
}

// NewPolicyListWithDefaults instantiates a new PolicyList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyListWithDefaults() *PolicyList {
	this := PolicyList{}
	return &this
}

// GetFirst returns the First field value
func (o *PolicyList) GetFirst() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.First
}

// GetFirstOk returns a tuple with the First field value
// and a boolean to check if the value has been set.
func (o *PolicyList) GetFirstOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.First, true
}

// SetFirst sets field value
func (o *PolicyList) SetFirst(v bool) {
	o.First = v
}

// GetHasNext returns the HasNext field value
func (o *PolicyList) GetHasNext() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasNext
}

// GetHasNextOk returns a tuple with the HasNext field value
// and a boolean to check if the value has been set.
func (o *PolicyList) GetHasNextOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasNext, true
}

// SetHasNext sets field value
func (o *PolicyList) SetHasNext(v bool) {
	o.HasNext = v
}

// GetHasPrevious returns the HasPrevious field value
func (o *PolicyList) GetHasPrevious() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasPrevious
}

// GetHasPreviousOk returns a tuple with the HasPrevious field value
// and a boolean to check if the value has been set.
func (o *PolicyList) GetHasPreviousOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasPrevious, true
}

// SetHasPrevious sets field value
func (o *PolicyList) SetHasPrevious(v bool) {
	o.HasPrevious = v
}

// GetItems returns the Items field value
func (o *PolicyList) GetItems() []Policy {
	if o == nil {
		var ret []Policy
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *PolicyList) GetItemsOk() ([]Policy, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *PolicyList) SetItems(v []Policy) {
	o.Items = v
}

// GetLast returns the Last field value
func (o *PolicyList) GetLast() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Last
}

// GetLastOk returns a tuple with the Last field value
// and a boolean to check if the value has been set.
func (o *PolicyList) GetLastOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Last, true
}

// SetLast sets field value
func (o *PolicyList) SetLast(v bool) {
	o.Last = v
}

// GetPage returns the Page field value
func (o *PolicyList) GetPage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *PolicyList) GetPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *PolicyList) SetPage(v int32) {
	o.Page = v
}

// GetSize returns the Size field value
func (o *PolicyList) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *PolicyList) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *PolicyList) SetSize(v int32) {
	o.Size = v
}

// GetTotal returns the Total field value
func (o *PolicyList) GetTotal() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *PolicyList) GetTotalOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *PolicyList) SetTotal(v int64) {
	o.Total = v
}

// GetTotalPages returns the TotalPages field value
func (o *PolicyList) GetTotalPages() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalPages
}

// GetTotalPagesOk returns a tuple with the TotalPages field value
// and a boolean to check if the value has been set.
func (o *PolicyList) GetTotalPagesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalPages, true
}

// SetTotalPages sets field value
func (o *PolicyList) SetTotalPages(v int64) {
	o.TotalPages = v
}

func (o PolicyList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["first"] = o.First
	toSerialize["hasNext"] = o.HasNext
	toSerialize["hasPrevious"] = o.HasPrevious
	toSerialize["items"] = o.Items
	toSerialize["last"] = o.Last
	toSerialize["page"] = o.Page
	toSerialize["size"] = o.Size
	toSerialize["total"] = o.Total
	toSerialize["totalPages"] = o.TotalPages
	return toSerialize, nil
}

func (o *PolicyList) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"first",
		"hasNext",
		"hasPrevious",
		"items",
		"last",
		"page",
		"size",
		"total",
		"totalPages",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPolicyList := _PolicyList{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPolicyList)

	if err != nil {
		return err
	}

	*o = PolicyList(varPolicyList)

	return err
}

type NullablePolicyList struct {
	value *PolicyList
	isSet bool
}

func (v NullablePolicyList) Get() *PolicyList {
	return v.value
}

func (v *NullablePolicyList) Set(val *PolicyList) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyList) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyList(val *PolicyList) *NullablePolicyList {
	return &NullablePolicyList{value: val, isSet: true}
}

func (v NullablePolicyList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


