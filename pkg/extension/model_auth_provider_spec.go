/*
Halo

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.20.18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package extension_sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AuthProviderSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthProviderSpec{}

// AuthProviderSpec struct for AuthProviderSpec
type AuthProviderSpec struct {
	AuthType string `json:"authType"`
	// Authentication url of the auth provider
	AuthenticationUrl string `json:"authenticationUrl"`
	BindingUrl *string `json:"bindingUrl,omitempty"`
	ConfigMapRef *ConfigMapRef `json:"configMapRef,omitempty"`
	Description *string `json:"description,omitempty"`
	// Display name of the auth provider
	DisplayName string `json:"displayName"`
	HelpPage *string `json:"helpPage,omitempty"`
	Logo *string `json:"logo,omitempty"`
	Method *string `json:"method,omitempty"`
	RememberMeSupport *bool `json:"rememberMeSupport,omitempty"`
	SettingRef *SettingRef `json:"settingRef,omitempty"`
	UnbindUrl *string `json:"unbindUrl,omitempty"`
	Website *string `json:"website,omitempty"`
}

type _AuthProviderSpec AuthProviderSpec

// NewAuthProviderSpec instantiates a new AuthProviderSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthProviderSpec(authType string, authenticationUrl string, displayName string) *AuthProviderSpec {
	this := AuthProviderSpec{}
	this.AuthType = authType
	this.AuthenticationUrl = authenticationUrl
	this.DisplayName = displayName
	return &this
}

// NewAuthProviderSpecWithDefaults instantiates a new AuthProviderSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthProviderSpecWithDefaults() *AuthProviderSpec {
	this := AuthProviderSpec{}
	return &this
}

// GetAuthType returns the AuthType field value
func (o *AuthProviderSpec) GetAuthType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthType
}

// GetAuthTypeOk returns a tuple with the AuthType field value
// and a boolean to check if the value has been set.
func (o *AuthProviderSpec) GetAuthTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthType, true
}

// SetAuthType sets field value
func (o *AuthProviderSpec) SetAuthType(v string) {
	o.AuthType = v
}

// GetAuthenticationUrl returns the AuthenticationUrl field value
func (o *AuthProviderSpec) GetAuthenticationUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthenticationUrl
}

// GetAuthenticationUrlOk returns a tuple with the AuthenticationUrl field value
// and a boolean to check if the value has been set.
func (o *AuthProviderSpec) GetAuthenticationUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthenticationUrl, true
}

// SetAuthenticationUrl sets field value
func (o *AuthProviderSpec) SetAuthenticationUrl(v string) {
	o.AuthenticationUrl = v
}

// GetBindingUrl returns the BindingUrl field value if set, zero value otherwise.
func (o *AuthProviderSpec) GetBindingUrl() string {
	if o == nil || IsNil(o.BindingUrl) {
		var ret string
		return ret
	}
	return *o.BindingUrl
}

// GetBindingUrlOk returns a tuple with the BindingUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthProviderSpec) GetBindingUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BindingUrl) {
		return nil, false
	}
	return o.BindingUrl, true
}

// HasBindingUrl returns a boolean if a field has been set.
func (o *AuthProviderSpec) HasBindingUrl() bool {
	if o != nil && !IsNil(o.BindingUrl) {
		return true
	}

	return false
}

// SetBindingUrl gets a reference to the given string and assigns it to the BindingUrl field.
func (o *AuthProviderSpec) SetBindingUrl(v string) {
	o.BindingUrl = &v
}

// GetConfigMapRef returns the ConfigMapRef field value if set, zero value otherwise.
func (o *AuthProviderSpec) GetConfigMapRef() ConfigMapRef {
	if o == nil || IsNil(o.ConfigMapRef) {
		var ret ConfigMapRef
		return ret
	}
	return *o.ConfigMapRef
}

// GetConfigMapRefOk returns a tuple with the ConfigMapRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthProviderSpec) GetConfigMapRefOk() (*ConfigMapRef, bool) {
	if o == nil || IsNil(o.ConfigMapRef) {
		return nil, false
	}
	return o.ConfigMapRef, true
}

// HasConfigMapRef returns a boolean if a field has been set.
func (o *AuthProviderSpec) HasConfigMapRef() bool {
	if o != nil && !IsNil(o.ConfigMapRef) {
		return true
	}

	return false
}

// SetConfigMapRef gets a reference to the given ConfigMapRef and assigns it to the ConfigMapRef field.
func (o *AuthProviderSpec) SetConfigMapRef(v ConfigMapRef) {
	o.ConfigMapRef = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AuthProviderSpec) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthProviderSpec) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AuthProviderSpec) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AuthProviderSpec) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value
func (o *AuthProviderSpec) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *AuthProviderSpec) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *AuthProviderSpec) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetHelpPage returns the HelpPage field value if set, zero value otherwise.
func (o *AuthProviderSpec) GetHelpPage() string {
	if o == nil || IsNil(o.HelpPage) {
		var ret string
		return ret
	}
	return *o.HelpPage
}

// GetHelpPageOk returns a tuple with the HelpPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthProviderSpec) GetHelpPageOk() (*string, bool) {
	if o == nil || IsNil(o.HelpPage) {
		return nil, false
	}
	return o.HelpPage, true
}

// HasHelpPage returns a boolean if a field has been set.
func (o *AuthProviderSpec) HasHelpPage() bool {
	if o != nil && !IsNil(o.HelpPage) {
		return true
	}

	return false
}

// SetHelpPage gets a reference to the given string and assigns it to the HelpPage field.
func (o *AuthProviderSpec) SetHelpPage(v string) {
	o.HelpPage = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *AuthProviderSpec) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthProviderSpec) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *AuthProviderSpec) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *AuthProviderSpec) SetLogo(v string) {
	o.Logo = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *AuthProviderSpec) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthProviderSpec) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *AuthProviderSpec) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *AuthProviderSpec) SetMethod(v string) {
	o.Method = &v
}

// GetRememberMeSupport returns the RememberMeSupport field value if set, zero value otherwise.
func (o *AuthProviderSpec) GetRememberMeSupport() bool {
	if o == nil || IsNil(o.RememberMeSupport) {
		var ret bool
		return ret
	}
	return *o.RememberMeSupport
}

// GetRememberMeSupportOk returns a tuple with the RememberMeSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthProviderSpec) GetRememberMeSupportOk() (*bool, bool) {
	if o == nil || IsNil(o.RememberMeSupport) {
		return nil, false
	}
	return o.RememberMeSupport, true
}

// HasRememberMeSupport returns a boolean if a field has been set.
func (o *AuthProviderSpec) HasRememberMeSupport() bool {
	if o != nil && !IsNil(o.RememberMeSupport) {
		return true
	}

	return false
}

// SetRememberMeSupport gets a reference to the given bool and assigns it to the RememberMeSupport field.
func (o *AuthProviderSpec) SetRememberMeSupport(v bool) {
	o.RememberMeSupport = &v
}

// GetSettingRef returns the SettingRef field value if set, zero value otherwise.
func (o *AuthProviderSpec) GetSettingRef() SettingRef {
	if o == nil || IsNil(o.SettingRef) {
		var ret SettingRef
		return ret
	}
	return *o.SettingRef
}

// GetSettingRefOk returns a tuple with the SettingRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthProviderSpec) GetSettingRefOk() (*SettingRef, bool) {
	if o == nil || IsNil(o.SettingRef) {
		return nil, false
	}
	return o.SettingRef, true
}

// HasSettingRef returns a boolean if a field has been set.
func (o *AuthProviderSpec) HasSettingRef() bool {
	if o != nil && !IsNil(o.SettingRef) {
		return true
	}

	return false
}

// SetSettingRef gets a reference to the given SettingRef and assigns it to the SettingRef field.
func (o *AuthProviderSpec) SetSettingRef(v SettingRef) {
	o.SettingRef = &v
}

// GetUnbindUrl returns the UnbindUrl field value if set, zero value otherwise.
func (o *AuthProviderSpec) GetUnbindUrl() string {
	if o == nil || IsNil(o.UnbindUrl) {
		var ret string
		return ret
	}
	return *o.UnbindUrl
}

// GetUnbindUrlOk returns a tuple with the UnbindUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthProviderSpec) GetUnbindUrlOk() (*string, bool) {
	if o == nil || IsNil(o.UnbindUrl) {
		return nil, false
	}
	return o.UnbindUrl, true
}

// HasUnbindUrl returns a boolean if a field has been set.
func (o *AuthProviderSpec) HasUnbindUrl() bool {
	if o != nil && !IsNil(o.UnbindUrl) {
		return true
	}

	return false
}

// SetUnbindUrl gets a reference to the given string and assigns it to the UnbindUrl field.
func (o *AuthProviderSpec) SetUnbindUrl(v string) {
	o.UnbindUrl = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *AuthProviderSpec) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthProviderSpec) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *AuthProviderSpec) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *AuthProviderSpec) SetWebsite(v string) {
	o.Website = &v
}

func (o AuthProviderSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthProviderSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["authType"] = o.AuthType
	toSerialize["authenticationUrl"] = o.AuthenticationUrl
	if !IsNil(o.BindingUrl) {
		toSerialize["bindingUrl"] = o.BindingUrl
	}
	if !IsNil(o.ConfigMapRef) {
		toSerialize["configMapRef"] = o.ConfigMapRef
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["displayName"] = o.DisplayName
	if !IsNil(o.HelpPage) {
		toSerialize["helpPage"] = o.HelpPage
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.RememberMeSupport) {
		toSerialize["rememberMeSupport"] = o.RememberMeSupport
	}
	if !IsNil(o.SettingRef) {
		toSerialize["settingRef"] = o.SettingRef
	}
	if !IsNil(o.UnbindUrl) {
		toSerialize["unbindUrl"] = o.UnbindUrl
	}
	if !IsNil(o.Website) {
		toSerialize["website"] = o.Website
	}
	return toSerialize, nil
}

func (o *AuthProviderSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"authType",
		"authenticationUrl",
		"displayName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAuthProviderSpec := _AuthProviderSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAuthProviderSpec)

	if err != nil {
		return err
	}

	*o = AuthProviderSpec(varAuthProviderSpec)

	return err
}

type NullableAuthProviderSpec struct {
	value *AuthProviderSpec
	isSet bool
}

func (v NullableAuthProviderSpec) Get() *AuthProviderSpec {
	return v.value
}

func (v *NullableAuthProviderSpec) Set(val *AuthProviderSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthProviderSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthProviderSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthProviderSpec(val *AuthProviderSpec) *NullableAuthProviderSpec {
	return &NullableAuthProviderSpec{value: val, isSet: true}
}

func (v NullableAuthProviderSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthProviderSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


