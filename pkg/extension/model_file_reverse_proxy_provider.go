/*
Halo

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.20.18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package extension_sdk

import (
	"encoding/json"
)

// checks if the FileReverseProxyProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileReverseProxyProvider{}

// FileReverseProxyProvider struct for FileReverseProxyProvider
type FileReverseProxyProvider struct {
	Directory *string `json:"directory,omitempty"`
	Filename *string `json:"filename,omitempty"`
}

// NewFileReverseProxyProvider instantiates a new FileReverseProxyProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileReverseProxyProvider() *FileReverseProxyProvider {
	this := FileReverseProxyProvider{}
	return &this
}

// NewFileReverseProxyProviderWithDefaults instantiates a new FileReverseProxyProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileReverseProxyProviderWithDefaults() *FileReverseProxyProvider {
	this := FileReverseProxyProvider{}
	return &this
}

// GetDirectory returns the Directory field value if set, zero value otherwise.
func (o *FileReverseProxyProvider) GetDirectory() string {
	if o == nil || IsNil(o.Directory) {
		var ret string
		return ret
	}
	return *o.Directory
}

// GetDirectoryOk returns a tuple with the Directory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileReverseProxyProvider) GetDirectoryOk() (*string, bool) {
	if o == nil || IsNil(o.Directory) {
		return nil, false
	}
	return o.Directory, true
}

// HasDirectory returns a boolean if a field has been set.
func (o *FileReverseProxyProvider) HasDirectory() bool {
	if o != nil && !IsNil(o.Directory) {
		return true
	}

	return false
}

// SetDirectory gets a reference to the given string and assigns it to the Directory field.
func (o *FileReverseProxyProvider) SetDirectory(v string) {
	o.Directory = &v
}

// GetFilename returns the Filename field value if set, zero value otherwise.
func (o *FileReverseProxyProvider) GetFilename() string {
	if o == nil || IsNil(o.Filename) {
		var ret string
		return ret
	}
	return *o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileReverseProxyProvider) GetFilenameOk() (*string, bool) {
	if o == nil || IsNil(o.Filename) {
		return nil, false
	}
	return o.Filename, true
}

// HasFilename returns a boolean if a field has been set.
func (o *FileReverseProxyProvider) HasFilename() bool {
	if o != nil && !IsNil(o.Filename) {
		return true
	}

	return false
}

// SetFilename gets a reference to the given string and assigns it to the Filename field.
func (o *FileReverseProxyProvider) SetFilename(v string) {
	o.Filename = &v
}

func (o FileReverseProxyProvider) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileReverseProxyProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Directory) {
		toSerialize["directory"] = o.Directory
	}
	if !IsNil(o.Filename) {
		toSerialize["filename"] = o.Filename
	}
	return toSerialize, nil
}

type NullableFileReverseProxyProvider struct {
	value *FileReverseProxyProvider
	isSet bool
}

func (v NullableFileReverseProxyProvider) Get() *FileReverseProxyProvider {
	return v.value
}

func (v *NullableFileReverseProxyProvider) Set(val *FileReverseProxyProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableFileReverseProxyProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableFileReverseProxyProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileReverseProxyProvider(val *FileReverseProxyProvider) *NullableFileReverseProxyProvider {
	return &NullableFileReverseProxyProvider{value: val, isSet: true}
}

func (v NullableFileReverseProxyProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileReverseProxyProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


