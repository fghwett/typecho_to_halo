/*
Halo

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.20.18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package extension_sdk

import (
	"encoding/json"
)

// checks if the ReplyStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplyStatus{}

// ReplyStatus struct for ReplyStatus
type ReplyStatus struct {
	ObservedVersion *int64 `json:"observedVersion,omitempty"`
}

// NewReplyStatus instantiates a new ReplyStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplyStatus() *ReplyStatus {
	this := ReplyStatus{}
	return &this
}

// NewReplyStatusWithDefaults instantiates a new ReplyStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplyStatusWithDefaults() *ReplyStatus {
	this := ReplyStatus{}
	return &this
}

// GetObservedVersion returns the ObservedVersion field value if set, zero value otherwise.
func (o *ReplyStatus) GetObservedVersion() int64 {
	if o == nil || IsNil(o.ObservedVersion) {
		var ret int64
		return ret
	}
	return *o.ObservedVersion
}

// GetObservedVersionOk returns a tuple with the ObservedVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplyStatus) GetObservedVersionOk() (*int64, bool) {
	if o == nil || IsNil(o.ObservedVersion) {
		return nil, false
	}
	return o.ObservedVersion, true
}

// HasObservedVersion returns a boolean if a field has been set.
func (o *ReplyStatus) HasObservedVersion() bool {
	if o != nil && !IsNil(o.ObservedVersion) {
		return true
	}

	return false
}

// SetObservedVersion gets a reference to the given int64 and assigns it to the ObservedVersion field.
func (o *ReplyStatus) SetObservedVersion(v int64) {
	o.ObservedVersion = &v
}

func (o ReplyStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplyStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObservedVersion) {
		toSerialize["observedVersion"] = o.ObservedVersion
	}
	return toSerialize, nil
}

type NullableReplyStatus struct {
	value *ReplyStatus
	isSet bool
}

func (v NullableReplyStatus) Get() *ReplyStatus {
	return v.value
}

func (v *NullableReplyStatus) Set(val *ReplyStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableReplyStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableReplyStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplyStatus(val *ReplyStatus) *NullableReplyStatus {
	return &NullableReplyStatus{value: val, isSet: true}
}

func (v NullableReplyStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplyStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


