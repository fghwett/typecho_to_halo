/*
Halo

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.20.18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package extension_sdk

import (
	"encoding/json"
	"time"
)

// checks if the PluginStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PluginStatus{}

// PluginStatus struct for PluginStatus
type PluginStatus struct {
	Conditions *[]Condition `json:"conditions,omitempty"`
	Entry *string `json:"entry,omitempty"`
	LastProbeState *string `json:"lastProbeState,omitempty"`
	LastStartTime *time.Time `json:"lastStartTime,omitempty"`
	// Load location of the plugin, often a path.
	LoadLocation *string `json:"loadLocation,omitempty"`
	Logo *string `json:"logo,omitempty"`
	Phase *string `json:"phase,omitempty"`
	Stylesheet *string `json:"stylesheet,omitempty"`
}

// NewPluginStatus instantiates a new PluginStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPluginStatus() *PluginStatus {
	this := PluginStatus{}
	return &this
}

// NewPluginStatusWithDefaults instantiates a new PluginStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPluginStatusWithDefaults() *PluginStatus {
	this := PluginStatus{}
	return &this
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *PluginStatus) GetConditions() []Condition {
	if o == nil || IsNil(o.Conditions) {
		var ret []Condition
		return ret
	}
	return *o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginStatus) GetConditionsOk() (*[]Condition, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *PluginStatus) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []Condition and assigns it to the Conditions field.
func (o *PluginStatus) SetConditions(v []Condition) {
	o.Conditions = &v
}

// GetEntry returns the Entry field value if set, zero value otherwise.
func (o *PluginStatus) GetEntry() string {
	if o == nil || IsNil(o.Entry) {
		var ret string
		return ret
	}
	return *o.Entry
}

// GetEntryOk returns a tuple with the Entry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginStatus) GetEntryOk() (*string, bool) {
	if o == nil || IsNil(o.Entry) {
		return nil, false
	}
	return o.Entry, true
}

// HasEntry returns a boolean if a field has been set.
func (o *PluginStatus) HasEntry() bool {
	if o != nil && !IsNil(o.Entry) {
		return true
	}

	return false
}

// SetEntry gets a reference to the given string and assigns it to the Entry field.
func (o *PluginStatus) SetEntry(v string) {
	o.Entry = &v
}

// GetLastProbeState returns the LastProbeState field value if set, zero value otherwise.
func (o *PluginStatus) GetLastProbeState() string {
	if o == nil || IsNil(o.LastProbeState) {
		var ret string
		return ret
	}
	return *o.LastProbeState
}

// GetLastProbeStateOk returns a tuple with the LastProbeState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginStatus) GetLastProbeStateOk() (*string, bool) {
	if o == nil || IsNil(o.LastProbeState) {
		return nil, false
	}
	return o.LastProbeState, true
}

// HasLastProbeState returns a boolean if a field has been set.
func (o *PluginStatus) HasLastProbeState() bool {
	if o != nil && !IsNil(o.LastProbeState) {
		return true
	}

	return false
}

// SetLastProbeState gets a reference to the given string and assigns it to the LastProbeState field.
func (o *PluginStatus) SetLastProbeState(v string) {
	o.LastProbeState = &v
}

// GetLastStartTime returns the LastStartTime field value if set, zero value otherwise.
func (o *PluginStatus) GetLastStartTime() time.Time {
	if o == nil || IsNil(o.LastStartTime) {
		var ret time.Time
		return ret
	}
	return *o.LastStartTime
}

// GetLastStartTimeOk returns a tuple with the LastStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginStatus) GetLastStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastStartTime) {
		return nil, false
	}
	return o.LastStartTime, true
}

// HasLastStartTime returns a boolean if a field has been set.
func (o *PluginStatus) HasLastStartTime() bool {
	if o != nil && !IsNil(o.LastStartTime) {
		return true
	}

	return false
}

// SetLastStartTime gets a reference to the given time.Time and assigns it to the LastStartTime field.
func (o *PluginStatus) SetLastStartTime(v time.Time) {
	o.LastStartTime = &v
}

// GetLoadLocation returns the LoadLocation field value if set, zero value otherwise.
func (o *PluginStatus) GetLoadLocation() string {
	if o == nil || IsNil(o.LoadLocation) {
		var ret string
		return ret
	}
	return *o.LoadLocation
}

// GetLoadLocationOk returns a tuple with the LoadLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginStatus) GetLoadLocationOk() (*string, bool) {
	if o == nil || IsNil(o.LoadLocation) {
		return nil, false
	}
	return o.LoadLocation, true
}

// HasLoadLocation returns a boolean if a field has been set.
func (o *PluginStatus) HasLoadLocation() bool {
	if o != nil && !IsNil(o.LoadLocation) {
		return true
	}

	return false
}

// SetLoadLocation gets a reference to the given string and assigns it to the LoadLocation field.
func (o *PluginStatus) SetLoadLocation(v string) {
	o.LoadLocation = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *PluginStatus) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginStatus) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *PluginStatus) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *PluginStatus) SetLogo(v string) {
	o.Logo = &v
}

// GetPhase returns the Phase field value if set, zero value otherwise.
func (o *PluginStatus) GetPhase() string {
	if o == nil || IsNil(o.Phase) {
		var ret string
		return ret
	}
	return *o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginStatus) GetPhaseOk() (*string, bool) {
	if o == nil || IsNil(o.Phase) {
		return nil, false
	}
	return o.Phase, true
}

// HasPhase returns a boolean if a field has been set.
func (o *PluginStatus) HasPhase() bool {
	if o != nil && !IsNil(o.Phase) {
		return true
	}

	return false
}

// SetPhase gets a reference to the given string and assigns it to the Phase field.
func (o *PluginStatus) SetPhase(v string) {
	o.Phase = &v
}

// GetStylesheet returns the Stylesheet field value if set, zero value otherwise.
func (o *PluginStatus) GetStylesheet() string {
	if o == nil || IsNil(o.Stylesheet) {
		var ret string
		return ret
	}
	return *o.Stylesheet
}

// GetStylesheetOk returns a tuple with the Stylesheet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginStatus) GetStylesheetOk() (*string, bool) {
	if o == nil || IsNil(o.Stylesheet) {
		return nil, false
	}
	return o.Stylesheet, true
}

// HasStylesheet returns a boolean if a field has been set.
func (o *PluginStatus) HasStylesheet() bool {
	if o != nil && !IsNil(o.Stylesheet) {
		return true
	}

	return false
}

// SetStylesheet gets a reference to the given string and assigns it to the Stylesheet field.
func (o *PluginStatus) SetStylesheet(v string) {
	o.Stylesheet = &v
}

func (o PluginStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PluginStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if !IsNil(o.Entry) {
		toSerialize["entry"] = o.Entry
	}
	if !IsNil(o.LastProbeState) {
		toSerialize["lastProbeState"] = o.LastProbeState
	}
	if !IsNil(o.LastStartTime) {
		toSerialize["lastStartTime"] = o.LastStartTime
	}
	if !IsNil(o.LoadLocation) {
		toSerialize["loadLocation"] = o.LoadLocation
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.Phase) {
		toSerialize["phase"] = o.Phase
	}
	if !IsNil(o.Stylesheet) {
		toSerialize["stylesheet"] = o.Stylesheet
	}
	return toSerialize, nil
}

type NullablePluginStatus struct {
	value *PluginStatus
	isSet bool
}

func (v NullablePluginStatus) Get() *PluginStatus {
	return v.value
}

func (v *NullablePluginStatus) Set(val *PluginStatus) {
	v.value = val
	v.isSet = true
}

func (v NullablePluginStatus) IsSet() bool {
	return v.isSet
}

func (v *NullablePluginStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePluginStatus(val *PluginStatus) *NullablePluginStatus {
	return &NullablePluginStatus{value: val, isSet: true}
}

func (v NullablePluginStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePluginStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


