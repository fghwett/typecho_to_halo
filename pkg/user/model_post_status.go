/*
Halo

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.20.18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package user_sdk

import (
	"encoding/json"
	"time"
)

// checks if the PostStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostStatus{}

// PostStatus struct for PostStatus
type PostStatus struct {
	CommentsCount *int32 `json:"commentsCount,omitempty"`
	Conditions *[]Condition `json:"conditions,omitempty"`
	Contributors []string `json:"contributors,omitempty"`
	Excerpt *string `json:"excerpt,omitempty"`
	HideFromList *bool `json:"hideFromList,omitempty"`
	InProgress *bool `json:"inProgress,omitempty"`
	LastModifyTime *time.Time `json:"lastModifyTime,omitempty"`
	ObservedVersion *int64 `json:"observedVersion,omitempty"`
	Permalink *string `json:"permalink,omitempty"`
	Phase *string `json:"phase,omitempty"`
}

// NewPostStatus instantiates a new PostStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostStatus() *PostStatus {
	this := PostStatus{}
	return &this
}

// NewPostStatusWithDefaults instantiates a new PostStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostStatusWithDefaults() *PostStatus {
	this := PostStatus{}
	return &this
}

// GetCommentsCount returns the CommentsCount field value if set, zero value otherwise.
func (o *PostStatus) GetCommentsCount() int32 {
	if o == nil || IsNil(o.CommentsCount) {
		var ret int32
		return ret
	}
	return *o.CommentsCount
}

// GetCommentsCountOk returns a tuple with the CommentsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostStatus) GetCommentsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.CommentsCount) {
		return nil, false
	}
	return o.CommentsCount, true
}

// HasCommentsCount returns a boolean if a field has been set.
func (o *PostStatus) HasCommentsCount() bool {
	if o != nil && !IsNil(o.CommentsCount) {
		return true
	}

	return false
}

// SetCommentsCount gets a reference to the given int32 and assigns it to the CommentsCount field.
func (o *PostStatus) SetCommentsCount(v int32) {
	o.CommentsCount = &v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *PostStatus) GetConditions() []Condition {
	if o == nil || IsNil(o.Conditions) {
		var ret []Condition
		return ret
	}
	return *o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostStatus) GetConditionsOk() (*[]Condition, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *PostStatus) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []Condition and assigns it to the Conditions field.
func (o *PostStatus) SetConditions(v []Condition) {
	o.Conditions = &v
}

// GetContributors returns the Contributors field value if set, zero value otherwise.
func (o *PostStatus) GetContributors() []string {
	if o == nil || IsNil(o.Contributors) {
		var ret []string
		return ret
	}
	return o.Contributors
}

// GetContributorsOk returns a tuple with the Contributors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostStatus) GetContributorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Contributors) {
		return nil, false
	}
	return o.Contributors, true
}

// HasContributors returns a boolean if a field has been set.
func (o *PostStatus) HasContributors() bool {
	if o != nil && !IsNil(o.Contributors) {
		return true
	}

	return false
}

// SetContributors gets a reference to the given []string and assigns it to the Contributors field.
func (o *PostStatus) SetContributors(v []string) {
	o.Contributors = v
}

// GetExcerpt returns the Excerpt field value if set, zero value otherwise.
func (o *PostStatus) GetExcerpt() string {
	if o == nil || IsNil(o.Excerpt) {
		var ret string
		return ret
	}
	return *o.Excerpt
}

// GetExcerptOk returns a tuple with the Excerpt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostStatus) GetExcerptOk() (*string, bool) {
	if o == nil || IsNil(o.Excerpt) {
		return nil, false
	}
	return o.Excerpt, true
}

// HasExcerpt returns a boolean if a field has been set.
func (o *PostStatus) HasExcerpt() bool {
	if o != nil && !IsNil(o.Excerpt) {
		return true
	}

	return false
}

// SetExcerpt gets a reference to the given string and assigns it to the Excerpt field.
func (o *PostStatus) SetExcerpt(v string) {
	o.Excerpt = &v
}

// GetHideFromList returns the HideFromList field value if set, zero value otherwise.
func (o *PostStatus) GetHideFromList() bool {
	if o == nil || IsNil(o.HideFromList) {
		var ret bool
		return ret
	}
	return *o.HideFromList
}

// GetHideFromListOk returns a tuple with the HideFromList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostStatus) GetHideFromListOk() (*bool, bool) {
	if o == nil || IsNil(o.HideFromList) {
		return nil, false
	}
	return o.HideFromList, true
}

// HasHideFromList returns a boolean if a field has been set.
func (o *PostStatus) HasHideFromList() bool {
	if o != nil && !IsNil(o.HideFromList) {
		return true
	}

	return false
}

// SetHideFromList gets a reference to the given bool and assigns it to the HideFromList field.
func (o *PostStatus) SetHideFromList(v bool) {
	o.HideFromList = &v
}

// GetInProgress returns the InProgress field value if set, zero value otherwise.
func (o *PostStatus) GetInProgress() bool {
	if o == nil || IsNil(o.InProgress) {
		var ret bool
		return ret
	}
	return *o.InProgress
}

// GetInProgressOk returns a tuple with the InProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostStatus) GetInProgressOk() (*bool, bool) {
	if o == nil || IsNil(o.InProgress) {
		return nil, false
	}
	return o.InProgress, true
}

// HasInProgress returns a boolean if a field has been set.
func (o *PostStatus) HasInProgress() bool {
	if o != nil && !IsNil(o.InProgress) {
		return true
	}

	return false
}

// SetInProgress gets a reference to the given bool and assigns it to the InProgress field.
func (o *PostStatus) SetInProgress(v bool) {
	o.InProgress = &v
}

// GetLastModifyTime returns the LastModifyTime field value if set, zero value otherwise.
func (o *PostStatus) GetLastModifyTime() time.Time {
	if o == nil || IsNil(o.LastModifyTime) {
		var ret time.Time
		return ret
	}
	return *o.LastModifyTime
}

// GetLastModifyTimeOk returns a tuple with the LastModifyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostStatus) GetLastModifyTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastModifyTime) {
		return nil, false
	}
	return o.LastModifyTime, true
}

// HasLastModifyTime returns a boolean if a field has been set.
func (o *PostStatus) HasLastModifyTime() bool {
	if o != nil && !IsNil(o.LastModifyTime) {
		return true
	}

	return false
}

// SetLastModifyTime gets a reference to the given time.Time and assigns it to the LastModifyTime field.
func (o *PostStatus) SetLastModifyTime(v time.Time) {
	o.LastModifyTime = &v
}

// GetObservedVersion returns the ObservedVersion field value if set, zero value otherwise.
func (o *PostStatus) GetObservedVersion() int64 {
	if o == nil || IsNil(o.ObservedVersion) {
		var ret int64
		return ret
	}
	return *o.ObservedVersion
}

// GetObservedVersionOk returns a tuple with the ObservedVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostStatus) GetObservedVersionOk() (*int64, bool) {
	if o == nil || IsNil(o.ObservedVersion) {
		return nil, false
	}
	return o.ObservedVersion, true
}

// HasObservedVersion returns a boolean if a field has been set.
func (o *PostStatus) HasObservedVersion() bool {
	if o != nil && !IsNil(o.ObservedVersion) {
		return true
	}

	return false
}

// SetObservedVersion gets a reference to the given int64 and assigns it to the ObservedVersion field.
func (o *PostStatus) SetObservedVersion(v int64) {
	o.ObservedVersion = &v
}

// GetPermalink returns the Permalink field value if set, zero value otherwise.
func (o *PostStatus) GetPermalink() string {
	if o == nil || IsNil(o.Permalink) {
		var ret string
		return ret
	}
	return *o.Permalink
}

// GetPermalinkOk returns a tuple with the Permalink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostStatus) GetPermalinkOk() (*string, bool) {
	if o == nil || IsNil(o.Permalink) {
		return nil, false
	}
	return o.Permalink, true
}

// HasPermalink returns a boolean if a field has been set.
func (o *PostStatus) HasPermalink() bool {
	if o != nil && !IsNil(o.Permalink) {
		return true
	}

	return false
}

// SetPermalink gets a reference to the given string and assigns it to the Permalink field.
func (o *PostStatus) SetPermalink(v string) {
	o.Permalink = &v
}

// GetPhase returns the Phase field value if set, zero value otherwise.
func (o *PostStatus) GetPhase() string {
	if o == nil || IsNil(o.Phase) {
		var ret string
		return ret
	}
	return *o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostStatus) GetPhaseOk() (*string, bool) {
	if o == nil || IsNil(o.Phase) {
		return nil, false
	}
	return o.Phase, true
}

// HasPhase returns a boolean if a field has been set.
func (o *PostStatus) HasPhase() bool {
	if o != nil && !IsNil(o.Phase) {
		return true
	}

	return false
}

// SetPhase gets a reference to the given string and assigns it to the Phase field.
func (o *PostStatus) SetPhase(v string) {
	o.Phase = &v
}

func (o PostStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CommentsCount) {
		toSerialize["commentsCount"] = o.CommentsCount
	}
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if !IsNil(o.Contributors) {
		toSerialize["contributors"] = o.Contributors
	}
	if !IsNil(o.Excerpt) {
		toSerialize["excerpt"] = o.Excerpt
	}
	if !IsNil(o.HideFromList) {
		toSerialize["hideFromList"] = o.HideFromList
	}
	if !IsNil(o.InProgress) {
		toSerialize["inProgress"] = o.InProgress
	}
	if !IsNil(o.LastModifyTime) {
		toSerialize["lastModifyTime"] = o.LastModifyTime
	}
	if !IsNil(o.ObservedVersion) {
		toSerialize["observedVersion"] = o.ObservedVersion
	}
	if !IsNil(o.Permalink) {
		toSerialize["permalink"] = o.Permalink
	}
	if !IsNil(o.Phase) {
		toSerialize["phase"] = o.Phase
	}
	return toSerialize, nil
}

type NullablePostStatus struct {
	value *PostStatus
	isSet bool
}

func (v NullablePostStatus) Get() *PostStatus {
	return v.value
}

func (v *NullablePostStatus) Set(val *PostStatus) {
	v.value = val
	v.isSet = true
}

func (v NullablePostStatus) IsSet() bool {
	return v.isSet
}

func (v *NullablePostStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostStatus(val *PostStatus) *NullablePostStatus {
	return &NullablePostStatus{value: val, isSet: true}
}

func (v NullablePostStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


