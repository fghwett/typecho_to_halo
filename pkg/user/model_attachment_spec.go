/*
Halo

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.20.18
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package user_sdk

import (
	"encoding/json"
)

// checks if the AttachmentSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttachmentSpec{}

// AttachmentSpec struct for AttachmentSpec
type AttachmentSpec struct {
	// Display name of attachment
	DisplayName *string `json:"displayName,omitempty"`
	// Group name
	GroupName *string `json:"groupName,omitempty"`
	// Media type of attachment
	MediaType *string `json:"mediaType,omitempty"`
	// Name of User who uploads the attachment
	OwnerName *string `json:"ownerName,omitempty"`
	// Policy name
	PolicyName *string `json:"policyName,omitempty"`
	// Size of attachment. Unit is Byte
	Size *int64 `json:"size,omitempty"`
	// Tags of attachment
	Tags []string `json:"tags,omitempty"`
}

// NewAttachmentSpec instantiates a new AttachmentSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttachmentSpec() *AttachmentSpec {
	this := AttachmentSpec{}
	return &this
}

// NewAttachmentSpecWithDefaults instantiates a new AttachmentSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttachmentSpecWithDefaults() *AttachmentSpec {
	this := AttachmentSpec{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *AttachmentSpec) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentSpec) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *AttachmentSpec) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *AttachmentSpec) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *AttachmentSpec) GetGroupName() string {
	if o == nil || IsNil(o.GroupName) {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentSpec) GetGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.GroupName) {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *AttachmentSpec) HasGroupName() bool {
	if o != nil && !IsNil(o.GroupName) {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *AttachmentSpec) SetGroupName(v string) {
	o.GroupName = &v
}

// GetMediaType returns the MediaType field value if set, zero value otherwise.
func (o *AttachmentSpec) GetMediaType() string {
	if o == nil || IsNil(o.MediaType) {
		var ret string
		return ret
	}
	return *o.MediaType
}

// GetMediaTypeOk returns a tuple with the MediaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentSpec) GetMediaTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MediaType) {
		return nil, false
	}
	return o.MediaType, true
}

// HasMediaType returns a boolean if a field has been set.
func (o *AttachmentSpec) HasMediaType() bool {
	if o != nil && !IsNil(o.MediaType) {
		return true
	}

	return false
}

// SetMediaType gets a reference to the given string and assigns it to the MediaType field.
func (o *AttachmentSpec) SetMediaType(v string) {
	o.MediaType = &v
}

// GetOwnerName returns the OwnerName field value if set, zero value otherwise.
func (o *AttachmentSpec) GetOwnerName() string {
	if o == nil || IsNil(o.OwnerName) {
		var ret string
		return ret
	}
	return *o.OwnerName
}

// GetOwnerNameOk returns a tuple with the OwnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentSpec) GetOwnerNameOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerName) {
		return nil, false
	}
	return o.OwnerName, true
}

// HasOwnerName returns a boolean if a field has been set.
func (o *AttachmentSpec) HasOwnerName() bool {
	if o != nil && !IsNil(o.OwnerName) {
		return true
	}

	return false
}

// SetOwnerName gets a reference to the given string and assigns it to the OwnerName field.
func (o *AttachmentSpec) SetOwnerName(v string) {
	o.OwnerName = &v
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise.
func (o *AttachmentSpec) GetPolicyName() string {
	if o == nil || IsNil(o.PolicyName) {
		var ret string
		return ret
	}
	return *o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentSpec) GetPolicyNameOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyName) {
		return nil, false
	}
	return o.PolicyName, true
}

// HasPolicyName returns a boolean if a field has been set.
func (o *AttachmentSpec) HasPolicyName() bool {
	if o != nil && !IsNil(o.PolicyName) {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given string and assigns it to the PolicyName field.
func (o *AttachmentSpec) SetPolicyName(v string) {
	o.PolicyName = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *AttachmentSpec) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentSpec) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *AttachmentSpec) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *AttachmentSpec) SetSize(v int64) {
	o.Size = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *AttachmentSpec) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentSpec) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AttachmentSpec) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *AttachmentSpec) SetTags(v []string) {
	o.Tags = v
}

func (o AttachmentSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttachmentSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.GroupName) {
		toSerialize["groupName"] = o.GroupName
	}
	if !IsNil(o.MediaType) {
		toSerialize["mediaType"] = o.MediaType
	}
	if !IsNil(o.OwnerName) {
		toSerialize["ownerName"] = o.OwnerName
	}
	if !IsNil(o.PolicyName) {
		toSerialize["policyName"] = o.PolicyName
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableAttachmentSpec struct {
	value *AttachmentSpec
	isSet bool
}

func (v NullableAttachmentSpec) Get() *AttachmentSpec {
	return v.value
}

func (v *NullableAttachmentSpec) Set(val *AttachmentSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableAttachmentSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableAttachmentSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttachmentSpec(val *AttachmentSpec) *NullableAttachmentSpec {
	return &NullableAttachmentSpec{value: val, isSet: true}
}

func (v NullableAttachmentSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttachmentSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


